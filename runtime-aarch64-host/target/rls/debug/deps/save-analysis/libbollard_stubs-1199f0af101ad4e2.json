{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5","program":"/home/ms/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bollard_stubs","--edition=2018","/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1199f0af101ad4e2","-C","extra-filename=-1199f0af101ad4e2","--out-dir","/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps","-L","dependency=/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps","--extern","chrono=/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps/libchrono-3a10a23f12b9f536.rmeta","--extern","serde=/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps/libserde-7edeade3ddd70dbe.rmeta","--extern","serde_with=/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps/libserde_with-5f0003496674764e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ms/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ms/Data/repositories/git/golem/ya-runtime-vm/runtime-aarch64-host/target/rls/debug/deps/libbollard_stubs-1199f0af101ad4e2.rmeta"},"prelude":{"crate_id":{"name":"bollard_stubs","disambiguator":[10239170593901381593,9436267674792318159]},"crate_root":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src","external_crates":[{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":18,"id":{"name":"serde","disambiguator":[3900341783506281996,17919146948249682276]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":19,"id":{"name":"serde_derive","disambiguator":[9085427652038151137,6230523409835009507]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":20,"id":{"name":"chrono","disambiguator":[16499959792846439986,14527235796207627431]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":21,"id":{"name":"time","disambiguator":[3663330972426330007,8379902696862374787]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":22,"id":{"name":"libc","disambiguator":[6242217621416390269,4381149088672971492]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":23,"id":{"name":"num_integer","disambiguator":[4563751001602137380,10703455464430983843]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":24,"id":{"name":"num_traits","disambiguator":[9419895011931321132,315474784960854674]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":25,"id":{"name":"serde_with","disambiguator":[3455895281199484609,10686100031063322662]}},{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","num":26,"id":{"name":"serde_with_macros","disambiguator":[14133614387955996638,9856953603018023636]}}],"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","byte_start":0,"byte_end":270,"line_start":1,"line_end":10,"column_start":1,"column_end":16}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","byte_start":0,"byte_end":270,"line_start":1,"line_end":10,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs, trivial_casts, unused_variables, unused_mut,\n        unused_imports, unused_extern_crates, non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","byte_start":0,"byte_end":128,"line_start":1,"line_end":1,"column_start":1,"column_end":129}}]},{"kind":"Const","id":{"krate":0,"index":5},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","byte_start":218,"byte_end":227,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"BASE_PATH","qualname":"::BASE_PATH","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"models","qualname":"::models","value":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":15867},{"krate":0,"index":9},{"krate":0,"index":15869},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15877},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":15881},{"krate":0,"index":17},{"krate":0,"index":15883},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":15887},{"krate":0,"index":20},{"krate":0,"index":25},{"krate":0,"index":228},{"krate":0,"index":288},{"krate":0,"index":286},{"krate":0,"index":284},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":274},{"krate":0,"index":231},{"krate":0,"index":290},{"krate":0,"index":356},{"krate":0,"index":354},{"krate":0,"index":352},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":342},{"krate":0,"index":295},{"krate":0,"index":358},{"krate":0,"index":421},{"krate":0,"index":419},{"krate":0,"index":417},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":407},{"krate":0,"index":362},{"krate":0,"index":423},{"krate":0,"index":501},{"krate":0,"index":499},{"krate":0,"index":497},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":487},{"krate":0,"index":432},{"krate":0,"index":503},{"krate":0,"index":572},{"krate":0,"index":570},{"krate":0,"index":568},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":558},{"krate":0,"index":509},{"krate":0,"index":574},{"krate":0,"index":631},{"krate":0,"index":629},{"krate":0,"index":627},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":617},{"krate":0,"index":576},{"krate":0,"index":633},{"krate":0,"index":717},{"krate":0,"index":715},{"krate":0,"index":713},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":703},{"krate":0,"index":644},{"krate":0,"index":719},{"krate":0,"index":797},{"krate":0,"index":795},{"krate":0,"index":793},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":783},{"krate":0,"index":728},{"krate":0,"index":799},{"krate":0,"index":859},{"krate":0,"index":857},{"krate":0,"index":855},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":845},{"krate":0,"index":802},{"krate":0,"index":861},{"krate":0,"index":945},{"krate":0,"index":943},{"krate":0,"index":941},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":931},{"krate":0,"index":872},{"krate":0,"index":947},{"krate":0,"index":1007},{"krate":0,"index":1005},{"krate":0,"index":1003},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":993},{"krate":0,"index":950},{"krate":0,"index":1009},{"krate":0,"index":1078},{"krate":0,"index":1076},{"krate":0,"index":1074},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1064},{"krate":0,"index":1015},{"krate":0,"index":1080},{"krate":0,"index":1146},{"krate":0,"index":1144},{"krate":0,"index":1142},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1132},{"krate":0,"index":1085},{"krate":0,"index":1148},{"krate":0,"index":1208},{"krate":0,"index":1206},{"krate":0,"index":1204},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1194},{"krate":0,"index":1151},{"krate":0,"index":1210},{"krate":0,"index":1270},{"krate":0,"index":1268},{"krate":0,"index":1266},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1256},{"krate":0,"index":1213},{"krate":0,"index":1272},{"krate":0,"index":1332},{"krate":0,"index":1330},{"krate":0,"index":1328},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1318},{"krate":0,"index":1275},{"krate":0,"index":1334},{"krate":0,"index":1463},{"krate":0,"index":1461},{"krate":0,"index":1459},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1449},{"krate":0,"index":1360},{"krate":0,"index":1465},{"krate":0,"index":1544},{"krate":0,"index":1542},{"krate":0,"index":1540},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1530},{"krate":0,"index":1468},{"krate":0,"index":1546},{"krate":0,"index":1678},{"krate":0,"index":1676},{"krate":0,"index":1674},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1664},{"krate":0,"index":1573},{"krate":0,"index":1680},{"krate":0,"index":1740},{"krate":0,"index":1738},{"krate":0,"index":1736},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1726},{"krate":0,"index":1683},{"krate":0,"index":1742},{"krate":0,"index":1832},{"krate":0,"index":1830},{"krate":0,"index":1828},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1818},{"krate":0,"index":1755},{"krate":0,"index":1834},{"krate":0,"index":1921},{"krate":0,"index":1919},{"krate":0,"index":1918},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1913},{"krate":0,"index":1907},{"krate":0,"index":1856},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1851},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":1923},{"krate":0,"index":2022},{"krate":0,"index":2020},{"krate":0,"index":2018},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2008},{"krate":0,"index":1939},{"krate":0,"index":2024},{"krate":0,"index":2081},{"krate":0,"index":2079},{"krate":0,"index":2077},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2067},{"krate":0,"index":2026},{"krate":0,"index":2083},{"krate":0,"index":2140},{"krate":0,"index":2138},{"krate":0,"index":2136},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2126},{"krate":0,"index":2085},{"krate":0,"index":2142},{"krate":0,"index":2202},{"krate":0,"index":2200},{"krate":0,"index":2198},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2188},{"krate":0,"index":2145},{"krate":0,"index":2204},{"krate":0,"index":2261},{"krate":0,"index":2259},{"krate":0,"index":2257},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2247},{"krate":0,"index":2206},{"krate":0,"index":2263},{"krate":0,"index":2323},{"krate":0,"index":2321},{"krate":0,"index":2319},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2309},{"krate":0,"index":2266},{"krate":0,"index":2325},{"krate":0,"index":2382},{"krate":0,"index":2380},{"krate":0,"index":2378},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2368},{"krate":0,"index":2327},{"krate":0,"index":2384},{"krate":0,"index":2453},{"krate":0,"index":2451},{"krate":0,"index":2449},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2439},{"krate":0,"index":2390},{"krate":0,"index":2455},{"krate":0,"index":2518},{"krate":0,"index":2516},{"krate":0,"index":2514},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2504},{"krate":0,"index":2459},{"krate":0,"index":2520},{"krate":0,"index":2589},{"krate":0,"index":2587},{"krate":0,"index":2585},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2575},{"krate":0,"index":2526},{"krate":0,"index":2591},{"krate":0,"index":2670},{"krate":0,"index":2668},{"krate":0,"index":2666},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2656},{"krate":0,"index":2594},{"krate":0,"index":2672},{"krate":0,"index":2738},{"krate":0,"index":2736},{"krate":0,"index":2734},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2724},{"krate":0,"index":2677},{"krate":0,"index":2740},{"krate":0,"index":2812},{"krate":0,"index":2810},{"krate":0,"index":2808},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2798},{"krate":0,"index":2747},{"krate":0,"index":2814},{"krate":0,"index":2874},{"krate":0,"index":2872},{"krate":0,"index":2870},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2860},{"krate":0,"index":2817},{"krate":0,"index":2876},{"krate":0,"index":2939},{"krate":0,"index":2937},{"krate":0,"index":2935},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2925},{"krate":0,"index":2880},{"krate":0,"index":2941},{"krate":0,"index":3010},{"krate":0,"index":3008},{"krate":0,"index":3006},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":2996},{"krate":0,"index":2947},{"krate":0,"index":3012},{"krate":0,"index":3083},{"krate":0,"index":3081},{"krate":0,"index":3080},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3075},{"krate":0,"index":3069},{"krate":0,"index":3026},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3021},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":3085},{"krate":0,"index":3152},{"krate":0,"index":3150},{"krate":0,"index":3149},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3144},{"krate":0,"index":3138},{"krate":0,"index":3097},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3092},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":3154},{"krate":0,"index":3247},{"krate":0,"index":3245},{"krate":0,"index":3243},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3233},{"krate":0,"index":3168},{"krate":0,"index":3249},{"krate":0,"index":3309},{"krate":0,"index":3307},{"krate":0,"index":3305},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3295},{"krate":0,"index":3252},{"krate":0,"index":3311},{"krate":0,"index":3378},{"krate":0,"index":3376},{"krate":0,"index":3375},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3370},{"krate":0,"index":3364},{"krate":0,"index":3323},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3318},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":3380},{"krate":0,"index":3443},{"krate":0,"index":3441},{"krate":0,"index":3439},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3429},{"krate":0,"index":3384},{"krate":0,"index":3445},{"krate":0,"index":3505},{"krate":0,"index":3503},{"krate":0,"index":3501},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3491},{"krate":0,"index":3448},{"krate":0,"index":3507},{"krate":0,"index":3567},{"krate":0,"index":3565},{"krate":0,"index":3563},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3553},{"krate":0,"index":3510},{"krate":0,"index":3569},{"krate":0,"index":3626},{"krate":0,"index":3624},{"krate":0,"index":3622},{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3612},{"krate":0,"index":3571},{"krate":0,"index":3628},{"krate":0,"index":3712},{"krate":0,"index":3710},{"krate":0,"index":3708},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3698},{"krate":0,"index":3639},{"krate":0,"index":3714},{"krate":0,"index":3801},{"krate":0,"index":3799},{"krate":0,"index":3797},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3787},{"krate":0,"index":3726},{"krate":0,"index":3803},{"krate":0,"index":3863},{"krate":0,"index":3861},{"krate":0,"index":3859},{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3849},{"krate":0,"index":3806},{"krate":0,"index":59},{"krate":0,"index":3865},{"krate":0,"index":3925},{"krate":0,"index":3923},{"krate":0,"index":3921},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3911},{"krate":0,"index":3868},{"krate":0,"index":3927},{"krate":0,"index":3987},{"krate":0,"index":3985},{"krate":0,"index":3983},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3973},{"krate":0,"index":3930},{"krate":0,"index":3989},{"krate":0,"index":4049},{"krate":0,"index":4047},{"krate":0,"index":4045},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4035},{"krate":0,"index":3992},{"krate":0,"index":4051},{"krate":0,"index":4130},{"krate":0,"index":4128},{"krate":0,"index":4126},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4116},{"krate":0,"index":4054},{"krate":0,"index":4132},{"krate":0,"index":4195},{"krate":0,"index":4193},{"krate":0,"index":4191},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4181},{"krate":0,"index":4136},{"krate":0,"index":4197},{"krate":0,"index":4272},{"krate":0,"index":4270},{"krate":0,"index":4269},{"krate":0,"index":4266},{"krate":0,"index":4267},{"krate":0,"index":4264},{"krate":0,"index":4258},{"krate":0,"index":4213},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4208},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":4274},{"krate":0,"index":4343},{"krate":0,"index":4341},{"krate":0,"index":4339},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4329},{"krate":0,"index":4280},{"krate":0,"index":4345},{"krate":0,"index":4411},{"krate":0,"index":4409},{"krate":0,"index":4407},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4397},{"krate":0,"index":4350},{"krate":0,"index":4413},{"krate":0,"index":4504},{"krate":0,"index":4502},{"krate":0,"index":4500},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4490},{"krate":0,"index":4420},{"krate":0,"index":4506},{"krate":0,"index":4566},{"krate":0,"index":4564},{"krate":0,"index":4562},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4552},{"krate":0,"index":4509},{"krate":0,"index":4568},{"krate":0,"index":4663},{"krate":0,"index":4661},{"krate":0,"index":4660},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4655},{"krate":0,"index":4649},{"krate":0,"index":4594},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4589},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":4665},{"krate":0,"index":4722},{"krate":0,"index":4720},{"krate":0,"index":4718},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4708},{"krate":0,"index":4667},{"krate":0,"index":4724},{"krate":0,"index":4835},{"krate":0,"index":4833},{"krate":0,"index":4831},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4821},{"krate":0,"index":4744},{"krate":0,"index":4837},{"krate":0,"index":4897},{"krate":0,"index":4895},{"krate":0,"index":4893},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4883},{"krate":0,"index":4840},{"krate":0,"index":4899},{"krate":0,"index":4956},{"krate":0,"index":4954},{"krate":0,"index":4952},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4942},{"krate":0,"index":4901},{"krate":0,"index":4958},{"krate":0,"index":5015},{"krate":0,"index":5013},{"krate":0,"index":5011},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5001},{"krate":0,"index":4960},{"krate":0,"index":5017},{"krate":0,"index":5077},{"krate":0,"index":5075},{"krate":0,"index":5073},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5063},{"krate":0,"index":5020},{"krate":0,"index":5079},{"krate":0,"index":5142},{"krate":0,"index":5140},{"krate":0,"index":5138},{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5128},{"krate":0,"index":5083},{"krate":0,"index":5144},{"krate":0,"index":5213},{"krate":0,"index":5211},{"krate":0,"index":5209},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5199},{"krate":0,"index":5150},{"krate":0,"index":5215},{"krate":0,"index":5356},{"krate":0,"index":5354},{"krate":0,"index":5352},{"krate":0,"index":5348},{"krate":0,"index":5349},{"krate":0,"index":5342},{"krate":0,"index":5226},{"krate":0,"index":5358},{"krate":0,"index":5424},{"krate":0,"index":5422},{"krate":0,"index":5420},{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5410},{"krate":0,"index":5363},{"krate":0,"index":5426},{"krate":0,"index":5486},{"krate":0,"index":5484},{"krate":0,"index":5482},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5472},{"krate":0,"index":5429},{"krate":0,"index":5488},{"krate":0,"index":5551},{"krate":0,"index":5549},{"krate":0,"index":5547},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5537},{"krate":0,"index":5492},{"krate":0,"index":5553},{"krate":0,"index":5613},{"krate":0,"index":5611},{"krate":0,"index":5609},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5599},{"krate":0,"index":5556},{"krate":0,"index":5615},{"krate":0,"index":5694},{"krate":0,"index":5692},{"krate":0,"index":5691},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5686},{"krate":0,"index":5680},{"krate":0,"index":5633},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5628},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":5696},{"krate":0,"index":5759},{"krate":0,"index":5757},{"krate":0,"index":5755},{"krate":0,"index":5751},{"krate":0,"index":5752},{"krate":0,"index":5745},{"krate":0,"index":5700},{"krate":0,"index":5761},{"krate":0,"index":5839},{"krate":0,"index":5837},{"krate":0,"index":5835},{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5825},{"krate":0,"index":5770},{"krate":0,"index":5841},{"krate":0,"index":5916},{"krate":0,"index":5914},{"krate":0,"index":5913},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5908},{"krate":0,"index":5902},{"krate":0,"index":5857},{"krate":0,"index":5854},{"krate":0,"index":5855},{"krate":0,"index":5852},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":5918},{"krate":0,"index":5978},{"krate":0,"index":5976},{"krate":0,"index":5974},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5964},{"krate":0,"index":5921},{"krate":0,"index":5980},{"krate":0,"index":6063},{"krate":0,"index":6061},{"krate":0,"index":6060},{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6055},{"krate":0,"index":6049},{"krate":0,"index":6000},{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":5995},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":6065},{"krate":0,"index":6143},{"krate":0,"index":6141},{"krate":0,"index":6139},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6129},{"krate":0,"index":6074},{"krate":0,"index":6145},{"krate":0,"index":6205},{"krate":0,"index":6203},{"krate":0,"index":6201},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6191},{"krate":0,"index":6148},{"krate":0,"index":6207},{"krate":0,"index":6270},{"krate":0,"index":6268},{"krate":0,"index":6266},{"krate":0,"index":6262},{"krate":0,"index":6263},{"krate":0,"index":6256},{"krate":0,"index":6211},{"krate":0,"index":6272},{"krate":0,"index":6332},{"krate":0,"index":6330},{"krate":0,"index":6328},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6318},{"krate":0,"index":6275},{"krate":0,"index":6334},{"krate":0,"index":6427},{"krate":0,"index":6425},{"krate":0,"index":6423},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6413},{"krate":0,"index":6348},{"krate":0,"index":6429},{"krate":0,"index":6492},{"krate":0,"index":6490},{"krate":0,"index":6488},{"krate":0,"index":6484},{"krate":0,"index":6485},{"krate":0,"index":6478},{"krate":0,"index":6433},{"krate":0,"index":6494},{"krate":0,"index":6578},{"krate":0,"index":6576},{"krate":0,"index":6574},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6564},{"krate":0,"index":6505},{"krate":0,"index":6580},{"krate":0,"index":6649},{"krate":0,"index":6647},{"krate":0,"index":6645},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6635},{"krate":0,"index":6586},{"krate":0,"index":6651},{"krate":0,"index":6711},{"krate":0,"index":6709},{"krate":0,"index":6707},{"krate":0,"index":6703},{"krate":0,"index":6704},{"krate":0,"index":6697},{"krate":0,"index":6654},{"krate":0,"index":6713},{"krate":0,"index":6770},{"krate":0,"index":6768},{"krate":0,"index":6766},{"krate":0,"index":6762},{"krate":0,"index":6763},{"krate":0,"index":6756},{"krate":0,"index":6715},{"krate":0,"index":6772},{"krate":0,"index":6880},{"krate":0,"index":6878},{"krate":0,"index":6876},{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6866},{"krate":0,"index":6791},{"krate":0,"index":6882},{"krate":0,"index":6939},{"krate":0,"index":6937},{"krate":0,"index":6935},{"krate":0,"index":6931},{"krate":0,"index":6932},{"krate":0,"index":6925},{"krate":0,"index":6884},{"krate":0,"index":6941},{"krate":0,"index":7019},{"krate":0,"index":7017},{"krate":0,"index":7015},{"krate":0,"index":7011},{"krate":0,"index":7012},{"krate":0,"index":7005},{"krate":0,"index":6950},{"krate":0,"index":7021},{"krate":0,"index":7090},{"krate":0,"index":7088},{"krate":0,"index":7086},{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":7076},{"krate":0,"index":7027},{"krate":0,"index":7092},{"krate":0,"index":7158},{"krate":0,"index":7156},{"krate":0,"index":7154},{"krate":0,"index":7150},{"krate":0,"index":7151},{"krate":0,"index":7144},{"krate":0,"index":7097},{"krate":0,"index":7160},{"krate":0,"index":7227},{"krate":0,"index":7225},{"krate":0,"index":7224},{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7219},{"krate":0,"index":7213},{"krate":0,"index":7172},{"krate":0,"index":7169},{"krate":0,"index":7170},{"krate":0,"index":7167},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":7229},{"krate":0,"index":7300},{"krate":0,"index":7298},{"krate":0,"index":7297},{"krate":0,"index":7294},{"krate":0,"index":7295},{"krate":0,"index":7292},{"krate":0,"index":7286},{"krate":0,"index":7243},{"krate":0,"index":7240},{"krate":0,"index":7241},{"krate":0,"index":7238},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":7302},{"krate":0,"index":7373},{"krate":0,"index":7371},{"krate":0,"index":7370},{"krate":0,"index":7367},{"krate":0,"index":7368},{"krate":0,"index":7365},{"krate":0,"index":7359},{"krate":0,"index":7316},{"krate":0,"index":7313},{"krate":0,"index":7314},{"krate":0,"index":7311},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":7375},{"krate":0,"index":7438},{"krate":0,"index":7436},{"krate":0,"index":7434},{"krate":0,"index":7430},{"krate":0,"index":7431},{"krate":0,"index":7424},{"krate":0,"index":7379},{"krate":0,"index":7440},{"krate":0,"index":7497},{"krate":0,"index":7495},{"krate":0,"index":7493},{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7483},{"krate":0,"index":7442},{"krate":0,"index":7499},{"krate":0,"index":7559},{"krate":0,"index":7557},{"krate":0,"index":7555},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7545},{"krate":0,"index":7502},{"krate":0,"index":7561},{"krate":0,"index":7621},{"krate":0,"index":7619},{"krate":0,"index":7617},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7607},{"krate":0,"index":7564},{"krate":0,"index":7623},{"krate":0,"index":7695},{"krate":0,"index":7693},{"krate":0,"index":7691},{"krate":0,"index":7687},{"krate":0,"index":7688},{"krate":0,"index":7681},{"krate":0,"index":7630},{"krate":0,"index":7697},{"krate":0,"index":7856},{"krate":0,"index":7854},{"krate":0,"index":7852},{"krate":0,"index":7848},{"krate":0,"index":7849},{"krate":0,"index":7842},{"krate":0,"index":7714},{"krate":0,"index":7858},{"krate":0,"index":7962},{"krate":0,"index":7960},{"krate":0,"index":7958},{"krate":0,"index":7954},{"krate":0,"index":7955},{"krate":0,"index":7948},{"krate":0,"index":7863},{"krate":0,"index":7964},{"krate":0,"index":8046},{"krate":0,"index":8044},{"krate":0,"index":8042},{"krate":0,"index":8038},{"krate":0,"index":8039},{"krate":0,"index":8032},{"krate":0,"index":7968},{"krate":0,"index":8048},{"krate":0,"index":8111},{"krate":0,"index":8109},{"krate":0,"index":8108},{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8103},{"krate":0,"index":8097},{"krate":0,"index":8058},{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8053},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":8113},{"krate":0,"index":8214},{"krate":0,"index":8212},{"krate":0,"index":8210},{"krate":0,"index":8206},{"krate":0,"index":8207},{"krate":0,"index":8200},{"krate":0,"index":8117},{"krate":0,"index":8216},{"krate":0,"index":8273},{"krate":0,"index":8271},{"krate":0,"index":8269},{"krate":0,"index":8265},{"krate":0,"index":8266},{"krate":0,"index":8259},{"krate":0,"index":8218},{"krate":0,"index":8275},{"krate":0,"index":8335},{"krate":0,"index":8333},{"krate":0,"index":8331},{"krate":0,"index":8327},{"krate":0,"index":8328},{"krate":0,"index":8321},{"krate":0,"index":8278},{"krate":0,"index":8337},{"krate":0,"index":8397},{"krate":0,"index":8395},{"krate":0,"index":8393},{"krate":0,"index":8389},{"krate":0,"index":8390},{"krate":0,"index":8383},{"krate":0,"index":8340},{"krate":0,"index":8399},{"krate":0,"index":8484},{"krate":0,"index":8482},{"krate":0,"index":8480},{"krate":0,"index":8476},{"krate":0,"index":8477},{"krate":0,"index":8470},{"krate":0,"index":8404},{"krate":0,"index":8486},{"krate":0,"index":8571},{"krate":0,"index":8569},{"krate":0,"index":8567},{"krate":0,"index":8563},{"krate":0,"index":8564},{"krate":0,"index":8557},{"krate":0,"index":8491},{"krate":0,"index":8573},{"krate":0,"index":8636},{"krate":0,"index":8634},{"krate":0,"index":8632},{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8622},{"krate":0,"index":8577},{"krate":0,"index":8638},{"krate":0,"index":8751},{"krate":0,"index":8749},{"krate":0,"index":8747},{"krate":0,"index":8743},{"krate":0,"index":8744},{"krate":0,"index":8737},{"krate":0,"index":8646},{"krate":0,"index":8753},{"krate":0,"index":8816},{"krate":0,"index":8814},{"krate":0,"index":8812},{"krate":0,"index":8808},{"krate":0,"index":8809},{"krate":0,"index":8802},{"krate":0,"index":8757},{"krate":0,"index":8818},{"krate":0,"index":8960},{"krate":0,"index":8958},{"krate":0,"index":8956},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8946},{"krate":0,"index":8823},{"krate":0,"index":8962},{"krate":0,"index":9028},{"krate":0,"index":9026},{"krate":0,"index":9024},{"krate":0,"index":9020},{"krate":0,"index":9021},{"krate":0,"index":9014},{"krate":0,"index":8967},{"krate":0,"index":9030},{"krate":0,"index":9123},{"krate":0,"index":9121},{"krate":0,"index":9119},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9101},{"krate":0,"index":9035},{"krate":0,"index":9125},{"krate":0,"index":9196},{"krate":0,"index":9194},{"krate":0,"index":9193},{"krate":0,"index":9190},{"krate":0,"index":9191},{"krate":0,"index":9188},{"krate":0,"index":9182},{"krate":0,"index":9139},{"krate":0,"index":9136},{"krate":0,"index":9137},{"krate":0,"index":9134},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":9198},{"krate":0,"index":9258},{"krate":0,"index":9256},{"krate":0,"index":9254},{"krate":0,"index":9250},{"krate":0,"index":9251},{"krate":0,"index":9244},{"krate":0,"index":9201},{"krate":0,"index":126},{"krate":0,"index":9260},{"krate":0,"index":9329},{"krate":0,"index":9327},{"krate":0,"index":9325},{"krate":0,"index":9321},{"krate":0,"index":9322},{"krate":0,"index":9315},{"krate":0,"index":9266},{"krate":0,"index":9331},{"krate":0,"index":9391},{"krate":0,"index":9389},{"krate":0,"index":9387},{"krate":0,"index":9383},{"krate":0,"index":9384},{"krate":0,"index":9377},{"krate":0,"index":9334},{"krate":0,"index":9393},{"krate":0,"index":9459},{"krate":0,"index":9457},{"krate":0,"index":9455},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9445},{"krate":0,"index":9398},{"krate":0,"index":9461},{"krate":0,"index":9528},{"krate":0,"index":9526},{"krate":0,"index":9525},{"krate":0,"index":9522},{"krate":0,"index":9523},{"krate":0,"index":9520},{"krate":0,"index":9514},{"krate":0,"index":9473},{"krate":0,"index":9470},{"krate":0,"index":9471},{"krate":0,"index":9468},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":9530},{"krate":0,"index":9599},{"krate":0,"index":9597},{"krate":0,"index":9595},{"krate":0,"index":9591},{"krate":0,"index":9592},{"krate":0,"index":9585},{"krate":0,"index":9536},{"krate":0,"index":9601},{"krate":0,"index":9664},{"krate":0,"index":9662},{"krate":0,"index":9660},{"krate":0,"index":9656},{"krate":0,"index":9657},{"krate":0,"index":9650},{"krate":0,"index":9605},{"krate":0,"index":9666},{"krate":0,"index":9816},{"krate":0,"index":9814},{"krate":0,"index":9812},{"krate":0,"index":9808},{"krate":0,"index":9809},{"krate":0,"index":9802},{"krate":0,"index":9699},{"krate":0,"index":9818},{"krate":0,"index":9878},{"krate":0,"index":9876},{"krate":0,"index":9874},{"krate":0,"index":9870},{"krate":0,"index":9871},{"krate":0,"index":9864},{"krate":0,"index":9821},{"krate":0,"index":9880},{"krate":0,"index":9943},{"krate":0,"index":9941},{"krate":0,"index":9939},{"krate":0,"index":9935},{"krate":0,"index":9936},{"krate":0,"index":9929},{"krate":0,"index":9884},{"krate":0,"index":9945},{"krate":0,"index":10005},{"krate":0,"index":10003},{"krate":0,"index":10001},{"krate":0,"index":9997},{"krate":0,"index":9998},{"krate":0,"index":9991},{"krate":0,"index":9948},{"krate":0,"index":10007},{"krate":0,"index":10082},{"krate":0,"index":10080},{"krate":0,"index":10079},{"krate":0,"index":10076},{"krate":0,"index":10077},{"krate":0,"index":10074},{"krate":0,"index":10068},{"krate":0,"index":10023},{"krate":0,"index":10020},{"krate":0,"index":10021},{"krate":0,"index":10018},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":10084},{"krate":0,"index":10144},{"krate":0,"index":10142},{"krate":0,"index":10140},{"krate":0,"index":10136},{"krate":0,"index":10137},{"krate":0,"index":10130},{"krate":0,"index":10087},{"krate":0,"index":10146},{"krate":0,"index":10215},{"krate":0,"index":10213},{"krate":0,"index":10211},{"krate":0,"index":10207},{"krate":0,"index":10208},{"krate":0,"index":10201},{"krate":0,"index":10152},{"krate":0,"index":10217},{"krate":0,"index":10286},{"krate":0,"index":10284},{"krate":0,"index":10282},{"krate":0,"index":10278},{"krate":0,"index":10279},{"krate":0,"index":10272},{"krate":0,"index":10223},{"krate":0,"index":10288},{"krate":0,"index":10363},{"krate":0,"index":10361},{"krate":0,"index":10359},{"krate":0,"index":10355},{"krate":0,"index":10356},{"krate":0,"index":10349},{"krate":0,"index":10296},{"krate":0,"index":10365},{"krate":0,"index":10425},{"krate":0,"index":10423},{"krate":0,"index":10421},{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10411},{"krate":0,"index":10368},{"krate":0,"index":10427},{"krate":0,"index":10490},{"krate":0,"index":10488},{"krate":0,"index":10486},{"krate":0,"index":10482},{"krate":0,"index":10483},{"krate":0,"index":10476},{"krate":0,"index":10431},{"krate":0,"index":10492},{"krate":0,"index":10552},{"krate":0,"index":10550},{"krate":0,"index":10548},{"krate":0,"index":10544},{"krate":0,"index":10545},{"krate":0,"index":10538},{"krate":0,"index":10495},{"krate":0,"index":10554},{"krate":0,"index":10632},{"krate":0,"index":10630},{"krate":0,"index":10628},{"krate":0,"index":10624},{"krate":0,"index":10625},{"krate":0,"index":10618},{"krate":0,"index":10563},{"krate":0,"index":10634},{"krate":0,"index":10694},{"krate":0,"index":10692},{"krate":0,"index":10690},{"krate":0,"index":10686},{"krate":0,"index":10687},{"krate":0,"index":10680},{"krate":0,"index":10637},{"krate":0,"index":10696},{"krate":0,"index":10753},{"krate":0,"index":10751},{"krate":0,"index":10749},{"krate":0,"index":10745},{"krate":0,"index":10746},{"krate":0,"index":10739},{"krate":0,"index":10698},{"krate":0,"index":10755},{"krate":0,"index":10827},{"krate":0,"index":10825},{"krate":0,"index":10823},{"krate":0,"index":10819},{"krate":0,"index":10820},{"krate":0,"index":10813},{"krate":0,"index":10762},{"krate":0,"index":10829},{"krate":0,"index":10896},{"krate":0,"index":10894},{"krate":0,"index":10893},{"krate":0,"index":10890},{"krate":0,"index":10891},{"krate":0,"index":10888},{"krate":0,"index":10882},{"krate":0,"index":10841},{"krate":0,"index":10838},{"krate":0,"index":10839},{"krate":0,"index":10836},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":10898},{"krate":0,"index":10965},{"krate":0,"index":10963},{"krate":0,"index":10962},{"krate":0,"index":10959},{"krate":0,"index":10960},{"krate":0,"index":10957},{"krate":0,"index":10951},{"krate":0,"index":10910},{"krate":0,"index":10907},{"krate":0,"index":10908},{"krate":0,"index":10905},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":10967},{"krate":0,"index":11039},{"krate":0,"index":11037},{"krate":0,"index":11035},{"krate":0,"index":11031},{"krate":0,"index":11032},{"krate":0,"index":11025},{"krate":0,"index":10974},{"krate":0,"index":11041},{"krate":0,"index":11112},{"krate":0,"index":11110},{"krate":0,"index":11109},{"krate":0,"index":11106},{"krate":0,"index":11107},{"krate":0,"index":11104},{"krate":0,"index":11098},{"krate":0,"index":11055},{"krate":0,"index":11052},{"krate":0,"index":11053},{"krate":0,"index":11050},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":11114},{"krate":0,"index":11181},{"krate":0,"index":11179},{"krate":0,"index":11178},{"krate":0,"index":11175},{"krate":0,"index":11176},{"krate":0,"index":11173},{"krate":0,"index":11167},{"krate":0,"index":11126},{"krate":0,"index":11123},{"krate":0,"index":11124},{"krate":0,"index":11121},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":11183},{"krate":0,"index":11240},{"krate":0,"index":11238},{"krate":0,"index":11236},{"krate":0,"index":11232},{"krate":0,"index":11233},{"krate":0,"index":11226},{"krate":0,"index":11185},{"krate":0,"index":11242},{"krate":0,"index":11308},{"krate":0,"index":11306},{"krate":0,"index":11304},{"krate":0,"index":11300},{"krate":0,"index":11301},{"krate":0,"index":11294},{"krate":0,"index":11247},{"krate":0,"index":11310},{"krate":0,"index":11393},{"krate":0,"index":11391},{"krate":0,"index":11390},{"krate":0,"index":11387},{"krate":0,"index":11388},{"krate":0,"index":11385},{"krate":0,"index":11379},{"krate":0,"index":11330},{"krate":0,"index":11327},{"krate":0,"index":11328},{"krate":0,"index":11325},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":11395},{"krate":0,"index":11476},{"krate":0,"index":11474},{"krate":0,"index":11472},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11462},{"krate":0,"index":11405},{"krate":0,"index":11478},{"krate":0,"index":11556},{"krate":0,"index":11554},{"krate":0,"index":11552},{"krate":0,"index":11548},{"krate":0,"index":11549},{"krate":0,"index":11542},{"krate":0,"index":11487},{"krate":0,"index":11558},{"krate":0,"index":11627},{"krate":0,"index":11625},{"krate":0,"index":11623},{"krate":0,"index":11619},{"krate":0,"index":11620},{"krate":0,"index":11613},{"krate":0,"index":11564},{"krate":0,"index":11629},{"krate":0,"index":11695},{"krate":0,"index":11693},{"krate":0,"index":11691},{"krate":0,"index":11687},{"krate":0,"index":11688},{"krate":0,"index":11681},{"krate":0,"index":11634},{"krate":0,"index":11697},{"krate":0,"index":11760},{"krate":0,"index":11758},{"krate":0,"index":11757},{"krate":0,"index":11754},{"krate":0,"index":11755},{"krate":0,"index":11752},{"krate":0,"index":11746},{"krate":0,"index":11707},{"krate":0,"index":11704},{"krate":0,"index":11705},{"krate":0,"index":11702},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":11762},{"krate":0,"index":11819},{"krate":0,"index":11817},{"krate":0,"index":11815},{"krate":0,"index":11811},{"krate":0,"index":11812},{"krate":0,"index":11805},{"krate":0,"index":11764},{"krate":0,"index":11821},{"krate":0,"index":11878},{"krate":0,"index":11876},{"krate":0,"index":11874},{"krate":0,"index":11870},{"krate":0,"index":11871},{"krate":0,"index":11864},{"krate":0,"index":11823},{"krate":0,"index":11880},{"krate":0,"index":11937},{"krate":0,"index":11935},{"krate":0,"index":11933},{"krate":0,"index":11929},{"krate":0,"index":11930},{"krate":0,"index":11923},{"krate":0,"index":11882},{"krate":0,"index":11939},{"krate":0,"index":12008},{"krate":0,"index":12006},{"krate":0,"index":12004},{"krate":0,"index":12000},{"krate":0,"index":12001},{"krate":0,"index":11994},{"krate":0,"index":11945},{"krate":0,"index":12010},{"krate":0,"index":12067},{"krate":0,"index":12065},{"krate":0,"index":12063},{"krate":0,"index":12059},{"krate":0,"index":12060},{"krate":0,"index":12053},{"krate":0,"index":12012},{"krate":0,"index":12069},{"krate":0,"index":12129},{"krate":0,"index":12127},{"krate":0,"index":12125},{"krate":0,"index":12121},{"krate":0,"index":12122},{"krate":0,"index":12115},{"krate":0,"index":12072},{"krate":0,"index":12131},{"krate":0,"index":12191},{"krate":0,"index":12189},{"krate":0,"index":12187},{"krate":0,"index":12183},{"krate":0,"index":12184},{"krate":0,"index":12177},{"krate":0,"index":12134},{"krate":0,"index":12193},{"krate":0,"index":12262},{"krate":0,"index":12260},{"krate":0,"index":12258},{"krate":0,"index":12254},{"krate":0,"index":12255},{"krate":0,"index":12248},{"krate":0,"index":12199},{"krate":0,"index":12264},{"krate":0,"index":12333},{"krate":0,"index":12331},{"krate":0,"index":12329},{"krate":0,"index":12325},{"krate":0,"index":12326},{"krate":0,"index":12319},{"krate":0,"index":12270},{"krate":0,"index":12335},{"krate":0,"index":12395},{"krate":0,"index":12393},{"krate":0,"index":12391},{"krate":0,"index":12387},{"krate":0,"index":12388},{"krate":0,"index":12381},{"krate":0,"index":12338},{"krate":0,"index":12397},{"krate":0,"index":12631},{"krate":0,"index":12629},{"krate":0,"index":12627},{"krate":0,"index":12623},{"krate":0,"index":12624},{"krate":0,"index":12617},{"krate":0,"index":12458},{"krate":0,"index":12633},{"krate":0,"index":12704},{"krate":0,"index":12702},{"krate":0,"index":12701},{"krate":0,"index":12698},{"krate":0,"index":12699},{"krate":0,"index":12696},{"krate":0,"index":12690},{"krate":0,"index":12647},{"krate":0,"index":12644},{"krate":0,"index":12645},{"krate":0,"index":12642},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":12706},{"krate":0,"index":12777},{"krate":0,"index":12775},{"krate":0,"index":12774},{"krate":0,"index":12771},{"krate":0,"index":12772},{"krate":0,"index":12769},{"krate":0,"index":12763},{"krate":0,"index":12720},{"krate":0,"index":12717},{"krate":0,"index":12718},{"krate":0,"index":12715},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":12779},{"krate":0,"index":12869},{"krate":0,"index":12867},{"krate":0,"index":12865},{"krate":0,"index":12861},{"krate":0,"index":12862},{"krate":0,"index":12855},{"krate":0,"index":12792},{"krate":0,"index":12871},{"krate":0,"index":12934},{"krate":0,"index":12932},{"krate":0,"index":12930},{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12920},{"krate":0,"index":12875},{"krate":0,"index":12936},{"krate":0,"index":12993},{"krate":0,"index":12991},{"krate":0,"index":12989},{"krate":0,"index":12985},{"krate":0,"index":12986},{"krate":0,"index":12979},{"krate":0,"index":12938},{"krate":0,"index":12995},{"krate":0,"index":13088},{"krate":0,"index":13086},{"krate":0,"index":13084},{"krate":0,"index":13080},{"krate":0,"index":13081},{"krate":0,"index":13074},{"krate":0,"index":13009},{"krate":0,"index":13090},{"krate":0,"index":13174},{"krate":0,"index":13172},{"krate":0,"index":13170},{"krate":0,"index":13166},{"krate":0,"index":13167},{"krate":0,"index":13160},{"krate":0,"index":13101},{"krate":0,"index":13176},{"krate":0,"index":13302},{"krate":0,"index":13300},{"krate":0,"index":13298},{"krate":0,"index":13294},{"krate":0,"index":13295},{"krate":0,"index":13288},{"krate":0,"index":13201},{"krate":0,"index":13304},{"krate":0,"index":13375},{"krate":0,"index":13373},{"krate":0,"index":13372},{"krate":0,"index":13369},{"krate":0,"index":13370},{"krate":0,"index":13367},{"krate":0,"index":13361},{"krate":0,"index":13318},{"krate":0,"index":13315},{"krate":0,"index":13316},{"krate":0,"index":13313},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":13377},{"krate":0,"index":13443},{"krate":0,"index":13441},{"krate":0,"index":13439},{"krate":0,"index":13435},{"krate":0,"index":13436},{"krate":0,"index":13429},{"krate":0,"index":13382},{"krate":0,"index":13445},{"krate":0,"index":13508},{"krate":0,"index":13506},{"krate":0,"index":13504},{"krate":0,"index":13500},{"krate":0,"index":13501},{"krate":0,"index":13494},{"krate":0,"index":13449},{"krate":0,"index":13510},{"krate":0,"index":13576},{"krate":0,"index":13574},{"krate":0,"index":13572},{"krate":0,"index":13568},{"krate":0,"index":13569},{"krate":0,"index":13562},{"krate":0,"index":13515},{"krate":0,"index":13578},{"krate":0,"index":13644},{"krate":0,"index":13642},{"krate":0,"index":13640},{"krate":0,"index":13636},{"krate":0,"index":13637},{"krate":0,"index":13630},{"krate":0,"index":13583},{"krate":0,"index":13646},{"krate":0,"index":13706},{"krate":0,"index":13704},{"krate":0,"index":13702},{"krate":0,"index":13698},{"krate":0,"index":13699},{"krate":0,"index":13692},{"krate":0,"index":13649},{"krate":0,"index":13708},{"krate":0,"index":13771},{"krate":0,"index":13769},{"krate":0,"index":13767},{"krate":0,"index":13763},{"krate":0,"index":13764},{"krate":0,"index":13757},{"krate":0,"index":13712},{"krate":0,"index":13773},{"krate":0,"index":13842},{"krate":0,"index":13840},{"krate":0,"index":13838},{"krate":0,"index":13834},{"krate":0,"index":13835},{"krate":0,"index":13828},{"krate":0,"index":13779},{"krate":0,"index":13844},{"krate":0,"index":13907},{"krate":0,"index":13905},{"krate":0,"index":13903},{"krate":0,"index":13899},{"krate":0,"index":13900},{"krate":0,"index":13893},{"krate":0,"index":13848},{"krate":0,"index":13909},{"krate":0,"index":13969},{"krate":0,"index":13967},{"krate":0,"index":13965},{"krate":0,"index":13961},{"krate":0,"index":13962},{"krate":0,"index":13955},{"krate":0,"index":13912},{"krate":0,"index":13971},{"krate":0,"index":14028},{"krate":0,"index":14026},{"krate":0,"index":14024},{"krate":0,"index":14020},{"krate":0,"index":14021},{"krate":0,"index":14014},{"krate":0,"index":13973},{"krate":0,"index":14030},{"krate":0,"index":14096},{"krate":0,"index":14094},{"krate":0,"index":14092},{"krate":0,"index":14088},{"krate":0,"index":14089},{"krate":0,"index":14082},{"krate":0,"index":14035},{"krate":0,"index":14098},{"krate":0,"index":14155},{"krate":0,"index":14153},{"krate":0,"index":14151},{"krate":0,"index":14147},{"krate":0,"index":14148},{"krate":0,"index":14141},{"krate":0,"index":14100},{"krate":0,"index":14157},{"krate":0,"index":14214},{"krate":0,"index":14212},{"krate":0,"index":14210},{"krate":0,"index":14206},{"krate":0,"index":14207},{"krate":0,"index":14200},{"krate":0,"index":14159},{"krate":0,"index":14216},{"krate":0,"index":14282},{"krate":0,"index":14280},{"krate":0,"index":14278},{"krate":0,"index":14274},{"krate":0,"index":14275},{"krate":0,"index":14268},{"krate":0,"index":14221},{"krate":0,"index":14284},{"krate":0,"index":14344},{"krate":0,"index":14342},{"krate":0,"index":14340},{"krate":0,"index":14336},{"krate":0,"index":14337},{"krate":0,"index":14330},{"krate":0,"index":14287},{"krate":0,"index":14346},{"krate":0,"index":14412},{"krate":0,"index":14410},{"krate":0,"index":14408},{"krate":0,"index":14404},{"krate":0,"index":14405},{"krate":0,"index":14398},{"krate":0,"index":14351},{"krate":0,"index":14414},{"krate":0,"index":14485},{"krate":0,"index":14483},{"krate":0,"index":14482},{"krate":0,"index":14479},{"krate":0,"index":14480},{"krate":0,"index":14477},{"krate":0,"index":14471},{"krate":0,"index":14428},{"krate":0,"index":14425},{"krate":0,"index":14426},{"krate":0,"index":14423},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":14487},{"krate":0,"index":14602},{"krate":0,"index":14600},{"krate":0,"index":14599},{"krate":0,"index":14596},{"krate":0,"index":14597},{"krate":0,"index":14594},{"krate":0,"index":14588},{"krate":0,"index":14523},{"krate":0,"index":14520},{"krate":0,"index":14521},{"krate":0,"index":14518},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":14604},{"krate":0,"index":14673},{"krate":0,"index":14671},{"krate":0,"index":14669},{"krate":0,"index":14665},{"krate":0,"index":14666},{"krate":0,"index":14659},{"krate":0,"index":14610},{"krate":0,"index":14675},{"krate":0,"index":14738},{"krate":0,"index":14736},{"krate":0,"index":14734},{"krate":0,"index":14730},{"krate":0,"index":14731},{"krate":0,"index":14724},{"krate":0,"index":14679},{"krate":0,"index":14740},{"krate":0,"index":14800},{"krate":0,"index":14798},{"krate":0,"index":14796},{"krate":0,"index":14792},{"krate":0,"index":14793},{"krate":0,"index":14786},{"krate":0,"index":14743},{"krate":0,"index":14802},{"krate":0,"index":14865},{"krate":0,"index":14863},{"krate":0,"index":14861},{"krate":0,"index":14857},{"krate":0,"index":14858},{"krate":0,"index":14851},{"krate":0,"index":14806},{"krate":0,"index":14867},{"krate":0,"index":14924},{"krate":0,"index":14922},{"krate":0,"index":14920},{"krate":0,"index":14916},{"krate":0,"index":14917},{"krate":0,"index":14910},{"krate":0,"index":14869},{"krate":0,"index":14926},{"krate":0,"index":15072},{"krate":0,"index":15070},{"krate":0,"index":15068},{"krate":0,"index":15064},{"krate":0,"index":15065},{"krate":0,"index":15050},{"krate":0,"index":14936},{"krate":0,"index":15074},{"krate":0,"index":15141},{"krate":0,"index":15139},{"krate":0,"index":15138},{"krate":0,"index":15135},{"krate":0,"index":15136},{"krate":0,"index":15133},{"krate":0,"index":15127},{"krate":0,"index":15086},{"krate":0,"index":15083},{"krate":0,"index":15084},{"krate":0,"index":15081},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":15143},{"krate":0,"index":15209},{"krate":0,"index":15207},{"krate":0,"index":15205},{"krate":0,"index":15201},{"krate":0,"index":15202},{"krate":0,"index":15195},{"krate":0,"index":15148},{"krate":0,"index":15211},{"krate":0,"index":15309},{"krate":0,"index":15307},{"krate":0,"index":15305},{"krate":0,"index":15301},{"krate":0,"index":15302},{"krate":0,"index":15295},{"krate":0,"index":15214},{"krate":0,"index":15311},{"krate":0,"index":15371},{"krate":0,"index":15369},{"krate":0,"index":15367},{"krate":0,"index":15363},{"krate":0,"index":15364},{"krate":0,"index":15357},{"krate":0,"index":15314},{"krate":0,"index":15373},{"krate":0,"index":15433},{"krate":0,"index":15431},{"krate":0,"index":15429},{"krate":0,"index":15425},{"krate":0,"index":15426},{"krate":0,"index":15419},{"krate":0,"index":15376},{"krate":0,"index":15435},{"krate":0,"index":15699},{"krate":0,"index":15697},{"krate":0,"index":15695},{"krate":0,"index":15691},{"krate":0,"index":15692},{"krate":0,"index":15685},{"krate":0,"index":15506},{"krate":0,"index":15701},{"krate":0,"index":15772},{"krate":0,"index":15770},{"krate":0,"index":15769},{"krate":0,"index":15766},{"krate":0,"index":15767},{"krate":0,"index":15764},{"krate":0,"index":15758},{"krate":0,"index":15715},{"krate":0,"index":15712},{"krate":0,"index":15713},{"krate":0,"index":15710},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":15774},{"krate":0,"index":15861},{"krate":0,"index":15859},{"krate":0,"index":15857},{"krate":0,"index":15853},{"krate":0,"index":15854},{"krate":0,"index":15847},{"krate":0,"index":15786}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_imports, unused_qualifications, unused_extern_crates)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":272,"byte_end":342,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1160,"byte_end":1167,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Address","qualname":"::models::Address","value":"Address { addr, prefix_len }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"decl_id":null,"docs":" Address represents an IPv4 or IPv6 IP address.\n","sig":null,"attributes":[{"value":"/ Address represents an IPv4 or IPv6 IP address.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1030,"byte_end":1080,"line_start":28,"line_end":28,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1280,"byte_end":1284,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"name":"addr","qualname":"::models::Address::addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" IP address.\n","sig":null,"attributes":[{"value":"/ IP address.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1174,"byte_end":1189,"line_start":31,"line_end":31,"column_start":5,"column_end":20}},{"value":"serde(rename = \"Addr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1194,"byte_end":1219,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1224,"byte_end":1271,"line_start":33,"line_end":33,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":230},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1437,"byte_end":1447,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"prefix_len","qualname":"::models::Address::prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":228},"children":[],"decl_id":null,"docs":" Mask length of the IP address.\n","sig":null,"attributes":[{"value":"/ Mask length of the IP address.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1307,"byte_end":1341,"line_start":36,"line_end":36,"column_start":5,"column_end":39}},{"value":"serde(rename = \"PrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1346,"byte_end":1376,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1381,"byte_end":1428,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":290},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1545,"byte_end":1555,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"AuthConfig","qualname":"::models::AuthConfig","value":"AuthConfig { username, password, email, serveraddress }","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":291},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1652,"byte_end":1660,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"username","qualname":"::models::AuthConfig::username","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"username\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1562,"byte_end":1591,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1596,"byte_end":1643,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":292},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1773,"byte_end":1781,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"password","qualname":"::models::AuthConfig::password","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"password\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1683,"byte_end":1712,"line_start":49,"line_end":49,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1717,"byte_end":1764,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1891,"byte_end":1896,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"email","qualname":"::models::AuthConfig::email","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"email\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1804,"byte_end":1830,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1835,"byte_end":1882,"line_start":54,"line_end":54,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2014,"byte_end":2027,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"name":"serveraddress","qualname":"::models::AuthConfig::serveraddress","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"serveraddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1919,"byte_end":1953,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":1958,"byte_end":2005,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2205,"byte_end":2209,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"Body","qualname":"::models::Body","value":"Body { name, description, value }","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361}],"decl_id":null,"docs":" Describes a permission accepted by the user upon installing the plugin. \n","sig":null,"attributes":[{"value":"/ Describes a permission accepted by the user upon installing the plugin. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2049,"byte_end":2125,"line_start":63,"line_end":63,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2302,"byte_end":2306,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Body::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2216,"byte_end":2241,"line_start":66,"line_end":66,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2246,"byte_end":2293,"line_start":67,"line_end":67,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":360},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2422,"byte_end":2433,"line_start":72,"line_end":72,"column_start":9,"column_end":20},"name":"description","qualname":"::models::Body::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2329,"byte_end":2361,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2366,"byte_end":2413,"line_start":71,"line_end":71,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":361},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2543,"byte_end":2548,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"name":"value","qualname":"::models::Body::value","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2456,"byte_end":2482,"line_start":74,"line_end":74,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2487,"byte_end":2534,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2654,"byte_end":2659,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Body1","qualname":"::models::Body1","value":"Body1 { listen_addr, advertise_addr, data_path_addr, data_path_port, default_addr_pool, force_new_cluster, subnet_size, spec }","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3124,"byte_end":3135,"line_start":85,"line_end":85,"column_start":9,"column_end":20},"name":"listen_addr","qualname":"::models::Body1::listen_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" Listen address used for inter-manager communication, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP). This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the default swarm listening port is used. \n","sig":null,"attributes":[{"value":"/ Listen address used for inter-manager communication, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP). This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the default swarm listening port is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":2666,"byte_end":3027,"line_start":82,"line_end":82,"column_start":5,"column_end":366}},{"value":"serde(rename = \"ListenAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3032,"byte_end":3063,"line_start":83,"line_end":83,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3068,"byte_end":3115,"line_start":84,"line_end":84,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":425},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3624,"byte_end":3638,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"name":"advertise_addr","qualname":"::models::Body1::advertise_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible. \n","sig":null,"attributes":[{"value":"/ Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3158,"byte_end":3524,"line_start":87,"line_end":87,"column_start":5,"column_end":371}},{"value":"serde(rename = \"AdvertiseAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3529,"byte_end":3563,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3568,"byte_end":3615,"line_start":89,"line_end":89,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":426},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4264,"byte_end":4278,"line_start":95,"line_end":95,"column_start":9,"column_end":23},"name":"data_path_addr","qualname":"::models::Body1::data_path_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" Address or interface to use for data path traffic (format: `<ip|interface>`), for example,  `192.168.1.1`, or an interface, like `eth0`. If `DataPathAddr` is unspecified, the same address as `AdvertiseAddr` is used.  The `DataPathAddr` specifies the address that global scope network drivers will publish towards other  nodes in order to reach the containers running on this node. Using this parameter it is possible to separate the container data traffic from the management traffic of the cluster. \n","sig":null,"attributes":[{"value":"/ Address or interface to use for data path traffic (format: `<ip|interface>`), for example,  `192.168.1.1`, or an interface, like `eth0`. If `DataPathAddr` is unspecified, the same address as `AdvertiseAddr` is used.  The `DataPathAddr` specifies the address that global scope network drivers will publish towards other  nodes in order to reach the containers running on this node. Using this parameter it is possible to separate the container data traffic from the management traffic of the cluster. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":3661,"byte_end":4165,"line_start":92,"line_end":92,"column_start":5,"column_end":509}},{"value":"serde(rename = \"DataPathAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4170,"byte_end":4203,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4208,"byte_end":4255,"line_start":94,"line_end":94,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4577,"byte_end":4591,"line_start":100,"line_end":100,"column_start":9,"column_end":23},"name":"data_path_port","qualname":"::models::Body1::data_path_port","value":"std::option::Option<u32>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. if no port is set or is set to 0, default port 4789 will be used. \n","sig":null,"attributes":[{"value":"/ DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. if no port is set or is set to 0, default port 4789 will be used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4301,"byte_end":4478,"line_start":97,"line_end":97,"column_start":5,"column_end":182}},{"value":"serde(rename = \"DataPathPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4483,"byte_end":4516,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4521,"byte_end":4568,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":428},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4796,"byte_end":4813,"line_start":105,"line_end":105,"column_start":9,"column_end":26},"name":"default_addr_pool","qualname":"::models::Body1::default_addr_pool","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" Default Address Pool specifies default subnet pools for global scope networks. \n","sig":null,"attributes":[{"value":"/ Default Address Pool specifies default subnet pools for global scope networks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4611,"byte_end":4694,"line_start":102,"line_end":102,"column_start":5,"column_end":88}},{"value":"serde(rename = \"DefaultAddrPool\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4699,"byte_end":4735,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4740,"byte_end":4787,"line_start":104,"line_end":104,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":429},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4977,"byte_end":4994,"line_start":110,"line_end":110,"column_start":9,"column_end":26},"name":"force_new_cluster","qualname":"::models::Body1::force_new_cluster","value":"std::option::Option<bool>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" Force creation of a new swarm.\n","sig":null,"attributes":[{"value":"/ Force creation of a new swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4841,"byte_end":4875,"line_start":107,"line_end":107,"column_start":5,"column_end":39}},{"value":"serde(rename = \"ForceNewCluster\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4880,"byte_end":4916,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":4921,"byte_end":4968,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":430},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5207,"byte_end":5218,"line_start":115,"line_end":115,"column_start":9,"column_end":20},"name":"subnet_size","qualname":"::models::Body1::subnet_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":" SubnetSize specifies the subnet size of the networks created from the default subnet pool. \n","sig":null,"attributes":[{"value":"/ SubnetSize specifies the subnet size of the networks created from the default subnet pool. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5015,"byte_end":5110,"line_start":112,"line_end":112,"column_start":5,"column_end":100}},{"value":"serde(rename = \"SubnetSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5115,"byte_end":5146,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5151,"byte_end":5198,"line_start":114,"line_end":114,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":431},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5324,"byte_end":5328,"line_start":119,"line_end":119,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Body1::spec","value":"std::option::Option<models::SwarmSpec>","parent":{"krate":0,"index":423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5238,"byte_end":5263,"line_start":117,"line_end":117,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5268,"byte_end":5315,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5432,"byte_end":5437,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"Body2","qualname":"::models::Body2","value":"Body2 { listen_addr, advertise_addr, data_path_addr, remote_addrs, join_token }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":504},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5726,"byte_end":5737,"line_start":128,"line_end":128,"column_start":9,"column_end":20},"name":"listen_addr","qualname":"::models::Body2::listen_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Listen address used for inter-manager communication if the node gets promoted to manager, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP). \n","sig":null,"attributes":[{"value":"/ Listen address used for inter-manager communication if the node gets promoted to manager, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5444,"byte_end":5629,"line_start":125,"line_end":125,"column_start":5,"column_end":190}},{"value":"serde(rename = \"ListenAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5634,"byte_end":5665,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5670,"byte_end":5717,"line_start":127,"line_end":127,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6226,"byte_end":6240,"line_start":133,"line_end":133,"column_start":9,"column_end":23},"name":"advertise_addr","qualname":"::models::Body2::advertise_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible. \n","sig":null,"attributes":[{"value":"/ Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":5760,"byte_end":6126,"line_start":130,"line_end":130,"column_start":5,"column_end":371}},{"value":"serde(rename = \"AdvertiseAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6131,"byte_end":6165,"line_start":131,"line_end":131,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6170,"byte_end":6217,"line_start":132,"line_end":132,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":506},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6864,"byte_end":6878,"line_start":138,"line_end":138,"column_start":9,"column_end":23},"name":"data_path_addr","qualname":"::models::Body2::data_path_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Address or interface to use for data path traffic (format: `<ip|interface>`), for example,  `192.168.1.1`, or an interface, like `eth0`. If `DataPathAddr` is unspecified, the same addres as `AdvertiseAddr` is used.  The `DataPathAddr` specifies the address that global scope network drivers will publish towards other nodes in order to reach the containers running on this node. Using this parameter it is possible to separate the container data traffic from the management traffic of the cluster. \n","sig":null,"attributes":[{"value":"/ Address or interface to use for data path traffic (format: `<ip|interface>`), for example,  `192.168.1.1`, or an interface, like `eth0`. If `DataPathAddr` is unspecified, the same addres as `AdvertiseAddr` is used.  The `DataPathAddr` specifies the address that global scope network drivers will publish towards other nodes in order to reach the containers running on this node. Using this parameter it is possible to separate the container data traffic from the management traffic of the cluster. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6263,"byte_end":6765,"line_start":135,"line_end":135,"column_start":5,"column_end":507}},{"value":"serde(rename = \"DataPathAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6770,"byte_end":6803,"line_start":136,"line_end":136,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6808,"byte_end":6855,"line_start":137,"line_end":137,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":507},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7066,"byte_end":7078,"line_start":143,"line_end":143,"column_start":9,"column_end":21},"name":"remote_addrs","qualname":"::models::Body2::remote_addrs","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Addresses of manager nodes already participating in the swarm. \n","sig":null,"attributes":[{"value":"/ Addresses of manager nodes already participating in the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6901,"byte_end":6968,"line_start":140,"line_end":140,"column_start":5,"column_end":72}},{"value":"serde(rename = \"RemoteAddrs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":6973,"byte_end":7005,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7010,"byte_end":7057,"line_start":142,"line_end":142,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":508},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7242,"byte_end":7252,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"join_token","qualname":"::models::Body2::join_token","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":503},"children":[],"decl_id":null,"docs":" Secret token for joining this swarm.\n","sig":null,"attributes":[{"value":"/ Secret token for joining this swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7106,"byte_end":7146,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"serde(rename = \"JoinToken\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7151,"byte_end":7181,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7186,"byte_end":7233,"line_start":147,"line_end":147,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":574},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7353,"byte_end":7358,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"Body3","qualname":"::models::Body3","value":"Body3 { unlock_key }","parent":null,"children":[{"krate":0,"index":575}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":575},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7488,"byte_end":7498,"line_start":157,"line_end":157,"column_start":9,"column_end":19},"name":"unlock_key","qualname":"::models::Body3::unlock_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":574},"children":[],"decl_id":null,"docs":" The swarm's unlock key.\n","sig":null,"attributes":[{"value":"/ The swarm's unlock key.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7365,"byte_end":7392,"line_start":154,"line_end":154,"column_start":5,"column_end":32}},{"value":"serde(rename = \"UnlockKey\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7397,"byte_end":7427,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7432,"byte_end":7479,"line_start":156,"line_end":156,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7599,"byte_end":7609,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"BuildCache","qualname":"::models::BuildCache","value":"BuildCache { id, parent, typ, description, in_use, shared, size, created_at, last_used_at, usage_count }","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":634},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7700,"byte_end":7702,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"name":"id","qualname":"::models::BuildCache::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7616,"byte_end":7639,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7644,"byte_end":7691,"line_start":164,"line_end":164,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":635},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7813,"byte_end":7819,"line_start":169,"line_end":169,"column_start":9,"column_end":15},"name":"parent","qualname":"::models::BuildCache::parent","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Parent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7725,"byte_end":7752,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7757,"byte_end":7804,"line_start":168,"line_end":168,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":636},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7928,"byte_end":7931,"line_start":173,"line_end":173,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::BuildCache::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7842,"byte_end":7867,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7872,"byte_end":7919,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":637},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8047,"byte_end":8058,"line_start":177,"line_end":177,"column_start":9,"column_end":20},"name":"description","qualname":"::models::BuildCache::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7954,"byte_end":7986,"line_start":175,"line_end":175,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":7991,"byte_end":8038,"line_start":176,"line_end":176,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":638},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8168,"byte_end":8174,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"in_use","qualname":"::models::BuildCache::in_use","value":"std::option::Option<bool>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"InUse\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8081,"byte_end":8107,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8112,"byte_end":8159,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":639},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8283,"byte_end":8289,"line_start":185,"line_end":185,"column_start":9,"column_end":15},"name":"shared","qualname":"::models::BuildCache::shared","value":"std::option::Option<bool>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Shared\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8195,"byte_end":8222,"line_start":183,"line_end":183,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8227,"byte_end":8274,"line_start":184,"line_end":184,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":640},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8462,"byte_end":8466,"line_start":190,"line_end":190,"column_start":9,"column_end":13},"name":"size","qualname":"::models::BuildCache::size","value":"std::option::Option<i64>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Amount of disk space used by the build cache (in bytes). \n","sig":null,"attributes":[{"value":"/ Amount of disk space used by the build cache (in bytes). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8310,"byte_end":8371,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8376,"byte_end":8401,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8406,"byte_end":8453,"line_start":189,"line_end":189,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":641},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8715,"byte_end":8725,"line_start":195,"line_end":195,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::BuildCache::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Date and time at which the build cache was created in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the build cache was created in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8486,"byte_end":8619,"line_start":192,"line_end":192,"column_start":5,"column_end":138}},{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8624,"byte_end":8654,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8659,"byte_end":8706,"line_start":194,"line_end":194,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":642},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8987,"byte_end":8999,"line_start":200,"line_end":200,"column_start":9,"column_end":21},"name":"last_used_at","qualname":"::models::BuildCache::last_used_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":" Date and time at which the build cache was last used in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the build cache was last used in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8755,"byte_end":8890,"line_start":197,"line_end":197,"column_start":5,"column_end":140}},{"value":"serde(rename = \"LastUsedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8895,"byte_end":8926,"line_start":198,"line_end":198,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":8931,"byte_end":8978,"line_start":199,"line_end":199,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9121,"byte_end":9132,"line_start":204,"line_end":204,"column_start":9,"column_end":20},"name":"usage_count","qualname":"::models::BuildCache::usage_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UsageCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9029,"byte_end":9060,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9065,"byte_end":9112,"line_start":203,"line_end":203,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9230,"byte_end":9239,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"BuildInfo","qualname":"::models::BuildInfo","value":"BuildInfo { id, stream, error, error_detail, status, progress, progress_detail, aux }","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9330,"byte_end":9332,"line_start":212,"line_end":212,"column_start":9,"column_end":11},"name":"id","qualname":"::models::BuildInfo::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9246,"byte_end":9269,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9274,"byte_end":9321,"line_start":211,"line_end":211,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9443,"byte_end":9449,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"stream","qualname":"::models::BuildInfo::stream","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"stream\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9355,"byte_end":9382,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9387,"byte_end":9434,"line_start":215,"line_end":215,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9559,"byte_end":9564,"line_start":220,"line_end":220,"column_start":9,"column_end":14},"name":"error","qualname":"::models::BuildInfo::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9472,"byte_end":9498,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9503,"byte_end":9550,"line_start":219,"line_end":219,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9680,"byte_end":9692,"line_start":224,"line_end":224,"column_start":9,"column_end":21},"name":"error_detail","qualname":"::models::BuildInfo::error_detail","value":"std::option::Option<models::ErrorDetail>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"errorDetail\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9587,"byte_end":9619,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9624,"byte_end":9671,"line_start":223,"line_end":223,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":724},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9808,"byte_end":9814,"line_start":228,"line_end":228,"column_start":9,"column_end":15},"name":"status","qualname":"::models::BuildInfo::status","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9720,"byte_end":9747,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9752,"byte_end":9799,"line_start":227,"line_end":227,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":725},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9927,"byte_end":9935,"line_start":232,"line_end":232,"column_start":9,"column_end":17},"name":"progress","qualname":"::models::BuildInfo::progress","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9837,"byte_end":9866,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9871,"byte_end":9918,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":726},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10054,"byte_end":10069,"line_start":236,"line_end":236,"column_start":9,"column_end":24},"name":"progress_detail","qualname":"::models::BuildInfo::progress_detail","value":"std::option::Option<models::ProgressDetail>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progressDetail\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9958,"byte_end":9993,"line_start":234,"line_end":234,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":9998,"byte_end":10045,"line_start":235,"line_end":235,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10185,"byte_end":10188,"line_start":240,"line_end":240,"column_start":9,"column_end":12},"name":"aux","qualname":"::models::BuildInfo::aux","value":"std::option::Option<models::ImageId>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"aux\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10100,"byte_end":10124,"line_start":238,"line_end":238,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10129,"byte_end":10176,"line_start":239,"line_end":239,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":799},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10290,"byte_end":10308,"line_start":245,"line_end":245,"column_start":12,"column_end":30},"name":"BuildPruneResponse","qualname":"::models::BuildPruneResponse","value":"BuildPruneResponse { caches_deleted, space_reclaimed }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":800},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10410,"byte_end":10424,"line_start":248,"line_end":248,"column_start":9,"column_end":23},"name":"caches_deleted","qualname":"::models::BuildPruneResponse::caches_deleted","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CachesDeleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10315,"byte_end":10349,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10354,"byte_end":10401,"line_start":247,"line_end":247,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10586,"byte_end":10601,"line_start":253,"line_end":253,"column_start":9,"column_end":24},"name":"space_reclaimed","qualname":"::models::BuildPruneResponse::space_reclaimed","value":"std::option::Option<i64>","parent":{"krate":0,"index":799},"children":[],"decl_id":null,"docs":" Disk space reclaimed in bytes\n","sig":null,"attributes":[{"value":"/ Disk space reclaimed in bytes","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10452,"byte_end":10485,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"serde(rename = \"SpaceReclaimed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10490,"byte_end":10525,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10530,"byte_end":10577,"line_start":252,"line_end":252,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":861},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10827,"byte_end":10838,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"ClusterInfo","qualname":"::models::ClusterInfo","value":"ClusterInfo { id, version, created_at, updated_at, spec, tls_info, root_rotation_in_progress, data_path_port, default_addr_pool, subnet_size }","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"decl_id":null,"docs":" ClusterInfo represents information about the swarm as is returned by the \\\"/info\\\" endpoint. Join-tokens are not included. \n","sig":null,"attributes":[{"value":"/ ClusterInfo represents information about the swarm as is returned by the \\\"/info\\\" endpoint. Join-tokens are not included. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10620,"byte_end":10747,"line_start":257,"line_end":257,"column_start":1,"column_end":128}}]},{"kind":"Field","id":{"krate":0,"index":862},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10958,"byte_end":10960,"line_start":263,"line_end":263,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ClusterInfo::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" The ID of the swarm.\n","sig":null,"attributes":[{"value":"/ The ID of the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10845,"byte_end":10869,"line_start":260,"line_end":260,"column_start":5,"column_end":29}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10874,"byte_end":10897,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10902,"byte_end":10949,"line_start":262,"line_end":262,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":863},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11072,"byte_end":11079,"line_start":267,"line_end":267,"column_start":9,"column_end":16},"name":"version","qualname":"::models::ClusterInfo::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":10983,"byte_end":11011,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11016,"byte_end":11063,"line_start":266,"line_end":266,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":864},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11336,"byte_end":11346,"line_start":272,"line_end":272,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::ClusterInfo::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" Date and time at which the swarm was initialised in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the swarm was initialised in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11109,"byte_end":11240,"line_start":269,"line_end":269,"column_start":5,"column_end":136}},{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11245,"byte_end":11275,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11280,"byte_end":11327,"line_start":271,"line_end":271,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":865},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11604,"byte_end":11614,"line_start":277,"line_end":277,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::ClusterInfo::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" Date and time at which the swarm was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the swarm was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11376,"byte_end":11508,"line_start":274,"line_end":274,"column_start":5,"column_end":137}},{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11513,"byte_end":11543,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11548,"byte_end":11595,"line_start":276,"line_end":276,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":866},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11730,"byte_end":11734,"line_start":281,"line_end":281,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::ClusterInfo::spec","value":"std::option::Option<models::SwarmSpec>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11644,"byte_end":11669,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11674,"byte_end":11721,"line_start":280,"line_end":280,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":867},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11849,"byte_end":11857,"line_start":285,"line_end":285,"column_start":9,"column_end":17},"name":"tls_info","qualname":"::models::ClusterInfo::tls_info","value":"std::option::Option<models::TlsInfo>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TLSInfo\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11760,"byte_end":11788,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11793,"byte_end":11840,"line_start":284,"line_end":284,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":868},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12066,"byte_end":12091,"line_start":290,"line_end":290,"column_start":9,"column_end":34},"name":"root_rotation_in_progress","qualname":"::models::ClusterInfo::root_rotation_in_progress","value":"std::option::Option<bool>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" Whether there is currently a root CA rotation in progress for the swarm \n","sig":null,"attributes":[{"value":"/ Whether there is currently a root CA rotation in progress for the swarm ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11881,"byte_end":11957,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"serde(rename = \"RootRotationInProgress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":11962,"byte_end":12005,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12010,"byte_end":12057,"line_start":289,"line_end":289,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":869},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12389,"byte_end":12403,"line_start":295,"line_end":295,"column_start":9,"column_end":23},"name":"data_path_port","qualname":"::models::ClusterInfo::data_path_port","value":"std::option::Option<u32>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. If no port is set or is set to 0, the default port (4789) is used. \n","sig":null,"attributes":[{"value":"/ DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. If no port is set or is set to 0, the default port (4789) is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12112,"byte_end":12290,"line_start":292,"line_end":292,"column_start":5,"column_end":183}},{"value":"serde(rename = \"DataPathPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12295,"byte_end":12328,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12333,"byte_end":12380,"line_start":294,"line_end":294,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":870},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12608,"byte_end":12625,"line_start":300,"line_end":300,"column_start":9,"column_end":26},"name":"default_addr_pool","qualname":"::models::ClusterInfo::default_addr_pool","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" Default Address Pool specifies default subnet pools for global scope networks. \n","sig":null,"attributes":[{"value":"/ Default Address Pool specifies default subnet pools for global scope networks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12423,"byte_end":12506,"line_start":297,"line_end":297,"column_start":5,"column_end":88}},{"value":"serde(rename = \"DefaultAddrPool\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12511,"byte_end":12547,"line_start":298,"line_end":298,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12552,"byte_end":12599,"line_start":299,"line_end":299,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":871},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12845,"byte_end":12856,"line_start":305,"line_end":305,"column_start":9,"column_end":20},"name":"subnet_size","qualname":"::models::ClusterInfo::subnet_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":861},"children":[],"decl_id":null,"docs":" SubnetSize specifies the subnet size of the networks created from the default subnet pool. \n","sig":null,"attributes":[{"value":"/ SubnetSize specifies the subnet size of the networks created from the default subnet pool. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12653,"byte_end":12748,"line_start":302,"line_end":302,"column_start":5,"column_end":100}},{"value":"serde(rename = \"SubnetSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12753,"byte_end":12784,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12789,"byte_end":12836,"line_start":304,"line_end":304,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13110,"byte_end":13116,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"Commit","qualname":"::models::Commit","value":"Commit { id, expected }","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"decl_id":null,"docs":" Commit holds the Git-commit (SHA1) that a binary was built from, as reported in the version-string of external tools, such as `containerd`, or `runC`. \n","sig":null,"attributes":[{"value":"/ Commit holds the Git-commit (SHA1) that a binary was built from, as reported in the version-string of external tools, such as `containerd`, or `runC`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":12875,"byte_end":13030,"line_start":309,"line_end":309,"column_start":1,"column_end":156}}]},{"kind":"Field","id":{"krate":0,"index":948},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13250,"byte_end":13252,"line_start":315,"line_end":315,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Commit::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Actual commit ID of external tool.\n","sig":null,"attributes":[{"value":"/ Actual commit ID of external tool.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13123,"byte_end":13161,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13166,"byte_end":13189,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13194,"byte_end":13241,"line_start":314,"line_end":314,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13443,"byte_end":13451,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"expected","qualname":"::models::Commit::expected","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" Commit ID of external tool expected by dockerd as set at build time. \n","sig":null,"attributes":[{"value":"/ Commit ID of external tool expected by dockerd as set at build time. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13275,"byte_end":13348,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"serde(rename = \"Expected\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13353,"byte_end":13382,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13387,"byte_end":13434,"line_start":319,"line_end":319,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13552,"byte_end":13558,"line_start":325,"line_end":325,"column_start":12,"column_end":18},"name":"Config","qualname":"::models::Config","value":"Config { id, version, created_at, updated_at, spec }","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1010},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13649,"byte_end":13651,"line_start":328,"line_end":328,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Config::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13565,"byte_end":13588,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13593,"byte_end":13640,"line_start":327,"line_end":327,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1011},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13763,"byte_end":13770,"line_start":332,"line_end":332,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Config::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13674,"byte_end":13702,"line_start":330,"line_end":330,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13707,"byte_end":13754,"line_start":331,"line_end":331,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1012},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13891,"byte_end":13901,"line_start":336,"line_end":336,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Config::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13800,"byte_end":13830,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13835,"byte_end":13882,"line_start":335,"line_end":335,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1013},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14022,"byte_end":14032,"line_start":340,"line_end":340,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Config::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13931,"byte_end":13961,"line_start":338,"line_end":338,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":13966,"byte_end":14013,"line_start":339,"line_end":339,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1014},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14148,"byte_end":14152,"line_start":344,"line_end":344,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Config::spec","value":"std::option::Option<models::ConfigSpec>","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14062,"byte_end":14087,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14092,"byte_end":14139,"line_start":343,"line_end":343,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14257,"byte_end":14267,"line_start":349,"line_end":349,"column_start":12,"column_end":22},"name":"ConfigSpec","qualname":"::models::ConfigSpec","value":"ConfigSpec { name, labels, data, templating }","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1081},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14401,"byte_end":14405,"line_start":353,"line_end":353,"column_start":9,"column_end":13},"name":"name","qualname":"::models::ConfigSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" User-defined name of the config.\n","sig":null,"attributes":[{"value":"/ User-defined name of the config.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14274,"byte_end":14310,"line_start":350,"line_end":350,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14315,"byte_end":14340,"line_start":351,"line_end":351,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14345,"byte_end":14392,"line_start":352,"line_end":352,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1082},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14557,"byte_end":14563,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::ConfigSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14428,"byte_end":14464,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14469,"byte_end":14496,"line_start":356,"line_end":356,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14501,"byte_end":14548,"line_start":357,"line_end":357,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1083},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14795,"byte_end":14799,"line_start":363,"line_end":363,"column_start":9,"column_end":13},"name":"data","qualname":"::models::ConfigSpec::data","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-5)) config data. \n","sig":null,"attributes":[{"value":"/ Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-5)) config data. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14603,"byte_end":14704,"line_start":360,"line_end":360,"column_start":5,"column_end":106}},{"value":"serde(rename = \"Data\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14709,"byte_end":14734,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14739,"byte_end":14786,"line_start":362,"line_end":362,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1084},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15083,"byte_end":15093,"line_start":368,"line_end":368,"column_start":9,"column_end":19},"name":"templating","qualname":"::models::ConfigSpec::templating","value":"std::option::Option<models::Driver>","parent":{"krate":0,"index":1080},"children":[],"decl_id":null,"docs":" Templating driver, if applicable  Templating controls whether and how to evaluate the config payload as a template. If no driver is set, no templating is used. \n","sig":null,"attributes":[{"value":"/ Templating driver, if applicable  Templating controls whether and how to evaluate the config payload as a template. If no driver is set, no templating is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14822,"byte_end":14986,"line_start":365,"line_end":365,"column_start":5,"column_end":169}},{"value":"serde(rename = \"Templating\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":14991,"byte_end":15022,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15027,"byte_end":15074,"line_start":367,"line_end":367,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15194,"byte_end":15203,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"Container","qualname":"::models::Container","value":"Container { container, endpoint_config }","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1149},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15368,"byte_end":15377,"line_start":377,"line_end":377,"column_start":9,"column_end":18},"name":"container","qualname":"::models::Container::container","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1148},"children":[],"decl_id":null,"docs":" The ID or name of the container to connect to the network.\n","sig":null,"attributes":[{"value":"/ The ID or name of the container to connect to the network.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15210,"byte_end":15272,"line_start":374,"line_end":374,"column_start":5,"column_end":67}},{"value":"serde(rename = \"Container\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15277,"byte_end":15307,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15312,"byte_end":15359,"line_start":376,"line_end":376,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1150},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15496,"byte_end":15511,"line_start":381,"line_end":381,"column_start":9,"column_end":24},"name":"endpoint_config","qualname":"::models::Container::endpoint_config","value":"std::option::Option<models::EndpointSettings>","parent":{"krate":0,"index":1148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EndpointConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15400,"byte_end":15435,"line_start":379,"line_end":379,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15440,"byte_end":15487,"line_start":380,"line_end":380,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15622,"byte_end":15632,"line_start":386,"line_end":386,"column_start":12,"column_end":22},"name":"Container1","qualname":"::models::Container1","value":"Container1 { container, force }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15803,"byte_end":15812,"line_start":390,"line_end":390,"column_start":9,"column_end":18},"name":"container","qualname":"::models::Container1::container","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":" The ID or name of the container to disconnect from the network. \n","sig":null,"attributes":[{"value":"/ The ID or name of the container to disconnect from the network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15639,"byte_end":15707,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"serde(rename = \"Container\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15712,"byte_end":15742,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15747,"byte_end":15794,"line_start":389,"line_end":389,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15983,"byte_end":15988,"line_start":395,"line_end":395,"column_start":9,"column_end":14},"name":"force","qualname":"::models::Container1::force","value":"std::option::Option<bool>","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":" Force the container to disconnect from the network. \n","sig":null,"attributes":[{"value":"/ Force the container to disconnect from the network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15835,"byte_end":15891,"line_start":392,"line_end":392,"column_start":5,"column_end":61}},{"value":"serde(rename = \"Force\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15896,"byte_end":15922,"line_start":393,"line_end":393,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":15927,"byte_end":15974,"line_start":394,"line_end":394,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16145,"byte_end":16172,"line_start":401,"line_end":401,"column_start":12,"column_end":39},"name":"ContainerChangeResponseItem","qualname":"::models::ContainerChangeResponseItem","value":"ContainerChangeResponseItem { path, kind }","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":" change item in response to ContainerChanges operation\n","sig":null,"attributes":[{"value":"/ change item in response to ContainerChanges operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16008,"byte_end":16065,"line_start":399,"line_end":399,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1273},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16251,"byte_end":16255,"line_start":404,"line_end":404,"column_start":9,"column_end":13},"name":"path","qualname":"::models::ContainerChangeResponseItem::path","value":"std::string::String","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Path to file that has changed\n","sig":null,"attributes":[{"value":"/ Path to file that has changed","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16179,"byte_end":16212,"line_start":402,"line_end":402,"column_start":5,"column_end":38}},{"value":"serde(rename = \"Path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16217,"byte_end":16242,"line_start":403,"line_end":403,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1274},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16327,"byte_end":16331,"line_start":408,"line_end":408,"column_start":9,"column_end":13},"name":"kind","qualname":"::models::ContainerChangeResponseItem::kind","value":"i64","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Kind of change\n","sig":null,"attributes":[{"value":"/ Kind of change","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16270,"byte_end":16288,"line_start":406,"line_end":406,"column_start":5,"column_end":23}},{"value":"serde(rename = \"Kind\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16293,"byte_end":16318,"line_start":407,"line_end":407,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16486,"byte_end":16501,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"ContainerConfig","qualname":"::models::ContainerConfig","value":"ContainerConfig { hostname, domainname, user, attach_stdin, attach_stdout, attach_stderr, exposed_ports, tty, open_stdin, stdin_once, env, cmd, healthcheck, args_escaped, image, volumes, working_dir, entrypoint, network_disabled, mac_address, on_build, labels, stop_signal, stop_timeout, shell }","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":" Configuration for a container that is portable between hosts\n","sig":null,"attributes":[{"value":"/ Configuration for a container that is portable between hosts","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16342,"byte_end":16406,"line_start":412,"line_end":412,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1335},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16675,"byte_end":16683,"line_start":418,"line_end":418,"column_start":9,"column_end":17},"name":"hostname","qualname":"::models::ContainerConfig::hostname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The hostname to use for the container, as a valid RFC 1123 hostname.\n","sig":null,"attributes":[{"value":"/ The hostname to use for the container, as a valid RFC 1123 hostname.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16508,"byte_end":16580,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"serde(rename = \"Hostname\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16585,"byte_end":16614,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16619,"byte_end":16666,"line_start":417,"line_end":417,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1336},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16848,"byte_end":16858,"line_start":423,"line_end":423,"column_start":9,"column_end":19},"name":"domainname","qualname":"::models::ContainerConfig::domainname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The domain name to use for the container.\n","sig":null,"attributes":[{"value":"/ The domain name to use for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16706,"byte_end":16751,"line_start":420,"line_end":420,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Domainname\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16756,"byte_end":16787,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16792,"byte_end":16839,"line_start":422,"line_end":422,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1337},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17031,"byte_end":17035,"line_start":428,"line_end":428,"column_start":9,"column_end":13},"name":"user","qualname":"::models::ContainerConfig::user","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The user that commands are run as inside the container.\n","sig":null,"attributes":[{"value":"/ The user that commands are run as inside the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16881,"byte_end":16940,"line_start":425,"line_end":425,"column_start":5,"column_end":64}},{"value":"serde(rename = \"User\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16945,"byte_end":16970,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":16975,"byte_end":17022,"line_start":427,"line_end":427,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1338},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17189,"byte_end":17201,"line_start":433,"line_end":433,"column_start":9,"column_end":21},"name":"attach_stdin","qualname":"::models::ContainerConfig::attach_stdin","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Whether to attach to `stdin`.\n","sig":null,"attributes":[{"value":"/ Whether to attach to `stdin`.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17058,"byte_end":17091,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"serde(rename = \"AttachStdin\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17096,"byte_end":17128,"line_start":431,"line_end":431,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17133,"byte_end":17180,"line_start":432,"line_end":432,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1339},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17355,"byte_end":17368,"line_start":438,"line_end":438,"column_start":9,"column_end":22},"name":"attach_stdout","qualname":"::models::ContainerConfig::attach_stdout","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Whether to attach to `stdout`.\n","sig":null,"attributes":[{"value":"/ Whether to attach to `stdout`.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17222,"byte_end":17256,"line_start":435,"line_end":435,"column_start":5,"column_end":39}},{"value":"serde(rename = \"AttachStdout\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17261,"byte_end":17294,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17299,"byte_end":17346,"line_start":437,"line_end":437,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1340},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17522,"byte_end":17535,"line_start":443,"line_end":443,"column_start":9,"column_end":22},"name":"attach_stderr","qualname":"::models::ContainerConfig::attach_stderr","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Whether to attach to `stderr`.\n","sig":null,"attributes":[{"value":"/ Whether to attach to `stderr`.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17389,"byte_end":17423,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"serde(rename = \"AttachStderr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17428,"byte_end":17461,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17466,"byte_end":17513,"line_start":442,"line_end":442,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1341},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17750,"byte_end":17763,"line_start":448,"line_end":448,"column_start":9,"column_end":22},"name":"exposed_ports","qualname":"::models::ContainerConfig::exposed_ports","value":"std::option::Option<std::collections::HashMap<std::string::String, std::collections::HashMap<(), ()>>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" An object mapping ports to an empty object in the form:  `{\\\"<port>/<tcp|udp|sctp>\\\": {}}` \n","sig":null,"attributes":[{"value":"/ An object mapping ports to an empty object in the form:  `{\\\"<port>/<tcp|udp|sctp>\\\": {}}` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17556,"byte_end":17651,"line_start":445,"line_end":445,"column_start":5,"column_end":100}},{"value":"serde(rename = \"ExposedPorts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17656,"byte_end":17689,"line_start":446,"line_end":446,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17694,"byte_end":17741,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1342},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17979,"byte_end":17982,"line_start":453,"line_end":453,"column_start":9,"column_end":12},"name":"tty","qualname":"::models::ContainerConfig::tty","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Attach standard streams to a TTY, including `stdin` if it is not closed. \n","sig":null,"attributes":[{"value":"/ Attach standard streams to a TTY, including `stdin` if it is not closed. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17812,"byte_end":17889,"line_start":450,"line_end":450,"column_start":5,"column_end":82}},{"value":"serde(rename = \"Tty\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17894,"byte_end":17918,"line_start":451,"line_end":451,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":17923,"byte_end":17970,"line_start":452,"line_end":452,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1343},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18115,"byte_end":18125,"line_start":458,"line_end":458,"column_start":9,"column_end":19},"name":"open_stdin","qualname":"::models::ContainerConfig::open_stdin","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Open `stdin`\n","sig":null,"attributes":[{"value":"/ Open `stdin`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18003,"byte_end":18019,"line_start":455,"line_end":455,"column_start":5,"column_end":21}},{"value":"serde(rename = \"OpenStdin\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18024,"byte_end":18054,"line_start":456,"line_end":456,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18059,"byte_end":18106,"line_start":457,"line_end":457,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1344},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18297,"byte_end":18307,"line_start":463,"line_end":463,"column_start":9,"column_end":19},"name":"stdin_once","qualname":"::models::ContainerConfig::stdin_once","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Close `stdin` after one attached client disconnects\n","sig":null,"attributes":[{"value":"/ Close `stdin` after one attached client disconnects","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18146,"byte_end":18201,"line_start":460,"line_end":460,"column_start":5,"column_end":60}},{"value":"serde(rename = \"StdinOnce\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18206,"byte_end":18236,"line_start":461,"line_end":461,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18241,"byte_end":18288,"line_start":462,"line_end":462,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1345},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18610,"byte_end":18613,"line_start":468,"line_end":468,"column_start":9,"column_end":12},"name":"env","qualname":"::models::ContainerConfig::env","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" A list of environment variables to set inside the container in the form `[\\\"VAR=value\\\", ...]`. A variable without `=` is removed from the environment, rather than to have an empty value. \n","sig":null,"attributes":[{"value":"/ A list of environment variables to set inside the container in the form `[\\\"VAR=value\\\", ...]`. A variable without `=` is removed from the environment, rather than to have an empty value. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18328,"byte_end":18520,"line_start":465,"line_end":465,"column_start":5,"column_end":197}},{"value":"serde(rename = \"Env\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18525,"byte_end":18549,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18554,"byte_end":18601,"line_start":467,"line_end":467,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1346},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18796,"byte_end":18799,"line_start":473,"line_end":473,"column_start":9,"column_end":12},"name":"cmd","qualname":"::models::ContainerConfig::cmd","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Command to run specified as a string or an array of strings. \n","sig":null,"attributes":[{"value":"/ Command to run specified as a string or an array of strings. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18641,"byte_end":18706,"line_start":470,"line_end":470,"column_start":5,"column_end":70}},{"value":"serde(rename = \"Cmd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18711,"byte_end":18735,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18740,"byte_end":18787,"line_start":472,"line_end":472,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18920,"byte_end":18931,"line_start":477,"line_end":477,"column_start":9,"column_end":20},"name":"healthcheck","qualname":"::models::ContainerConfig::healthcheck","value":"std::option::Option<models::HealthConfig>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Healthcheck\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18827,"byte_end":18859,"line_start":475,"line_end":475,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18864,"byte_end":18911,"line_start":476,"line_end":476,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1348},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19103,"byte_end":19115,"line_start":482,"line_end":482,"column_start":9,"column_end":21},"name":"args_escaped","qualname":"::models::ContainerConfig::args_escaped","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Command is already escaped (Windows only)\n","sig":null,"attributes":[{"value":"/ Command is already escaped (Windows only)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":18960,"byte_end":19005,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"serde(rename = \"ArgsEscaped\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19010,"byte_end":19042,"line_start":480,"line_end":480,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19047,"byte_end":19094,"line_start":481,"line_end":481,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1349},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19290,"byte_end":19295,"line_start":487,"line_end":487,"column_start":9,"column_end":14},"name":"image","qualname":"::models::ContainerConfig::image","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The name of the image to use when creating the container/ \n","sig":null,"attributes":[{"value":"/ The name of the image to use when creating the container/ ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19136,"byte_end":19198,"line_start":484,"line_end":484,"column_start":5,"column_end":67}},{"value":"serde(rename = \"Image\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19203,"byte_end":19229,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19234,"byte_end":19281,"line_start":486,"line_end":486,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1350},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19491,"byte_end":19498,"line_start":492,"line_end":492,"column_start":9,"column_end":16},"name":"volumes","qualname":"::models::ContainerConfig::volumes","value":"std::option::Option<std::collections::HashMap<std::string::String, std::collections::HashMap<(), ()>>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" An object mapping mount point paths inside the container to empty objects. \n","sig":null,"attributes":[{"value":"/ An object mapping mount point paths inside the container to empty objects. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19318,"byte_end":19397,"line_start":489,"line_end":489,"column_start":5,"column_end":84}},{"value":"serde(rename = \"Volumes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19402,"byte_end":19430,"line_start":490,"line_end":490,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19435,"byte_end":19482,"line_start":491,"line_end":491,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1351},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19693,"byte_end":19704,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"working_dir","qualname":"::models::ContainerConfig::working_dir","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The working directory for commands to run in.\n","sig":null,"attributes":[{"value":"/ The working directory for commands to run in.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19547,"byte_end":19596,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"serde(rename = \"WorkingDir\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19601,"byte_end":19632,"line_start":495,"line_end":495,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19637,"byte_end":19684,"line_start":496,"line_end":496,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1352},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20110,"byte_end":20120,"line_start":502,"line_end":502,"column_start":9,"column_end":19},"name":"entrypoint","qualname":"::models::ContainerConfig::entrypoint","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" The entry point for the container as a string or an array of strings.  If the array consists of exactly one empty string (`[\\\"\\\"]`) then the entry point is reset to system default (i.e., the entry point used by docker when there is no `ENTRYPOINT` instruction in the `Dockerfile`). \n","sig":null,"attributes":[{"value":"/ The entry point for the container as a string or an array of strings.  If the array consists of exactly one empty string (`[\\\"\\\"]`) then the entry point is reset to system default (i.e., the entry point used by docker when there is no `ENTRYPOINT` instruction in the `Dockerfile`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":19727,"byte_end":20013,"line_start":499,"line_end":499,"column_start":5,"column_end":291}},{"value":"serde(rename = \"Entrypoint\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20018,"byte_end":20049,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20054,"byte_end":20101,"line_start":501,"line_end":501,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1353},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20291,"byte_end":20307,"line_start":507,"line_end":507,"column_start":9,"column_end":25},"name":"network_disabled","qualname":"::models::ContainerConfig::network_disabled","value":"std::option::Option<bool>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Disable networking for the container.\n","sig":null,"attributes":[{"value":"/ Disable networking for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20148,"byte_end":20189,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"serde(rename = \"NetworkDisabled\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20194,"byte_end":20230,"line_start":505,"line_end":505,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20235,"byte_end":20282,"line_start":506,"line_end":506,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20458,"byte_end":20469,"line_start":512,"line_end":512,"column_start":9,"column_end":20},"name":"mac_address","qualname":"::models::ContainerConfig::mac_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" MAC address of the container.\n","sig":null,"attributes":[{"value":"/ MAC address of the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20328,"byte_end":20361,"line_start":509,"line_end":509,"column_start":5,"column_end":38}},{"value":"serde(rename = \"MacAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20366,"byte_end":20397,"line_start":510,"line_end":510,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20402,"byte_end":20449,"line_start":511,"line_end":511,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20656,"byte_end":20664,"line_start":517,"line_end":517,"column_start":9,"column_end":17},"name":"on_build","qualname":"::models::ContainerConfig::on_build","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" `ONBUILD` metadata that were defined in the image's `Dockerfile`. \n","sig":null,"attributes":[{"value":"/ `ONBUILD` metadata that were defined in the image's `Dockerfile`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20492,"byte_end":20562,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"serde(rename = \"OnBuild\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20567,"byte_end":20595,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20600,"byte_end":20647,"line_start":516,"line_end":516,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20821,"byte_end":20827,"line_start":522,"line_end":522,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::ContainerConfig::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20692,"byte_end":20728,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20733,"byte_end":20760,"line_start":520,"line_end":520,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20765,"byte_end":20812,"line_start":521,"line_end":521,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21028,"byte_end":21039,"line_start":527,"line_end":527,"column_start":9,"column_end":20},"name":"stop_signal","qualname":"::models::ContainerConfig::stop_signal","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Signal to stop a container as a string or unsigned integer. \n","sig":null,"attributes":[{"value":"/ Signal to stop a container as a string or unsigned integer. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20867,"byte_end":20931,"line_start":524,"line_end":524,"column_start":5,"column_end":69}},{"value":"serde(rename = \"StopSignal\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20936,"byte_end":20967,"line_start":525,"line_end":525,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":20972,"byte_end":21019,"line_start":526,"line_end":526,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1358},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21203,"byte_end":21215,"line_start":532,"line_end":532,"column_start":9,"column_end":21},"name":"stop_timeout","qualname":"::models::ContainerConfig::stop_timeout","value":"std::option::Option<i64>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Timeout to stop a container in seconds.\n","sig":null,"attributes":[{"value":"/ Timeout to stop a container in seconds.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21062,"byte_end":21105,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"serde(rename = \"StopTimeout\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21110,"byte_end":21142,"line_start":530,"line_end":530,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21147,"byte_end":21194,"line_start":531,"line_end":531,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1359},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21391,"byte_end":21396,"line_start":537,"line_end":537,"column_start":9,"column_end":14},"name":"shell","qualname":"::models::ContainerConfig::shell","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1334},"children":[],"decl_id":null,"docs":" Shell for when `RUN`, `CMD`, and `ENTRYPOINT` uses a shell. \n","sig":null,"attributes":[{"value":"/ Shell for when `RUN`, `CMD`, and `ENTRYPOINT` uses a shell. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21235,"byte_end":21299,"line_start":534,"line_end":534,"column_start":5,"column_end":69}},{"value":"serde(rename = \"Shell\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21304,"byte_end":21330,"line_start":535,"line_end":535,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21335,"byte_end":21382,"line_start":536,"line_end":536,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21547,"byte_end":21570,"line_start":543,"line_end":543,"column_start":12,"column_end":35},"name":"ContainerCreateResponse","qualname":"::models::ContainerCreateResponse","value":"ContainerCreateResponse { id, warnings }","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"decl_id":null,"docs":" OK response to ContainerCreate operation\n","sig":null,"attributes":[{"value":"/ OK response to ContainerCreate operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21423,"byte_end":21467,"line_start":541,"line_end":541,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1466},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21649,"byte_end":21651,"line_start":546,"line_end":546,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ContainerCreateResponse::id","value":"std::string::String","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" The ID of the created container\n","sig":null,"attributes":[{"value":"/ The ID of the created container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21577,"byte_end":21612,"line_start":544,"line_end":544,"column_start":5,"column_end":40}},{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21617,"byte_end":21640,"line_start":545,"line_end":545,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1467},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21824,"byte_end":21832,"line_start":551,"line_end":551,"column_start":9,"column_end":17},"name":"warnings","qualname":"::models::ContainerCreateResponse::warnings","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Warnings encountered when creating the container\n","sig":null,"attributes":[{"value":"/ Warnings encountered when creating the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21666,"byte_end":21718,"line_start":548,"line_end":548,"column_start":5,"column_end":57}},{"value":"serde(rename = \"Warnings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21723,"byte_end":21752,"line_start":549,"line_end":549,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21757,"byte_end":21815,"line_start":550,"line_end":550,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1546},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21930,"byte_end":21954,"line_start":556,"line_end":556,"column_start":12,"column_end":36},"name":"ContainerInspectResponse","qualname":"::models::ContainerInspectResponse","value":"ContainerInspectResponse { id, created, path, args, state, image, resolv_conf_path, hostname_path, hosts_path, log_path, node, name, restart_count, driver, platform, mount_label, process_label, app_armor_profile, exec_i_ds, host_config, graph_driver, size_rw, size_root_fs, mounts, config, network_settings }","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1547},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22077,"byte_end":22079,"line_start":560,"line_end":560,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ContainerInspectResponse::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The ID of the container\n","sig":null,"attributes":[{"value":"/ The ID of the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21961,"byte_end":21988,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":21993,"byte_end":22016,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22021,"byte_end":22068,"line_start":559,"line_end":559,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1548},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22234,"byte_end":22241,"line_start":565,"line_end":565,"column_start":9,"column_end":16},"name":"created","qualname":"::models::ContainerInspectResponse::created","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The time the container was created\n","sig":null,"attributes":[{"value":"/ The time the container was created","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22102,"byte_end":22140,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22145,"byte_end":22173,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22178,"byte_end":22225,"line_start":564,"line_end":564,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1549},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22392,"byte_end":22396,"line_start":570,"line_end":570,"column_start":9,"column_end":13},"name":"path","qualname":"::models::ContainerInspectResponse::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The path to the command being run\n","sig":null,"attributes":[{"value":"/ The path to the command being run","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22264,"byte_end":22301,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"serde(rename = \"Path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22306,"byte_end":22331,"line_start":568,"line_end":568,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22336,"byte_end":22383,"line_start":569,"line_end":569,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1550},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22552,"byte_end":22556,"line_start":575,"line_end":575,"column_start":9,"column_end":13},"name":"args","qualname":"::models::ContainerInspectResponse::args","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The arguments to the command being run\n","sig":null,"attributes":[{"value":"/ The arguments to the command being run","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22419,"byte_end":22461,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"serde(rename = \"Args\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22466,"byte_end":22491,"line_start":573,"line_end":573,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22496,"byte_end":22543,"line_start":574,"line_end":574,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1551},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22671,"byte_end":22676,"line_start":579,"line_end":579,"column_start":9,"column_end":14},"name":"state","qualname":"::models::ContainerInspectResponse::state","value":"std::option::Option<models::ContainerState>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"State\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22584,"byte_end":22610,"line_start":577,"line_end":577,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22615,"byte_end":22662,"line_start":578,"line_end":578,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1552},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22827,"byte_end":22832,"line_start":584,"line_end":584,"column_start":9,"column_end":14},"name":"image","qualname":"::models::ContainerInspectResponse::image","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The container's image ID\n","sig":null,"attributes":[{"value":"/ The container's image ID","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22707,"byte_end":22735,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"serde(rename = \"Image\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22740,"byte_end":22766,"line_start":582,"line_end":582,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22771,"byte_end":22818,"line_start":583,"line_end":583,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1553},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22951,"byte_end":22967,"line_start":588,"line_end":588,"column_start":9,"column_end":25},"name":"resolv_conf_path","qualname":"::models::ContainerInspectResponse::resolv_conf_path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ResolvConfPath\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22855,"byte_end":22890,"line_start":586,"line_end":586,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22895,"byte_end":22942,"line_start":587,"line_end":587,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1554},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23084,"byte_end":23097,"line_start":592,"line_end":592,"column_start":9,"column_end":22},"name":"hostname_path","qualname":"::models::ContainerInspectResponse::hostname_path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"HostnamePath\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":22990,"byte_end":23023,"line_start":590,"line_end":590,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23028,"byte_end":23075,"line_start":591,"line_end":591,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23211,"byte_end":23221,"line_start":596,"line_end":596,"column_start":9,"column_end":19},"name":"hosts_path","qualname":"::models::ContainerInspectResponse::hosts_path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"HostsPath\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23120,"byte_end":23150,"line_start":594,"line_end":594,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23155,"byte_end":23202,"line_start":595,"line_end":595,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1556},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23333,"byte_end":23341,"line_start":600,"line_end":600,"column_start":9,"column_end":17},"name":"log_path","qualname":"::models::ContainerInspectResponse::log_path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LogPath\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23244,"byte_end":23272,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23277,"byte_end":23324,"line_start":599,"line_end":599,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1557},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23463,"byte_end":23467,"line_start":605,"line_end":605,"column_start":9,"column_end":13},"name":"node","qualname":"::models::ContainerInspectResponse::node","value":"std::option::Option<std::collections::HashMap<(), ()>>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" TODO\n","sig":null,"attributes":[{"value":"/ TODO","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23364,"byte_end":23372,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"serde(rename = \"Node\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23377,"byte_end":23402,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23407,"byte_end":23454,"line_start":604,"line_end":604,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23585,"byte_end":23589,"line_start":609,"line_end":609,"column_start":9,"column_end":13},"name":"name","qualname":"::models::ContainerInspectResponse::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23499,"byte_end":23524,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23529,"byte_end":23576,"line_start":608,"line_end":608,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1559},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23706,"byte_end":23719,"line_start":613,"line_end":613,"column_start":9,"column_end":22},"name":"restart_count","qualname":"::models::ContainerInspectResponse::restart_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RestartCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23612,"byte_end":23645,"line_start":611,"line_end":611,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23650,"byte_end":23697,"line_start":612,"line_end":612,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1560},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23827,"byte_end":23833,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::ContainerInspectResponse::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23739,"byte_end":23766,"line_start":615,"line_end":615,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23771,"byte_end":23818,"line_start":616,"line_end":616,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1561},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23946,"byte_end":23954,"line_start":621,"line_end":621,"column_start":9,"column_end":17},"name":"platform","qualname":"::models::ContainerInspectResponse::platform","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Platform\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23856,"byte_end":23885,"line_start":619,"line_end":619,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23890,"byte_end":23937,"line_start":620,"line_end":620,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1562},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24069,"byte_end":24080,"line_start":625,"line_end":625,"column_start":9,"column_end":20},"name":"mount_label","qualname":"::models::ContainerInspectResponse::mount_label","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"MountLabel\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":23977,"byte_end":24008,"line_start":623,"line_end":623,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24013,"byte_end":24060,"line_start":624,"line_end":624,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24197,"byte_end":24210,"line_start":629,"line_end":629,"column_start":9,"column_end":22},"name":"process_label","qualname":"::models::ContainerInspectResponse::process_label","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ProcessLabel\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24103,"byte_end":24136,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24141,"byte_end":24188,"line_start":628,"line_end":628,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1564},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24330,"byte_end":24347,"line_start":633,"line_end":633,"column_start":9,"column_end":26},"name":"app_armor_profile","qualname":"::models::ContainerInspectResponse::app_armor_profile","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"AppArmorProfile\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24233,"byte_end":24269,"line_start":631,"line_end":631,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24274,"byte_end":24321,"line_start":632,"line_end":632,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1565},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24524,"byte_end":24533,"line_start":638,"line_end":638,"column_start":9,"column_end":18},"name":"exec_i_ds","qualname":"::models::ContainerInspectResponse::exec_i_ds","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" IDs of exec instances that are running in the container.\n","sig":null,"attributes":[{"value":"/ IDs of exec instances that are running in the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24370,"byte_end":24430,"line_start":635,"line_end":635,"column_start":5,"column_end":65}},{"value":"serde(rename = \"ExecIDs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24435,"byte_end":24463,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24468,"byte_end":24515,"line_start":637,"line_end":637,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1566},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24653,"byte_end":24664,"line_start":642,"line_end":642,"column_start":9,"column_end":20},"name":"host_config","qualname":"::models::ContainerInspectResponse::host_config","value":"std::option::Option<models::HostConfig>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"HostConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24561,"byte_end":24592,"line_start":640,"line_end":640,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24597,"byte_end":24644,"line_start":641,"line_end":641,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1567},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24784,"byte_end":24796,"line_start":646,"line_end":646,"column_start":9,"column_end":21},"name":"graph_driver","qualname":"::models::ContainerInspectResponse::graph_driver","value":"std::option::Option<models::GraphDriverData>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"GraphDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24691,"byte_end":24723,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24728,"byte_end":24775,"line_start":645,"line_end":645,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1568},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24996,"byte_end":25003,"line_start":651,"line_end":651,"column_start":9,"column_end":16},"name":"size_rw","qualname":"::models::ContainerInspectResponse::size_rw","value":"std::option::Option<i64>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The size of files that have been created or changed by this container. \n","sig":null,"attributes":[{"value":"/ The size of files that have been created or changed by this container. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24828,"byte_end":24903,"line_start":648,"line_end":648,"column_start":5,"column_end":80}},{"value":"serde(rename = \"SizeRw\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24908,"byte_end":24935,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":24940,"byte_end":24987,"line_start":650,"line_end":650,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1569},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25174,"byte_end":25186,"line_start":656,"line_end":656,"column_start":9,"column_end":21},"name":"size_root_fs","qualname":"::models::ContainerInspectResponse::size_root_fs","value":"std::option::Option<i64>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":" The total size of all the files in this container.\n","sig":null,"attributes":[{"value":"/ The total size of all the files in this container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25023,"byte_end":25077,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"serde(rename = \"SizeRootFs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25082,"byte_end":25113,"line_start":654,"line_end":654,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25118,"byte_end":25165,"line_start":655,"line_end":655,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1570},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25294,"byte_end":25300,"line_start":660,"line_end":660,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::ContainerInspectResponse::mounts","value":"std::option::Option<std::vec::Vec<models::MountPoint>>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25206,"byte_end":25233,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25238,"byte_end":25285,"line_start":659,"line_end":659,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25420,"byte_end":25426,"line_start":664,"line_end":664,"column_start":9,"column_end":15},"name":"config","qualname":"::models::ContainerInspectResponse::config","value":"std::option::Option<models::ContainerConfig>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25332,"byte_end":25359,"line_start":662,"line_end":662,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25364,"byte_end":25411,"line_start":663,"line_end":663,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1572},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25555,"byte_end":25571,"line_start":668,"line_end":668,"column_start":9,"column_end":25},"name":"network_settings","qualname":"::models::ContainerInspectResponse::network_settings","value":"std::option::Option<models::NetworkSettings>","parent":{"krate":0,"index":1546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NetworkSettings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25458,"byte_end":25494,"line_start":666,"line_end":666,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25499,"byte_end":25546,"line_start":667,"line_end":667,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25681,"byte_end":25703,"line_start":673,"line_end":673,"column_start":12,"column_end":34},"name":"ContainerPruneResponse","qualname":"::models::ContainerPruneResponse","value":"ContainerPruneResponse { containers_deleted, space_reclaimed }","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1681},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25849,"byte_end":25867,"line_start":677,"line_end":677,"column_start":9,"column_end":27},"name":"containers_deleted","qualname":"::models::ContainerPruneResponse::containers_deleted","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1680},"children":[],"decl_id":null,"docs":" Container IDs that were deleted\n","sig":null,"attributes":[{"value":"/ Container IDs that were deleted","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25710,"byte_end":25745,"line_start":674,"line_end":674,"column_start":5,"column_end":40}},{"value":"serde(rename = \"ContainersDeleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25750,"byte_end":25788,"line_start":675,"line_end":675,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25793,"byte_end":25840,"line_start":676,"line_end":676,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1682},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26029,"byte_end":26044,"line_start":682,"line_end":682,"column_start":9,"column_end":24},"name":"space_reclaimed","qualname":"::models::ContainerPruneResponse::space_reclaimed","value":"std::option::Option<i64>","parent":{"krate":0,"index":1680},"children":[],"decl_id":null,"docs":" Disk space reclaimed in bytes\n","sig":null,"attributes":[{"value":"/ Disk space reclaimed in bytes","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25895,"byte_end":25928,"line_start":679,"line_end":679,"column_start":5,"column_end":38}},{"value":"serde(rename = \"SpaceReclaimed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25933,"byte_end":25968,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":25973,"byte_end":26020,"line_start":681,"line_end":681,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1742},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26276,"byte_end":26290,"line_start":688,"line_end":688,"column_start":12,"column_end":26},"name":"ContainerState","qualname":"::models::ContainerState","value":"ContainerState { status, running, paused, restarting, oom_killed, dead, pid, exit_code, error, started_at, finished_at, health }","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754}],"decl_id":null,"docs":" ContainerState stores container's running state. It's part of ContainerJSONBase and will be returned by the \\\"inspect\\\" command. \n","sig":null,"attributes":[{"value":"/ ContainerState stores container's running state. It's part of ContainerJSONBase and will be returned by the \\\"inspect\\\" command. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26063,"byte_end":26196,"line_start":686,"line_end":686,"column_start":1,"column_end":134}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26547,"byte_end":26553,"line_start":692,"line_end":692,"column_start":9,"column_end":15},"name":"status","qualname":"::models::ContainerState::status","value":"std::option::Option<models::ContainerStateStatusEnum>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" String representation of the container state. Can be one of \\\"created\\\", \\\"running\\\", \\\"paused\\\", \\\"restarting\\\", \\\"removing\\\", \\\"exited\\\", or \\\"dead\\\". \n","sig":null,"attributes":[{"value":"/ String representation of the container state. Can be one of \\\"created\\\", \\\"running\\\", \\\"paused\\\", \\\"restarting\\\", \\\"removing\\\", \\\"exited\\\", or \\\"dead\\\". ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26297,"byte_end":26454,"line_start":689,"line_end":689,"column_start":5,"column_end":162}},{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26459,"byte_end":26486,"line_start":690,"line_end":690,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26491,"byte_end":26538,"line_start":691,"line_end":691,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27154,"byte_end":27161,"line_start":697,"line_end":697,"column_start":9,"column_end":16},"name":"running","qualname":"::models::ContainerState::running","value":"std::option::Option<bool>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Whether this container is running.  Note that a running container can be _paused_. The `Running` and `Paused` booleans are not mutually exclusive:  When pausing a container (on Linux), the freezer cgroup is used to suspend all processes in the container. Freezing the process requires the process to be running. As a result, paused containers are both `Running` _and_ `Paused`.  Use the `Status` field instead to determine if a container's state is \\\"running\\\". \n","sig":null,"attributes":[{"value":"/ Whether this container is running.  Note that a running container can be _paused_. The `Running` and `Paused` booleans are not mutually exclusive:  When pausing a container (on Linux), the freezer cgroup is used to suspend all processes in the container. Freezing the process requires the process to be running. As a result, paused containers are both `Running` _and_ `Paused`.  Use the `Status` field instead to determine if a container's state is \\\"running\\\". ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":26594,"byte_end":27060,"line_start":694,"line_end":694,"column_start":5,"column_end":471}},{"value":"serde(rename = \"Running\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27065,"byte_end":27093,"line_start":695,"line_end":695,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27098,"byte_end":27145,"line_start":696,"line_end":696,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27312,"byte_end":27318,"line_start":702,"line_end":702,"column_start":9,"column_end":15},"name":"paused","qualname":"::models::ContainerState::paused","value":"std::option::Option<bool>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Whether this container is paused.\n","sig":null,"attributes":[{"value":"/ Whether this container is paused.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27182,"byte_end":27219,"line_start":699,"line_end":699,"column_start":5,"column_end":42}},{"value":"serde(rename = \"Paused\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27224,"byte_end":27251,"line_start":700,"line_end":700,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27256,"byte_end":27303,"line_start":701,"line_end":701,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27477,"byte_end":27487,"line_start":707,"line_end":707,"column_start":9,"column_end":19},"name":"restarting","qualname":"::models::ContainerState::restarting","value":"std::option::Option<bool>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Whether this container is restarting.\n","sig":null,"attributes":[{"value":"/ Whether this container is restarting.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27339,"byte_end":27380,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"serde(rename = \"Restarting\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27385,"byte_end":27416,"line_start":705,"line_end":705,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27421,"byte_end":27468,"line_start":706,"line_end":706,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27677,"byte_end":27687,"line_start":712,"line_end":712,"column_start":9,"column_end":19},"name":"oom_killed","qualname":"::models::ContainerState::oom_killed","value":"std::option::Option<bool>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" Whether this container has been killed because it ran out of memory. \n","sig":null,"attributes":[{"value":"/ Whether this container has been killed because it ran out of memory. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27508,"byte_end":27581,"line_start":709,"line_end":709,"column_start":5,"column_end":78}},{"value":"serde(rename = \"OOMKilled\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27586,"byte_end":27616,"line_start":710,"line_end":710,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27621,"byte_end":27668,"line_start":711,"line_end":711,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27794,"byte_end":27798,"line_start":716,"line_end":716,"column_start":9,"column_end":13},"name":"dead","qualname":"::models::ContainerState::dead","value":"std::option::Option<bool>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Dead\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27708,"byte_end":27733,"line_start":714,"line_end":714,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27738,"byte_end":27785,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27945,"byte_end":27948,"line_start":721,"line_end":721,"column_start":9,"column_end":12},"name":"pid","qualname":"::models::ContainerState::pid","value":"std::option::Option<i64>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The process ID of this container\n","sig":null,"attributes":[{"value":"/ The process ID of this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27819,"byte_end":27855,"line_start":718,"line_end":718,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Pid\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27860,"byte_end":27884,"line_start":719,"line_end":719,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27889,"byte_end":27936,"line_start":720,"line_end":720,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28103,"byte_end":28112,"line_start":726,"line_end":726,"column_start":9,"column_end":18},"name":"exit_code","qualname":"::models::ContainerState::exit_code","value":"std::option::Option<i64>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The last exit code of this container\n","sig":null,"attributes":[{"value":"/ The last exit code of this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":27968,"byte_end":28008,"line_start":723,"line_end":723,"column_start":5,"column_end":45}},{"value":"serde(rename = \"ExitCode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28013,"byte_end":28042,"line_start":724,"line_end":724,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28047,"byte_end":28094,"line_start":725,"line_end":725,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28219,"byte_end":28224,"line_start":730,"line_end":730,"column_start":9,"column_end":14},"name":"error","qualname":"::models::ContainerState::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28132,"byte_end":28158,"line_start":728,"line_end":728,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28163,"byte_end":28210,"line_start":729,"line_end":729,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28393,"byte_end":28403,"line_start":735,"line_end":735,"column_start":9,"column_end":19},"name":"started_at","qualname":"::models::ContainerState::started_at","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The time when this container was last started.\n","sig":null,"attributes":[{"value":"/ The time when this container was last started.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28247,"byte_end":28297,"line_start":732,"line_end":732,"column_start":5,"column_end":55}},{"value":"serde(rename = \"StartedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28302,"byte_end":28332,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28337,"byte_end":28384,"line_start":734,"line_end":734,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1753},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28568,"byte_end":28579,"line_start":740,"line_end":740,"column_start":9,"column_end":20},"name":"finished_at","qualname":"::models::ContainerState::finished_at","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":" The time when this container last exited.\n","sig":null,"attributes":[{"value":"/ The time when this container last exited.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28426,"byte_end":28471,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"serde(rename = \"FinishedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28476,"byte_end":28507,"line_start":738,"line_end":738,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28512,"byte_end":28559,"line_start":739,"line_end":739,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28690,"byte_end":28696,"line_start":744,"line_end":744,"column_start":9,"column_end":15},"name":"health","qualname":"::models::ContainerState::health","value":"std::option::Option<models::Health>","parent":{"krate":0,"index":1742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Health\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28602,"byte_end":28629,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28634,"byte_end":28681,"line_start":743,"line_end":743,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28902,"byte_end":28907,"line_start":752,"line_end":752,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ContainerStateStatusEnum::EMPTY","value":"ContainerStateStatusEnum::EMPTY","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28876,"byte_end":28897,"line_start":751,"line_end":751,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1837},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28946,"byte_end":28953,"line_start":754,"line_end":754,"column_start":5,"column_end":12},"name":"CREATED","qualname":"::models::ContainerStateStatusEnum::CREATED","value":"ContainerStateStatusEnum::CREATED","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28913,"byte_end":28941,"line_start":753,"line_end":753,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1839},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28992,"byte_end":28999,"line_start":756,"line_end":756,"column_start":5,"column_end":12},"name":"RUNNING","qualname":"::models::ContainerStateStatusEnum::RUNNING","value":"ContainerStateStatusEnum::RUNNING","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"running\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28959,"byte_end":28987,"line_start":755,"line_end":755,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1841},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29037,"byte_end":29043,"line_start":758,"line_end":758,"column_start":5,"column_end":11},"name":"PAUSED","qualname":"::models::ContainerStateStatusEnum::PAUSED","value":"ContainerStateStatusEnum::PAUSED","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"paused\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29005,"byte_end":29032,"line_start":757,"line_end":757,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1843},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29085,"byte_end":29095,"line_start":760,"line_end":760,"column_start":5,"column_end":15},"name":"RESTARTING","qualname":"::models::ContainerStateStatusEnum::RESTARTING","value":"ContainerStateStatusEnum::RESTARTING","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"restarting\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29049,"byte_end":29080,"line_start":759,"line_end":759,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1845},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29135,"byte_end":29143,"line_start":762,"line_end":762,"column_start":5,"column_end":13},"name":"REMOVING","qualname":"::models::ContainerStateStatusEnum::REMOVING","value":"ContainerStateStatusEnum::REMOVING","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"removing\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29101,"byte_end":29130,"line_start":761,"line_end":761,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29181,"byte_end":29187,"line_start":764,"line_end":764,"column_start":5,"column_end":11},"name":"EXITED","qualname":"::models::ContainerStateStatusEnum::EXITED","value":"ContainerStateStatusEnum::EXITED","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"exited\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29149,"byte_end":29176,"line_start":763,"line_end":763,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1849},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29223,"byte_end":29227,"line_start":766,"line_end":766,"column_start":5,"column_end":9},"name":"DEAD","qualname":"::models::ContainerStateStatusEnum::DEAD","value":"ContainerStateStatusEnum::DEAD","parent":{"krate":0,"index":1834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"dead\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29193,"byte_end":29218,"line_start":765,"line_end":765,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1834},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28844,"byte_end":28868,"line_start":750,"line_end":750,"column_start":10,"column_end":34},"name":"ContainerStateStatusEnum","qualname":"::models::ContainerStateStatusEnum","value":"pub enum ContainerStateStatusEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"created\")]\n    CREATED,\n\n    #[serde(rename = \"running\")]\n    RUNNING,\n\n    #[serde(rename = \"paused\")]\n    PAUSED,\n\n    #[serde(rename = \"restarting\")]\n    RESTARTING,\n\n    #[serde(rename = \"removing\")]\n    REMOVING,\n\n    #[serde(rename = \"exited\")]\n    EXITED,\n\n    #[serde(rename = \"dead\")]\n    DEAD,\n}","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":28718,"byte_end":28748,"line_start":748,"line_end":748,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31348,"byte_end":31364,"line_start":818,"line_end":818,"column_start":10,"column_end":26},"name":"ContainerSummary","qualname":"::models::ContainerSummary","value":"ContainerSummaryInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1923},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31470,"byte_end":31491,"line_start":821,"line_end":821,"column_start":12,"column_end":33},"name":"ContainerSummaryInner","qualname":"::models::ContainerSummaryInner","value":"ContainerSummaryInner { id, names, image, image_id, command, created, ports, size_rw, size_root_fs, labels, state, status, host_config, network_settings, mounts }","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1924},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31615,"byte_end":31617,"line_start":825,"line_end":825,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ContainerSummaryInner::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The ID of this container\n","sig":null,"attributes":[{"value":"/ The ID of this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31498,"byte_end":31526,"line_start":822,"line_end":822,"column_start":5,"column_end":33}},{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31531,"byte_end":31554,"line_start":823,"line_end":823,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31559,"byte_end":31606,"line_start":824,"line_end":824,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1925},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31780,"byte_end":31785,"line_start":830,"line_end":830,"column_start":9,"column_end":14},"name":"names","qualname":"::models::ContainerSummaryInner::names","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The names that this container has been given\n","sig":null,"attributes":[{"value":"/ The names that this container has been given","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31640,"byte_end":31688,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"serde(rename = \"Names\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31693,"byte_end":31719,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31724,"byte_end":31771,"line_start":829,"line_end":829,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1926},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31964,"byte_end":31969,"line_start":835,"line_end":835,"column_start":9,"column_end":14},"name":"image","qualname":"::models::ContainerSummaryInner::image","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The name of the image used when creating this container\n","sig":null,"attributes":[{"value":"/ The name of the image used when creating this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31813,"byte_end":31872,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"serde(rename = \"Image\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31877,"byte_end":31903,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31908,"byte_end":31955,"line_start":834,"line_end":834,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1927},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32146,"byte_end":32154,"line_start":840,"line_end":840,"column_start":9,"column_end":17},"name":"image_id","qualname":"::models::ContainerSummaryInner::image_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The ID of the image that this container was created from\n","sig":null,"attributes":[{"value":"/ The ID of the image that this container was created from","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":31992,"byte_end":32052,"line_start":837,"line_end":837,"column_start":5,"column_end":65}},{"value":"serde(rename = \"ImageID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32057,"byte_end":32085,"line_start":838,"line_end":838,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32090,"byte_end":32137,"line_start":839,"line_end":839,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1928},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32317,"byte_end":32324,"line_start":845,"line_end":845,"column_start":9,"column_end":16},"name":"command","qualname":"::models::ContainerSummaryInner::command","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" Command to run when starting the container\n","sig":null,"attributes":[{"value":"/ Command to run when starting the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32177,"byte_end":32223,"line_start":842,"line_end":842,"column_start":5,"column_end":51}},{"value":"serde(rename = \"Command\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32228,"byte_end":32256,"line_start":843,"line_end":843,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32261,"byte_end":32308,"line_start":844,"line_end":844,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1929},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32475,"byte_end":32482,"line_start":850,"line_end":850,"column_start":9,"column_end":16},"name":"created","qualname":"::models::ContainerSummaryInner::created","value":"std::option::Option<i64>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" When the container was created\n","sig":null,"attributes":[{"value":"/ When the container was created","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32347,"byte_end":32381,"line_start":847,"line_end":847,"column_start":5,"column_end":39}},{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32386,"byte_end":32414,"line_start":848,"line_end":848,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32419,"byte_end":32466,"line_start":849,"line_end":849,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1930},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32633,"byte_end":32638,"line_start":855,"line_end":855,"column_start":9,"column_end":14},"name":"ports","qualname":"::models::ContainerSummaryInner::ports","value":"std::option::Option<std::vec::Vec<models::Port>>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The ports exposed by this container\n","sig":null,"attributes":[{"value":"/ The ports exposed by this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32502,"byte_end":32541,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Ports\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32546,"byte_end":32572,"line_start":853,"line_end":853,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32577,"byte_end":32624,"line_start":854,"line_end":854,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1931},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32830,"byte_end":32837,"line_start":860,"line_end":860,"column_start":9,"column_end":16},"name":"size_rw","qualname":"::models::ContainerSummaryInner::size_rw","value":"std::option::Option<i64>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The size of files that have been created or changed by this container\n","sig":null,"attributes":[{"value":"/ The size of files that have been created or changed by this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32664,"byte_end":32737,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"serde(rename = \"SizeRw\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32742,"byte_end":32769,"line_start":858,"line_end":858,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32774,"byte_end":32821,"line_start":859,"line_end":859,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33007,"byte_end":33019,"line_start":865,"line_end":865,"column_start":9,"column_end":21},"name":"size_root_fs","qualname":"::models::ContainerSummaryInner::size_root_fs","value":"std::option::Option<i64>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The total size of all the files in this container\n","sig":null,"attributes":[{"value":"/ The total size of all the files in this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32857,"byte_end":32910,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"serde(rename = \"SizeRootFs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32915,"byte_end":32946,"line_start":863,"line_end":863,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":32951,"byte_end":32998,"line_start":864,"line_end":864,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33168,"byte_end":33174,"line_start":870,"line_end":870,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::ContainerSummaryInner::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33039,"byte_end":33075,"line_start":867,"line_end":867,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33080,"byte_end":33107,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33112,"byte_end":33159,"line_start":869,"line_end":869,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33353,"byte_end":33358,"line_start":875,"line_end":875,"column_start":9,"column_end":14},"name":"state","qualname":"::models::ContainerSummaryInner::state","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" The state of this container (e.g. `Exited`)\n","sig":null,"attributes":[{"value":"/ The state of this container (e.g. `Exited`)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33214,"byte_end":33261,"line_start":872,"line_end":872,"column_start":5,"column_end":52}},{"value":"serde(rename = \"State\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33266,"byte_end":33292,"line_start":873,"line_end":873,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33297,"byte_end":33344,"line_start":874,"line_end":874,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33544,"byte_end":33550,"line_start":880,"line_end":880,"column_start":9,"column_end":15},"name":"status","qualname":"::models::ContainerSummaryInner::status","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":" Additional human-readable status of this container (e.g. `Exit 0`)\n","sig":null,"attributes":[{"value":"/ Additional human-readable status of this container (e.g. `Exit 0`)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33381,"byte_end":33451,"line_start":877,"line_end":877,"column_start":5,"column_end":75}},{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33456,"byte_end":33483,"line_start":878,"line_end":878,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33488,"byte_end":33535,"line_start":879,"line_end":879,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1936},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33665,"byte_end":33676,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"name":"host_config","qualname":"::models::ContainerSummaryInner::host_config","value":"std::option::Option<models::ContainerSummaryInnerHostConfig>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"HostConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33573,"byte_end":33604,"line_start":882,"line_end":882,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33609,"byte_end":33656,"line_start":883,"line_end":883,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33821,"byte_end":33837,"line_start":888,"line_end":888,"column_start":9,"column_end":25},"name":"network_settings","qualname":"::models::ContainerSummaryInner::network_settings","value":"std::option::Option<models::ContainerSummaryInnerNetworkSettings>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NetworkSettings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33724,"byte_end":33760,"line_start":886,"line_end":886,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33765,"byte_end":33812,"line_start":887,"line_end":887,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33978,"byte_end":33984,"line_start":892,"line_end":892,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::ContainerSummaryInner::mounts","value":"std::option::Option<std::vec::Vec<models::Mount>>","parent":{"krate":0,"index":1923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33890,"byte_end":33917,"line_start":890,"line_end":890,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":33922,"byte_end":33969,"line_start":891,"line_end":891,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2024},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34089,"byte_end":34120,"line_start":897,"line_end":897,"column_start":12,"column_end":43},"name":"ContainerSummaryInnerHostConfig","qualname":"::models::ContainerSummaryInnerHostConfig","value":"ContainerSummaryInnerHostConfig { network_mode }","parent":null,"children":[{"krate":0,"index":2025}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2025},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34220,"byte_end":34232,"line_start":900,"line_end":900,"column_start":9,"column_end":21},"name":"network_mode","qualname":"::models::ContainerSummaryInnerHostConfig::network_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NetworkMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34127,"byte_end":34159,"line_start":898,"line_end":898,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34164,"byte_end":34211,"line_start":899,"line_end":899,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34383,"byte_end":34419,"line_start":906,"line_end":906,"column_start":12,"column_end":48},"name":"ContainerSummaryInnerNetworkSettings","qualname":"::models::ContainerSummaryInnerNetworkSettings","value":"ContainerSummaryInnerNetworkSettings { networks }","parent":null,"children":[{"krate":0,"index":2084}],"decl_id":null,"docs":" A summary of the container's network settings\n","sig":null,"attributes":[{"value":"/ A summary of the container's network settings","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34254,"byte_end":34303,"line_start":904,"line_end":904,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34516,"byte_end":34524,"line_start":909,"line_end":909,"column_start":9,"column_end":17},"name":"networks","qualname":"::models::ContainerSummaryInnerNetworkSettings::networks","value":"std::option::Option<std::collections::HashMap<std::string::String, models::EndpointSettings>>","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Networks\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34426,"byte_end":34455,"line_start":907,"line_end":907,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34460,"byte_end":34507,"line_start":908,"line_end":908,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34694,"byte_end":34714,"line_start":915,"line_end":915,"column_start":12,"column_end":32},"name":"ContainerTopResponse","qualname":"::models::ContainerTopResponse","value":"ContainerTopResponse { titles, processes }","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":" OK response to ContainerTop operation\n","sig":null,"attributes":[{"value":"/ OK response to ContainerTop operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34573,"byte_end":34614,"line_start":913,"line_end":913,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34838,"byte_end":34844,"line_start":919,"line_end":919,"column_start":9,"column_end":15},"name":"titles","qualname":"::models::ContainerTopResponse::titles","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2142},"children":[],"decl_id":null,"docs":" The ps column titles\n","sig":null,"attributes":[{"value":"/ The ps column titles","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34721,"byte_end":34745,"line_start":916,"line_end":916,"column_start":5,"column_end":29}},{"value":"serde(rename = \"Titles\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34750,"byte_end":34777,"line_start":917,"line_end":917,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34782,"byte_end":34829,"line_start":918,"line_end":918,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2144},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35084,"byte_end":35093,"line_start":924,"line_end":924,"column_start":9,"column_end":18},"name":"processes","qualname":"::models::ContainerTopResponse::processes","value":"std::option::Option<std::vec::Vec<std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":2142},"children":[],"decl_id":null,"docs":" Each process running in the container, where each is process is an array of values corresponding to the titles. \n","sig":null,"attributes":[{"value":"/ Each process running in the container, where each is process is an array of values corresponding to the titles. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34872,"byte_end":34988,"line_start":921,"line_end":921,"column_start":5,"column_end":121}},{"value":"serde(rename = \"Processes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":34993,"byte_end":35023,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35028,"byte_end":35075,"line_start":923,"line_end":923,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2204},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35249,"byte_end":35272,"line_start":930,"line_end":930,"column_start":12,"column_end":35},"name":"ContainerUpdateResponse","qualname":"::models::ContainerUpdateResponse","value":"ContainerUpdateResponse { warnings }","parent":null,"children":[{"krate":0,"index":2205}],"decl_id":null,"docs":" OK response to ContainerUpdate operation\n","sig":null,"attributes":[{"value":"/ OK response to ContainerUpdate operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35125,"byte_end":35169,"line_start":928,"line_end":928,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2205},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35369,"byte_end":35377,"line_start":933,"line_end":933,"column_start":9,"column_end":17},"name":"warnings","qualname":"::models::ContainerUpdateResponse::warnings","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Warnings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35279,"byte_end":35308,"line_start":931,"line_end":931,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35313,"byte_end":35360,"line_start":932,"line_end":932,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35526,"byte_end":35547,"line_start":939,"line_end":939,"column_start":12,"column_end":33},"name":"ContainerWaitResponse","qualname":"::models::ContainerWaitResponse","value":"ContainerWaitResponse { status_code, error }","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265}],"decl_id":null,"docs":" OK response to ContainerWait operation\n","sig":null,"attributes":[{"value":"/ OK response to ContainerWait operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35404,"byte_end":35446,"line_start":937,"line_end":937,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2264},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35629,"byte_end":35640,"line_start":942,"line_end":942,"column_start":9,"column_end":20},"name":"status_code","qualname":"::models::ContainerWaitResponse::status_code","value":"i64","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":" Exit code of the container\n","sig":null,"attributes":[{"value":"/ Exit code of the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35554,"byte_end":35584,"line_start":940,"line_end":940,"column_start":5,"column_end":35}},{"value":"serde(rename = \"StatusCode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35589,"byte_end":35620,"line_start":941,"line_end":941,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2265},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35739,"byte_end":35744,"line_start":946,"line_end":946,"column_start":9,"column_end":14},"name":"error","qualname":"::models::ContainerWaitResponse::error","value":"std::option::Option<models::ContainerWaitResponseError>","parent":{"krate":0,"index":2263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35652,"byte_end":35678,"line_start":944,"line_end":944,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35683,"byte_end":35730,"line_start":945,"line_end":945,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2325},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35901,"byte_end":35927,"line_start":952,"line_end":952,"column_start":12,"column_end":38},"name":"ContainerWaitResponseError","qualname":"::models::ContainerWaitResponseError","value":"ContainerWaitResponseError { message }","parent":null,"children":[{"krate":0,"index":2326}],"decl_id":null,"docs":" container waiting error, if any\n","sig":null,"attributes":[{"value":"/ container waiting error, if any","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35786,"byte_end":35821,"line_start":950,"line_end":950,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2326},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36051,"byte_end":36058,"line_start":956,"line_end":956,"column_start":9,"column_end":16},"name":"message","qualname":"::models::ContainerWaitResponseError::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":" Details of an error\n","sig":null,"attributes":[{"value":"/ Details of an error","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35934,"byte_end":35957,"line_start":953,"line_end":953,"column_start":5,"column_end":28}},{"value":"serde(rename = \"Message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35962,"byte_end":35990,"line_start":954,"line_end":954,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":35995,"byte_end":36042,"line_start":955,"line_end":955,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2384},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36159,"byte_end":36174,"line_start":961,"line_end":961,"column_start":12,"column_end":27},"name":"CreateImageInfo","qualname":"::models::CreateImageInfo","value":"CreateImageInfo { id, error, status, progress, progress_detail }","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2385},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36265,"byte_end":36267,"line_start":964,"line_end":964,"column_start":9,"column_end":11},"name":"id","qualname":"::models::CreateImageInfo::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36181,"byte_end":36204,"line_start":962,"line_end":962,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36209,"byte_end":36256,"line_start":963,"line_end":963,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2386},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36377,"byte_end":36382,"line_start":968,"line_end":968,"column_start":9,"column_end":14},"name":"error","qualname":"::models::CreateImageInfo::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36290,"byte_end":36316,"line_start":966,"line_end":966,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36321,"byte_end":36368,"line_start":967,"line_end":967,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2387},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36493,"byte_end":36499,"line_start":972,"line_end":972,"column_start":9,"column_end":15},"name":"status","qualname":"::models::CreateImageInfo::status","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36405,"byte_end":36432,"line_start":970,"line_end":970,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36437,"byte_end":36484,"line_start":971,"line_end":971,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2388},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36612,"byte_end":36620,"line_start":976,"line_end":976,"column_start":9,"column_end":17},"name":"progress","qualname":"::models::CreateImageInfo::progress","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36522,"byte_end":36551,"line_start":974,"line_end":974,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36556,"byte_end":36603,"line_start":975,"line_end":975,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2389},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36739,"byte_end":36754,"line_start":980,"line_end":980,"column_start":9,"column_end":24},"name":"progress_detail","qualname":"::models::CreateImageInfo::progress_detail","value":"std::option::Option<models::ProgressDetail>","parent":{"krate":0,"index":2384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progressDetail\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36643,"byte_end":36678,"line_start":978,"line_end":978,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36683,"byte_end":36730,"line_start":979,"line_end":979,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36915,"byte_end":36928,"line_start":986,"line_end":986,"column_start":12,"column_end":25},"name":"DeviceMapping","qualname":"::models::DeviceMapping","value":"DeviceMapping { path_on_host, path_in_container, cgroup_permissions }","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458}],"decl_id":null,"docs":" A device mapping between the host and container\n","sig":null,"attributes":[{"value":"/ A device mapping between the host and container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36784,"byte_end":36835,"line_start":984,"line_end":984,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2456},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37027,"byte_end":37039,"line_start":989,"line_end":989,"column_start":9,"column_end":21},"name":"path_on_host","qualname":"::models::DeviceMapping::path_on_host","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PathOnHost\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36935,"byte_end":36966,"line_start":987,"line_end":987,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":36971,"byte_end":37018,"line_start":988,"line_end":988,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2457},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37159,"byte_end":37176,"line_start":993,"line_end":993,"column_start":9,"column_end":26},"name":"path_in_container","qualname":"::models::DeviceMapping::path_in_container","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PathInContainer\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37062,"byte_end":37098,"line_start":991,"line_end":991,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37103,"byte_end":37150,"line_start":992,"line_end":992,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2458},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37298,"byte_end":37316,"line_start":997,"line_end":997,"column_start":9,"column_end":27},"name":"cgroup_permissions","qualname":"::models::DeviceMapping::cgroup_permissions","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CgroupPermissions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37199,"byte_end":37237,"line_start":995,"line_end":995,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37242,"byte_end":37289,"line_start":996,"line_end":996,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2520},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37472,"byte_end":37485,"line_start":1003,"line_end":1003,"column_start":12,"column_end":25},"name":"DeviceRequest","qualname":"::models::DeviceRequest","value":"DeviceRequest { driver, count, device_i_ds, capabilities, options }","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525}],"decl_id":null,"docs":" A request for devices to be sent to device drivers\n","sig":null,"attributes":[{"value":"/ A request for devices to be sent to device drivers","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37338,"byte_end":37392,"line_start":1001,"line_end":1001,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37580,"byte_end":37586,"line_start":1006,"line_end":1006,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::DeviceRequest::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37492,"byte_end":37519,"line_start":1004,"line_end":1004,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37524,"byte_end":37571,"line_start":1005,"line_end":1005,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2522},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37696,"byte_end":37701,"line_start":1010,"line_end":1010,"column_start":9,"column_end":14},"name":"count","qualname":"::models::DeviceRequest::count","value":"std::option::Option<i64>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Count\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37609,"byte_end":37635,"line_start":1008,"line_end":1008,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37640,"byte_end":37687,"line_start":1009,"line_end":1009,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37812,"byte_end":37823,"line_start":1014,"line_end":1014,"column_start":9,"column_end":20},"name":"device_i_ds","qualname":"::models::DeviceRequest::device_i_ds","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DeviceIDs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37721,"byte_end":37751,"line_start":1012,"line_end":1012,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37756,"byte_end":37803,"line_start":1013,"line_end":1013,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2524},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38019,"byte_end":38031,"line_start":1019,"line_end":1019,"column_start":9,"column_end":21},"name":"capabilities","qualname":"::models::DeviceRequest::capabilities","value":"std::option::Option<std::vec::Vec<std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" A list of capabilities; an OR list of AND lists of capabilities. \n","sig":null,"attributes":[{"value":"/ A list of capabilities; an OR list of AND lists of capabilities. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37851,"byte_end":37920,"line_start":1016,"line_end":1016,"column_start":5,"column_end":74}},{"value":"serde(rename = \"Capabilities\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37925,"byte_end":37958,"line_start":1017,"line_end":1017,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":37963,"byte_end":38010,"line_start":1018,"line_end":1018,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2525},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38268,"byte_end":38275,"line_start":1024,"line_end":1024,"column_start":9,"column_end":16},"name":"options","qualname":"::models::DeviceRequest::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":2520},"children":[],"decl_id":null,"docs":" Driver-specific options, specified as a key/value pairs. These options are passed directly to the driver. \n","sig":null,"attributes":[{"value":"/ Driver-specific options, specified as a key/value pairs. These options are passed directly to the driver. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38064,"byte_end":38174,"line_start":1021,"line_end":1021,"column_start":5,"column_end":115}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38179,"byte_end":38207,"line_start":1022,"line_end":1022,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38212,"byte_end":38259,"line_start":1023,"line_end":1023,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2591},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38393,"byte_end":38420,"line_start":1029,"line_end":1029,"column_start":12,"column_end":39},"name":"DistributionInspectResponse","qualname":"::models::DistributionInspectResponse","value":"DistributionInspectResponse { descriptor, platforms }","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2592},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38467,"byte_end":38477,"line_start":1031,"line_end":1031,"column_start":9,"column_end":19},"name":"descriptor","qualname":"::models::DistributionInspectResponse::descriptor","value":"models::DistributionInspectResponseDescriptor","parent":{"krate":0,"index":2591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Descriptor\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38427,"byte_end":38458,"line_start":1030,"line_end":1030,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2593},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38692,"byte_end":38701,"line_start":1036,"line_end":1036,"column_start":9,"column_end":18},"name":"platforms","qualname":"::models::DistributionInspectResponse::platforms","value":"std::vec::Vec<models::DistributionInspectResponsePlatforms>","parent":{"krate":0,"index":2591},"children":[],"decl_id":null,"docs":" An array containing all platforms supported by the image. \n","sig":null,"attributes":[{"value":"/ An array containing all platforms supported by the image. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38523,"byte_end":38585,"line_start":1033,"line_end":1033,"column_start":5,"column_end":67}},{"value":"serde(rename = \"Platforms\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38590,"byte_end":38620,"line_start":1034,"line_end":1034,"column_start":5,"column_end":35}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38625,"byte_end":38683,"line_start":1035,"line_end":1035,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38895,"byte_end":38932,"line_start":1042,"line_end":1042,"column_start":12,"column_end":49},"name":"DistributionInspectResponseDescriptor","qualname":"::models::DistributionInspectResponseDescriptor","value":"DistributionInspectResponseDescriptor { media_type, size, digest, ur_ls }","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"decl_id":null,"docs":" A descriptor struct containing digest, media type, and size. \n","sig":null,"attributes":[{"value":"/ A descriptor struct containing digest, media type, and size. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38750,"byte_end":38815,"line_start":1040,"line_end":1040,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2673},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39030,"byte_end":39040,"line_start":1045,"line_end":1045,"column_start":9,"column_end":19},"name":"media_type","qualname":"::models::DistributionInspectResponseDescriptor::media_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"MediaType\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38939,"byte_end":38969,"line_start":1043,"line_end":1043,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":38974,"byte_end":39021,"line_start":1044,"line_end":1044,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2674},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39149,"byte_end":39153,"line_start":1049,"line_end":1049,"column_start":9,"column_end":13},"name":"size","qualname":"::models::DistributionInspectResponseDescriptor::size","value":"std::option::Option<i64>","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39063,"byte_end":39088,"line_start":1047,"line_end":1047,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39093,"byte_end":39140,"line_start":1048,"line_end":1048,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2675},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39261,"byte_end":39267,"line_start":1053,"line_end":1053,"column_start":9,"column_end":15},"name":"digest","qualname":"::models::DistributionInspectResponseDescriptor::digest","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Digest\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39173,"byte_end":39200,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39205,"byte_end":39252,"line_start":1052,"line_end":1052,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2676},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39376,"byte_end":39381,"line_start":1057,"line_end":1057,"column_start":9,"column_end":14},"name":"ur_ls","qualname":"::models::DistributionInspectResponseDescriptor::ur_ls","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"URLs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39290,"byte_end":39315,"line_start":1055,"line_end":1055,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39320,"byte_end":39367,"line_start":1056,"line_end":1056,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39487,"byte_end":39523,"line_start":1062,"line_end":1062,"column_start":12,"column_end":48},"name":"DistributionInspectResponsePlatforms","qualname":"::models::DistributionInspectResponsePlatforms","value":"DistributionInspectResponsePlatforms { architecture, os, os_version, os_features, variant, features }","parent":null,"children":[{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2741},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39624,"byte_end":39636,"line_start":1065,"line_end":1065,"column_start":9,"column_end":21},"name":"architecture","qualname":"::models::DistributionInspectResponsePlatforms::architecture","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Architecture\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39530,"byte_end":39563,"line_start":1063,"line_end":1063,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39568,"byte_end":39615,"line_start":1064,"line_end":1064,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2742},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39743,"byte_end":39745,"line_start":1069,"line_end":1069,"column_start":9,"column_end":11},"name":"os","qualname":"::models::DistributionInspectResponsePlatforms::os","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OS\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39659,"byte_end":39682,"line_start":1067,"line_end":1067,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39687,"byte_end":39734,"line_start":1068,"line_end":1068,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2743},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39859,"byte_end":39869,"line_start":1073,"line_end":1073,"column_start":9,"column_end":19},"name":"os_version","qualname":"::models::DistributionInspectResponsePlatforms::os_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OSVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39768,"byte_end":39798,"line_start":1071,"line_end":1071,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39803,"byte_end":39850,"line_start":1072,"line_end":1072,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39984,"byte_end":39995,"line_start":1077,"line_end":1077,"column_start":9,"column_end":20},"name":"os_features","qualname":"::models::DistributionInspectResponsePlatforms::os_features","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OSFeatures\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39892,"byte_end":39923,"line_start":1075,"line_end":1075,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":39928,"byte_end":39975,"line_start":1076,"line_end":1076,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2745},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40112,"byte_end":40119,"line_start":1081,"line_end":1081,"column_start":9,"column_end":16},"name":"variant","qualname":"::models::DistributionInspectResponsePlatforms::variant","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Variant\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40023,"byte_end":40051,"line_start":1079,"line_end":1079,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40056,"byte_end":40103,"line_start":1080,"line_end":1080,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2746},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40232,"byte_end":40240,"line_start":1085,"line_end":1085,"column_start":9,"column_end":17},"name":"features","qualname":"::models::DistributionInspectResponsePlatforms::features","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Features\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40142,"byte_end":40171,"line_start":1083,"line_end":1083,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40176,"byte_end":40223,"line_start":1084,"line_end":1084,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2814},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40406,"byte_end":40412,"line_start":1091,"line_end":1091,"column_start":12,"column_end":18},"name":"Driver","qualname":"::models::Driver","value":"Driver { name, options }","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816}],"decl_id":null,"docs":" Driver represents a driver (network, logging, secrets).\n","sig":null,"attributes":[{"value":"/ Driver represents a driver (network, logging, secrets).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40267,"byte_end":40326,"line_start":1089,"line_end":1089,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2815},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40481,"byte_end":40485,"line_start":1094,"line_end":1094,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Driver::name","value":"std::string::String","parent":{"krate":0,"index":2814},"children":[],"decl_id":null,"docs":" Name of the driver.\n","sig":null,"attributes":[{"value":"/ Name of the driver.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40419,"byte_end":40442,"line_start":1092,"line_end":1092,"column_start":5,"column_end":28}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40447,"byte_end":40472,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2816},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40639,"byte_end":40646,"line_start":1099,"line_end":1099,"column_start":9,"column_end":16},"name":"options","qualname":"::models::Driver::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":2814},"children":[],"decl_id":null,"docs":" Key/value map of driver-specific options.\n","sig":null,"attributes":[{"value":"/ Key/value map of driver-specific options.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40500,"byte_end":40545,"line_start":1096,"line_end":1096,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40550,"byte_end":40578,"line_start":1097,"line_end":1097,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40583,"byte_end":40630,"line_start":1098,"line_end":1098,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40833,"byte_end":40851,"line_start":1105,"line_end":1105,"column_start":12,"column_end":30},"name":"EndpointIpamConfig","qualname":"::models::EndpointIpamConfig","value":"EndpointIpamConfig { ipv4_address, ipv6_address, link_local_i_ps }","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879}],"decl_id":null,"docs":" EndpointIPAMConfig represents an endpoint's IPAM configuration. \n","sig":null,"attributes":[{"value":"/ EndpointIPAMConfig represents an endpoint's IPAM configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40685,"byte_end":40753,"line_start":1103,"line_end":1103,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40951,"byte_end":40963,"line_start":1108,"line_end":1108,"column_start":9,"column_end":21},"name":"ipv4_address","qualname":"::models::EndpointIpamConfig::ipv4_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPv4Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40858,"byte_end":40890,"line_start":1106,"line_end":1106,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40895,"byte_end":40942,"line_start":1107,"line_end":1107,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2878},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41079,"byte_end":41091,"line_start":1112,"line_end":1112,"column_start":9,"column_end":21},"name":"ipv6_address","qualname":"::models::EndpointIpamConfig::ipv6_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPv6Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":40986,"byte_end":41018,"line_start":1110,"line_end":1110,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41023,"byte_end":41070,"line_start":1111,"line_end":1111,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2879},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41208,"byte_end":41223,"line_start":1116,"line_end":1116,"column_start":9,"column_end":24},"name":"link_local_i_ps","qualname":"::models::EndpointIpamConfig::link_local_i_ps","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LinkLocalIPs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41114,"byte_end":41147,"line_start":1114,"line_end":1114,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41152,"byte_end":41199,"line_start":1115,"line_end":1115,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41329,"byte_end":41347,"line_start":1121,"line_end":1121,"column_start":12,"column_end":30},"name":"EndpointPortConfig","qualname":"::models::EndpointPortConfig","value":"EndpointPortConfig { name, protocol, target_port, published_port, publish_mode }","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2942},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41440,"byte_end":41444,"line_start":1124,"line_end":1124,"column_start":9,"column_end":13},"name":"name","qualname":"::models::EndpointPortConfig::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41354,"byte_end":41379,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41384,"byte_end":41431,"line_start":1123,"line_end":1123,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2943},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41557,"byte_end":41565,"line_start":1128,"line_end":1128,"column_start":9,"column_end":17},"name":"protocol","qualname":"::models::EndpointPortConfig::protocol","value":"std::option::Option<models::EndpointPortConfigProtocolEnum>","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Protocol\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41467,"byte_end":41496,"line_start":1126,"line_end":1126,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41501,"byte_end":41548,"line_start":1127,"line_end":1127,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2944},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41743,"byte_end":41754,"line_start":1133,"line_end":1133,"column_start":9,"column_end":20},"name":"target_port","qualname":"::models::EndpointPortConfig::target_port","value":"std::option::Option<i64>","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" The port inside the container.\n","sig":null,"attributes":[{"value":"/ The port inside the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41612,"byte_end":41646,"line_start":1130,"line_end":1130,"column_start":5,"column_end":39}},{"value":"serde(rename = \"TargetPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41651,"byte_end":41682,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41687,"byte_end":41734,"line_start":1132,"line_end":1132,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2945},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41906,"byte_end":41920,"line_start":1138,"line_end":1138,"column_start":9,"column_end":23},"name":"published_port","qualname":"::models::EndpointPortConfig::published_port","value":"std::option::Option<i64>","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" The port on the swarm hosts.\n","sig":null,"attributes":[{"value":"/ The port on the swarm hosts.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41774,"byte_end":41806,"line_start":1135,"line_end":1135,"column_start":5,"column_end":37}},{"value":"serde(rename = \"PublishedPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41811,"byte_end":41845,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41850,"byte_end":41897,"line_start":1137,"line_end":1137,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2946},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42362,"byte_end":42374,"line_start":1143,"line_end":1143,"column_start":9,"column_end":21},"name":"publish_mode","qualname":"::models::EndpointPortConfig::publish_mode","value":"std::option::Option<models::EndpointPortConfigPublishModeEnum>","parent":{"krate":0,"index":2941},"children":[],"decl_id":null,"docs":" The mode in which port is published.  <p><br /></p>  - \\\"ingress\\\" makes the target port accessible on every node,   regardless of whether there is a task for the service running on   that node or not. - \\\"host\\\" bypasses the routing mesh and publish the port directly on   the swarm node where that service is running. \n","sig":null,"attributes":[{"value":"/ The mode in which port is published.  <p><br /></p>  - \\\"ingress\\\" makes the target port accessible on every node,   regardless of whether there is a task for the service running on   that node or not. - \\\"host\\\" bypasses the routing mesh and publish the port directly on   the swarm node where that service is running. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":41940,"byte_end":42264,"line_start":1140,"line_end":1140,"column_start":5,"column_end":329}},{"value":"serde(rename = \"PublishMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42269,"byte_end":42301,"line_start":1141,"line_end":1141,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42306,"byte_end":42353,"line_start":1142,"line_end":1142,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3013},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42613,"byte_end":42618,"line_start":1151,"line_end":1151,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::EndpointPortConfigProtocolEnum::EMPTY","value":"EndpointPortConfigProtocolEnum::EMPTY","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42587,"byte_end":42608,"line_start":1150,"line_end":1150,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42653,"byte_end":42656,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8},"name":"TCP","qualname":"::models::EndpointPortConfigProtocolEnum::TCP","value":"EndpointPortConfigProtocolEnum::TCP","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"tcp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42624,"byte_end":42648,"line_start":1152,"line_end":1152,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42691,"byte_end":42694,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8},"name":"UDP","qualname":"::models::EndpointPortConfigProtocolEnum::UDP","value":"EndpointPortConfigProtocolEnum::UDP","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"udp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42662,"byte_end":42686,"line_start":1154,"line_end":1154,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42730,"byte_end":42734,"line_start":1157,"line_end":1157,"column_start":5,"column_end":9},"name":"SCTP","qualname":"::models::EndpointPortConfigProtocolEnum::SCTP","value":"EndpointPortConfigProtocolEnum::SCTP","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"sctp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42700,"byte_end":42725,"line_start":1156,"line_end":1156,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3012},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42549,"byte_end":42579,"line_start":1149,"line_end":1149,"column_start":10,"column_end":40},"name":"EndpointPortConfigProtocolEnum","qualname":"::models::EndpointPortConfigProtocolEnum","value":"pub enum EndpointPortConfigProtocolEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"tcp\")]\n    TCP,\n\n    #[serde(rename = \"udp\")]\n    UDP,\n\n    #[serde(rename = \"sctp\")]\n    SCTP,\n}","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3019}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42423,"byte_end":42453,"line_start":1147,"line_end":1147,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3086},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44264,"byte_end":44269,"line_start":1200,"line_end":1200,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::EndpointPortConfigPublishModeEnum::EMPTY","value":"EndpointPortConfigPublishModeEnum::EMPTY","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44238,"byte_end":44259,"line_start":1199,"line_end":1199,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3088},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44308,"byte_end":44315,"line_start":1202,"line_end":1202,"column_start":5,"column_end":12},"name":"INGRESS","qualname":"::models::EndpointPortConfigPublishModeEnum::INGRESS","value":"EndpointPortConfigPublishModeEnum::INGRESS","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ingress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44275,"byte_end":44303,"line_start":1201,"line_end":1201,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3090},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44351,"byte_end":44355,"line_start":1204,"line_end":1204,"column_start":5,"column_end":9},"name":"HOST","qualname":"::models::EndpointPortConfigPublishModeEnum::HOST","value":"EndpointPortConfigPublishModeEnum::HOST","parent":{"krate":0,"index":3085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"host\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44321,"byte_end":44346,"line_start":1203,"line_end":1203,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3085},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44197,"byte_end":44230,"line_start":1198,"line_end":1198,"column_start":10,"column_end":43},"name":"EndpointPortConfigPublishModeEnum","qualname":"::models::EndpointPortConfigPublishModeEnum","value":"pub enum EndpointPortConfigPublishModeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"ingress\")]\n    INGRESS,\n\n    #[serde(rename = \"host\")]\n    HOST,\n}","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44071,"byte_end":44101,"line_start":1196,"line_end":1196,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3154},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45678,"byte_end":45694,"line_start":1242,"line_end":1242,"column_start":12,"column_end":28},"name":"EndpointSettings","qualname":"::models::EndpointSettings","value":"EndpointSettings { ipam_config, links, aliases, network_id, endpoint_id, gateway, ip_address, ip_prefix_len, ipv6_gateway, global_ipv6_address, global_ipv6_prefix_len, mac_address, driver_opts }","parent":null,"children":[{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167}],"decl_id":null,"docs":" Configuration for a network endpoint.\n","sig":null,"attributes":[{"value":"/ Configuration for a network endpoint.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45557,"byte_end":45598,"line_start":1240,"line_end":1240,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3155},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45793,"byte_end":45804,"line_start":1245,"line_end":1245,"column_start":9,"column_end":20},"name":"ipam_config","qualname":"::models::EndpointSettings::ipam_config","value":"std::option::Option<models::EndpointIpamConfig>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPAMConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45701,"byte_end":45732,"line_start":1243,"line_end":1243,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45737,"byte_end":45784,"line_start":1244,"line_end":1244,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3156},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45926,"byte_end":45931,"line_start":1249,"line_end":1249,"column_start":9,"column_end":14},"name":"links","qualname":"::models::EndpointSettings::links","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Links\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45839,"byte_end":45865,"line_start":1247,"line_end":1247,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45870,"byte_end":45917,"line_start":1248,"line_end":1248,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3157},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46048,"byte_end":46055,"line_start":1253,"line_end":1253,"column_start":9,"column_end":16},"name":"aliases","qualname":"::models::EndpointSettings::aliases","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Aliases\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45959,"byte_end":45987,"line_start":1251,"line_end":1251,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45992,"byte_end":46039,"line_start":1252,"line_end":1252,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3158},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46209,"byte_end":46219,"line_start":1258,"line_end":1258,"column_start":9,"column_end":19},"name":"network_id","qualname":"::models::EndpointSettings::network_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Unique ID of the network. \n","sig":null,"attributes":[{"value":"/ Unique ID of the network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46083,"byte_end":46113,"line_start":1255,"line_end":1255,"column_start":5,"column_end":35}},{"value":"serde(rename = \"NetworkID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46118,"byte_end":46148,"line_start":1256,"line_end":1256,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46153,"byte_end":46200,"line_start":1257,"line_end":1257,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3159},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46392,"byte_end":46403,"line_start":1263,"line_end":1263,"column_start":9,"column_end":20},"name":"endpoint_id","qualname":"::models::EndpointSettings::endpoint_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Unique ID for the service endpoint in a Sandbox. \n","sig":null,"attributes":[{"value":"/ Unique ID for the service endpoint in a Sandbox. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46242,"byte_end":46295,"line_start":1260,"line_end":1260,"column_start":5,"column_end":58}},{"value":"serde(rename = \"EndpointID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46300,"byte_end":46331,"line_start":1261,"line_end":1261,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46336,"byte_end":46383,"line_start":1262,"line_end":1262,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3160},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46558,"byte_end":46565,"line_start":1268,"line_end":1268,"column_start":9,"column_end":16},"name":"gateway","qualname":"::models::EndpointSettings::gateway","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Gateway address for this network. \n","sig":null,"attributes":[{"value":"/ Gateway address for this network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46426,"byte_end":46464,"line_start":1265,"line_end":1265,"column_start":5,"column_end":43}},{"value":"serde(rename = \"Gateway\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46469,"byte_end":46497,"line_start":1266,"line_end":1266,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46502,"byte_end":46549,"line_start":1267,"line_end":1267,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3161},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46702,"byte_end":46712,"line_start":1273,"line_end":1273,"column_start":9,"column_end":19},"name":"ip_address","qualname":"::models::EndpointSettings::ip_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" IPv4 address. \n","sig":null,"attributes":[{"value":"/ IPv4 address. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46588,"byte_end":46606,"line_start":1270,"line_end":1270,"column_start":5,"column_end":23}},{"value":"serde(rename = \"IPAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46611,"byte_end":46641,"line_start":1271,"line_end":1271,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46646,"byte_end":46693,"line_start":1272,"line_end":1272,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3162},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46870,"byte_end":46883,"line_start":1278,"line_end":1278,"column_start":9,"column_end":22},"name":"ip_prefix_len","qualname":"::models::EndpointSettings::ip_prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Mask length of the IPv4 address. \n","sig":null,"attributes":[{"value":"/ Mask length of the IPv4 address. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46735,"byte_end":46772,"line_start":1275,"line_end":1275,"column_start":5,"column_end":42}},{"value":"serde(rename = \"IPPrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46777,"byte_end":46809,"line_start":1276,"line_end":1276,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46814,"byte_end":46861,"line_start":1277,"line_end":1277,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3163},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47027,"byte_end":47039,"line_start":1283,"line_end":1283,"column_start":9,"column_end":21},"name":"ipv6_gateway","qualname":"::models::EndpointSettings::ipv6_gateway","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" IPv6 gateway address. \n","sig":null,"attributes":[{"value":"/ IPv6 gateway address. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46903,"byte_end":46929,"line_start":1280,"line_end":1280,"column_start":5,"column_end":31}},{"value":"serde(rename = \"IPv6Gateway\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46934,"byte_end":46966,"line_start":1281,"line_end":1281,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":46971,"byte_end":47018,"line_start":1282,"line_end":1282,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3164},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47191,"byte_end":47210,"line_start":1288,"line_end":1288,"column_start":9,"column_end":28},"name":"global_ipv6_address","qualname":"::models::EndpointSettings::global_ipv6_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Global IPv6 address. \n","sig":null,"attributes":[{"value":"/ Global IPv6 address. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47062,"byte_end":47087,"line_start":1285,"line_end":1285,"column_start":5,"column_end":30}},{"value":"serde(rename = \"GlobalIPv6Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47092,"byte_end":47130,"line_start":1286,"line_end":1286,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47135,"byte_end":47182,"line_start":1287,"line_end":1287,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3165},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47383,"byte_end":47405,"line_start":1293,"line_end":1293,"column_start":9,"column_end":31},"name":"global_ipv6_prefix_len","qualname":"::models::EndpointSettings::global_ipv6_prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" Mask length of the global IPv6 address. \n","sig":null,"attributes":[{"value":"/ Mask length of the global IPv6 address. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47233,"byte_end":47277,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}},{"value":"serde(rename = \"GlobalIPv6PrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47282,"byte_end":47322,"line_start":1291,"line_end":1291,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47327,"byte_end":47374,"line_start":1292,"line_end":1292,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3166},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47572,"byte_end":47583,"line_start":1298,"line_end":1298,"column_start":9,"column_end":20},"name":"mac_address","qualname":"::models::EndpointSettings::mac_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" MAC address for the endpoint on this network. \n","sig":null,"attributes":[{"value":"/ MAC address for the endpoint on this network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47425,"byte_end":47475,"line_start":1295,"line_end":1295,"column_start":5,"column_end":55}},{"value":"serde(rename = \"MacAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47480,"byte_end":47511,"line_start":1296,"line_end":1296,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47516,"byte_end":47563,"line_start":1297,"line_end":1297,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3167},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47834,"byte_end":47845,"line_start":1303,"line_end":1303,"column_start":9,"column_end":20},"name":"driver_opts","qualname":"::models::EndpointSettings::driver_opts","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":" DriverOpts is a mapping of driver options and values. These options are passed directly to the driver and are driver specific. \n","sig":null,"attributes":[{"value":"/ DriverOpts is a mapping of driver options and values. These options are passed directly to the driver and are driver specific. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47606,"byte_end":47737,"line_start":1300,"line_end":1300,"column_start":5,"column_end":136}},{"value":"serde(rename = \"DriverOpts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47742,"byte_end":47773,"line_start":1301,"line_end":1301,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47778,"byte_end":47825,"line_start":1302,"line_end":1302,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3249},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48039,"byte_end":48051,"line_start":1309,"line_end":1309,"column_start":12,"column_end":24},"name":"EndpointSpec","qualname":"::models::EndpointSpec","value":"EndpointSpec { mode, ports }","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251}],"decl_id":null,"docs":" Properties that can be configured to access and load balance a service.\n","sig":null,"attributes":[{"value":"/ Properties that can be configured to access and load balance a service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":47884,"byte_end":47959,"line_start":1307,"line_end":1307,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3250},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48226,"byte_end":48230,"line_start":1313,"line_end":1313,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::EndpointSpec::mode","value":"std::option::Option<models::EndpointSpecModeEnum>","parent":{"krate":0,"index":3249},"children":[],"decl_id":null,"docs":" The mode of resolution to use for internal load balancing between tasks. \n","sig":null,"attributes":[{"value":"/ The mode of resolution to use for internal load balancing between tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48058,"byte_end":48135,"line_start":1310,"line_end":1310,"column_start":5,"column_end":82}},{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48140,"byte_end":48165,"line_start":1311,"line_end":1311,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48170,"byte_end":48217,"line_start":1312,"line_end":1312,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3251},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48499,"byte_end":48504,"line_start":1318,"line_end":1318,"column_start":9,"column_end":14},"name":"ports","qualname":"::models::EndpointSpec::ports","value":"std::option::Option<std::vec::Vec<models::EndpointPortConfig>>","parent":{"krate":0,"index":3249},"children":[],"decl_id":null,"docs":" List of exposed ports that this service is accessible on from the outside. Ports can only be provided if `vip` resolution mode is used. \n","sig":null,"attributes":[{"value":"/ List of exposed ports that this service is accessible on from the outside. Ports can only be provided if `vip` resolution mode is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48267,"byte_end":48407,"line_start":1315,"line_end":1315,"column_start":5,"column_end":145}},{"value":"serde(rename = \"Ports\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48412,"byte_end":48438,"line_start":1316,"line_end":1316,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48443,"byte_end":48490,"line_start":1317,"line_end":1317,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3312},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48723,"byte_end":48728,"line_start":1326,"line_end":1326,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::EndpointSpecModeEnum::EMPTY","value":"EndpointSpecModeEnum::EMPTY","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48697,"byte_end":48718,"line_start":1325,"line_end":1325,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3314},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48763,"byte_end":48766,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8},"name":"VIP","qualname":"::models::EndpointSpecModeEnum::VIP","value":"EndpointSpecModeEnum::VIP","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"vip\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48734,"byte_end":48758,"line_start":1327,"line_end":1327,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3316},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48803,"byte_end":48808,"line_start":1330,"line_end":1330,"column_start":5,"column_end":10},"name":"DNSRR","qualname":"::models::EndpointSpecModeEnum::DNSRR","value":"EndpointSpecModeEnum::DNSRR","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"dnsrr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48772,"byte_end":48798,"line_start":1329,"line_end":1329,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3311},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48669,"byte_end":48689,"line_start":1324,"line_end":1324,"column_start":10,"column_end":30},"name":"EndpointSpecModeEnum","qualname":"::models::EndpointSpecModeEnum","value":"pub enum EndpointSpecModeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"vip\")]\n    VIP,\n\n    #[serde(rename = \"dnsrr\")]\n    DNSRR,\n}","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3316}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48543,"byte_end":48573,"line_start":1322,"line_end":1322,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49975,"byte_end":49992,"line_start":1368,"line_end":1368,"column_start":12,"column_end":29},"name":"EngineDescription","qualname":"::models::EngineDescription","value":"EngineDescription { engine_version, labels, plugins }","parent":null,"children":[{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":" EngineDescription provides information about an engine.\n","sig":null,"attributes":[{"value":"/ EngineDescription provides information about an engine.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49836,"byte_end":49895,"line_start":1366,"line_end":1366,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50094,"byte_end":50108,"line_start":1371,"line_end":1371,"column_start":9,"column_end":23},"name":"engine_version","qualname":"::models::EngineDescription::engine_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EngineVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49999,"byte_end":50033,"line_start":1369,"line_end":1369,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50038,"byte_end":50085,"line_start":1370,"line_end":1370,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3382},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50219,"byte_end":50225,"line_start":1375,"line_end":1375,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::EngineDescription::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50131,"byte_end":50158,"line_start":1373,"line_end":1373,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50163,"byte_end":50210,"line_start":1374,"line_end":1374,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3383},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50354,"byte_end":50361,"line_start":1379,"line_end":1379,"column_start":9,"column_end":16},"name":"plugins","qualname":"::models::EngineDescription::plugins","value":"std::option::Option<std::vec::Vec<models::EngineDescriptionPlugins>>","parent":{"krate":0,"index":3380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Plugins\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50265,"byte_end":50293,"line_start":1377,"line_end":1377,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50298,"byte_end":50345,"line_start":1378,"line_end":1378,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50485,"byte_end":50509,"line_start":1384,"line_end":1384,"column_start":12,"column_end":36},"name":"EngineDescriptionPlugins","qualname":"::models::EngineDescriptionPlugins","value":"EngineDescriptionPlugins { typ, name }","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3447}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50602,"byte_end":50605,"line_start":1387,"line_end":1387,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::EngineDescriptionPlugins::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50516,"byte_end":50541,"line_start":1385,"line_end":1385,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50546,"byte_end":50593,"line_start":1386,"line_end":1386,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3447},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50714,"byte_end":50718,"line_start":1391,"line_end":1391,"column_start":9,"column_end":13},"name":"name","qualname":"::models::EngineDescriptionPlugins::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50628,"byte_end":50653,"line_start":1389,"line_end":1389,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50658,"byte_end":50705,"line_start":1390,"line_end":1390,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3507},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50819,"byte_end":50830,"line_start":1396,"line_end":1396,"column_start":12,"column_end":23},"name":"ErrorDetail","qualname":"::models::ErrorDetail","value":"ErrorDetail { code, message }","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3508},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50923,"byte_end":50927,"line_start":1399,"line_end":1399,"column_start":9,"column_end":13},"name":"code","qualname":"::models::ErrorDetail::code","value":"std::option::Option<i64>","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"code\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50837,"byte_end":50862,"line_start":1397,"line_end":1397,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50867,"byte_end":50914,"line_start":1398,"line_end":1398,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3509},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51036,"byte_end":51043,"line_start":1403,"line_end":1403,"column_start":9,"column_end":16},"name":"message","qualname":"::models::ErrorDetail::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50947,"byte_end":50975,"line_start":1401,"line_end":1401,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":50980,"byte_end":51027,"line_start":1402,"line_end":1402,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3569},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51169,"byte_end":51182,"line_start":1409,"line_end":1409,"column_start":12,"column_end":25},"name":"ErrorResponse","qualname":"::models::ErrorResponse","value":"ErrorResponse { message }","parent":null,"children":[{"krate":0,"index":3570}],"decl_id":null,"docs":" Represents an error.\n","sig":null,"attributes":[{"value":"/ Represents an error.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51065,"byte_end":51089,"line_start":1407,"line_end":1407,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3570},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51253,"byte_end":51260,"line_start":1412,"line_end":1412,"column_start":9,"column_end":16},"name":"message","qualname":"::models::ErrorResponse::message","value":"std::string::String","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" The error message.\n","sig":null,"attributes":[{"value":"/ The error message.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51189,"byte_end":51211,"line_start":1410,"line_end":1410,"column_start":5,"column_end":27}},{"value":"serde(rename = \"message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51216,"byte_end":51244,"line_start":1411,"line_end":1411,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3628},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51353,"byte_end":51363,"line_start":1417,"line_end":1417,"column_start":12,"column_end":22},"name":"ExecConfig","qualname":"::models::ExecConfig","value":"ExecConfig { attach_stdin, attach_stdout, attach_stderr, detach_keys, tty, env, cmd, privileged, user, working_dir }","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3629},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51510,"byte_end":51522,"line_start":1421,"line_end":1421,"column_start":9,"column_end":21},"name":"attach_stdin","qualname":"::models::ExecConfig::attach_stdin","value":"std::option::Option<bool>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Attach to `stdin` of the exec command.\n","sig":null,"attributes":[{"value":"/ Attach to `stdin` of the exec command.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51370,"byte_end":51412,"line_start":1418,"line_end":1418,"column_start":5,"column_end":47}},{"value":"serde(rename = \"AttachStdin\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51417,"byte_end":51449,"line_start":1419,"line_end":1419,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51454,"byte_end":51501,"line_start":1420,"line_end":1420,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3630},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51685,"byte_end":51698,"line_start":1426,"line_end":1426,"column_start":9,"column_end":22},"name":"attach_stdout","qualname":"::models::ExecConfig::attach_stdout","value":"std::option::Option<bool>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Attach to `stdout` of the exec command.\n","sig":null,"attributes":[{"value":"/ Attach to `stdout` of the exec command.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51543,"byte_end":51586,"line_start":1423,"line_end":1423,"column_start":5,"column_end":48}},{"value":"serde(rename = \"AttachStdout\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51591,"byte_end":51624,"line_start":1424,"line_end":1424,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51629,"byte_end":51676,"line_start":1425,"line_end":1425,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3631},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51861,"byte_end":51874,"line_start":1431,"line_end":1431,"column_start":9,"column_end":22},"name":"attach_stderr","qualname":"::models::ExecConfig::attach_stderr","value":"std::option::Option<bool>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Attach to `stderr` of the exec command.\n","sig":null,"attributes":[{"value":"/ Attach to `stderr` of the exec command.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51719,"byte_end":51762,"line_start":1428,"line_end":1428,"column_start":5,"column_end":48}},{"value":"serde(rename = \"AttachStderr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51767,"byte_end":51800,"line_start":1429,"line_end":1429,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51805,"byte_end":51852,"line_start":1430,"line_end":1430,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3632},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52165,"byte_end":52176,"line_start":1436,"line_end":1436,"column_start":9,"column_end":20},"name":"detach_keys","qualname":"::models::ExecConfig::detach_keys","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `,` or `_`. \n","sig":null,"attributes":[{"value":"/ Override the key sequence for detaching a container. Format is a single character `[a-Z]` or `ctrl-<value>` where `<value>` is one of: `a-z`, `@`, `^`, `[`, `,` or `_`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":51895,"byte_end":52068,"line_start":1433,"line_end":1433,"column_start":5,"column_end":178}},{"value":"serde(rename = \"DetachKeys\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52073,"byte_end":52104,"line_start":1434,"line_end":1434,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52109,"byte_end":52156,"line_start":1435,"line_end":1435,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3633},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52315,"byte_end":52318,"line_start":1441,"line_end":1441,"column_start":9,"column_end":12},"name":"tty","qualname":"::models::ExecConfig::tty","value":"std::option::Option<bool>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Allocate a pseudo-TTY.\n","sig":null,"attributes":[{"value":"/ Allocate a pseudo-TTY.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52199,"byte_end":52225,"line_start":1438,"line_end":1438,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Tty\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52230,"byte_end":52254,"line_start":1439,"line_end":1439,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52259,"byte_end":52306,"line_start":1440,"line_end":1440,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3634},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52501,"byte_end":52504,"line_start":1446,"line_end":1446,"column_start":9,"column_end":12},"name":"env","qualname":"::models::ExecConfig::env","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" A list of environment variables in the form `[\\\"VAR=value\\\", ...]`. \n","sig":null,"attributes":[{"value":"/ A list of environment variables in the form `[\\\"VAR=value\\\", ...]`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52339,"byte_end":52411,"line_start":1443,"line_end":1443,"column_start":5,"column_end":77}},{"value":"serde(rename = \"Env\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52416,"byte_end":52440,"line_start":1444,"line_end":1444,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52445,"byte_end":52492,"line_start":1445,"line_end":1445,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3635},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52674,"byte_end":52677,"line_start":1451,"line_end":1451,"column_start":9,"column_end":12},"name":"cmd","qualname":"::models::ExecConfig::cmd","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Command to run, as a string or array of strings.\n","sig":null,"attributes":[{"value":"/ Command to run, as a string or array of strings.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52532,"byte_end":52584,"line_start":1448,"line_end":1448,"column_start":5,"column_end":57}},{"value":"serde(rename = \"Cmd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52589,"byte_end":52613,"line_start":1449,"line_end":1449,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52618,"byte_end":52665,"line_start":1450,"line_end":1450,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3636},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52853,"byte_end":52863,"line_start":1456,"line_end":1456,"column_start":9,"column_end":19},"name":"privileged","qualname":"::models::ExecConfig::privileged","value":"std::option::Option<bool>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" Runs the exec process with extended privileges.\n","sig":null,"attributes":[{"value":"/ Runs the exec process with extended privileges.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52705,"byte_end":52756,"line_start":1453,"line_end":1453,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Privileged\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52761,"byte_end":52792,"line_start":1454,"line_end":1454,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52797,"byte_end":52844,"line_start":1455,"line_end":1455,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3637},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53118,"byte_end":53122,"line_start":1461,"line_end":1461,"column_start":9,"column_end":13},"name":"user","qualname":"::models::ExecConfig::user","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" The user, and optionally, group to run the exec process inside the container. Format is one of: `user`, `user:group`, `uid`, or `uid:gid`. \n","sig":null,"attributes":[{"value":"/ The user, and optionally, group to run the exec process inside the container. Format is one of: `user`, `user:group`, `uid`, or `uid:gid`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":52884,"byte_end":53027,"line_start":1458,"line_end":1458,"column_start":5,"column_end":148}},{"value":"serde(rename = \"User\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53032,"byte_end":53057,"line_start":1459,"line_end":1459,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53062,"byte_end":53109,"line_start":1460,"line_end":1460,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3638},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53311,"byte_end":53322,"line_start":1466,"line_end":1466,"column_start":9,"column_end":20},"name":"working_dir","qualname":"::models::ExecConfig::working_dir","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":" The working directory for the exec process inside the container. \n","sig":null,"attributes":[{"value":"/ The working directory for the exec process inside the container. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53145,"byte_end":53214,"line_start":1463,"line_end":1463,"column_start":5,"column_end":74}},{"value":"serde(rename = \"WorkingDir\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53219,"byte_end":53250,"line_start":1464,"line_end":1464,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53255,"byte_end":53302,"line_start":1465,"line_end":1465,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53423,"byte_end":53442,"line_start":1471,"line_end":1471,"column_start":12,"column_end":31},"name":"ExecInspectResponse","qualname":"::models::ExecInspectResponse","value":"ExecInspectResponse { can_remove, detach_keys, id, running, exit_code, process_config, open_stdin, open_stderr, open_stdout, container_id, pid }","parent":null,"children":[{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3715},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53540,"byte_end":53550,"line_start":1474,"line_end":1474,"column_start":9,"column_end":19},"name":"can_remove","qualname":"::models::ExecInspectResponse::can_remove","value":"std::option::Option<bool>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CanRemove\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53449,"byte_end":53479,"line_start":1472,"line_end":1472,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53484,"byte_end":53531,"line_start":1473,"line_end":1473,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3716},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53663,"byte_end":53674,"line_start":1478,"line_end":1478,"column_start":9,"column_end":20},"name":"detach_keys","qualname":"::models::ExecInspectResponse::detach_keys","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DetachKeys\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53571,"byte_end":53602,"line_start":1476,"line_end":1476,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53607,"byte_end":53654,"line_start":1477,"line_end":1477,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3717},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53781,"byte_end":53783,"line_start":1482,"line_end":1482,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ExecInspectResponse::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53697,"byte_end":53720,"line_start":1480,"line_end":1480,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53725,"byte_end":53772,"line_start":1481,"line_end":1481,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3718},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53895,"byte_end":53902,"line_start":1486,"line_end":1486,"column_start":9,"column_end":16},"name":"running","qualname":"::models::ExecInspectResponse::running","value":"std::option::Option<bool>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Running\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53806,"byte_end":53834,"line_start":1484,"line_end":1484,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53839,"byte_end":53886,"line_start":1485,"line_end":1485,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3719},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54013,"byte_end":54022,"line_start":1490,"line_end":1490,"column_start":9,"column_end":18},"name":"exit_code","qualname":"::models::ExecInspectResponse::exit_code","value":"std::option::Option<i64>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ExitCode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53923,"byte_end":53952,"line_start":1488,"line_end":1488,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":53957,"byte_end":54004,"line_start":1489,"line_end":1489,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3720},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54137,"byte_end":54151,"line_start":1494,"line_end":1494,"column_start":9,"column_end":23},"name":"process_config","qualname":"::models::ExecInspectResponse::process_config","value":"std::option::Option<models::ProcessConfig>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ProcessConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54042,"byte_end":54076,"line_start":1492,"line_end":1492,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54081,"byte_end":54128,"line_start":1493,"line_end":1493,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3721},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54272,"byte_end":54282,"line_start":1498,"line_end":1498,"column_start":9,"column_end":19},"name":"open_stdin","qualname":"::models::ExecInspectResponse::open_stdin","value":"std::option::Option<bool>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OpenStdin\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54181,"byte_end":54211,"line_start":1496,"line_end":1496,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54216,"byte_end":54263,"line_start":1497,"line_end":1497,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3722},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54395,"byte_end":54406,"line_start":1502,"line_end":1502,"column_start":9,"column_end":20},"name":"open_stderr","qualname":"::models::ExecInspectResponse::open_stderr","value":"std::option::Option<bool>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OpenStderr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54303,"byte_end":54334,"line_start":1500,"line_end":1500,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54339,"byte_end":54386,"line_start":1501,"line_end":1501,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3723},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54519,"byte_end":54530,"line_start":1506,"line_end":1506,"column_start":9,"column_end":20},"name":"open_stdout","qualname":"::models::ExecInspectResponse::open_stdout","value":"std::option::Option<bool>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OpenStdout\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54427,"byte_end":54458,"line_start":1504,"line_end":1504,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54463,"byte_end":54510,"line_start":1505,"line_end":1505,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3724},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54644,"byte_end":54656,"line_start":1510,"line_end":1510,"column_start":9,"column_end":21},"name":"container_id","qualname":"::models::ExecInspectResponse::container_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54551,"byte_end":54583,"line_start":1508,"line_end":1508,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54588,"byte_end":54635,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3725},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54816,"byte_end":54819,"line_start":1515,"line_end":1515,"column_start":9,"column_end":12},"name":"pid","qualname":"::models::ExecInspectResponse::pid","value":"std::option::Option<i64>","parent":{"krate":0,"index":3714},"children":[],"decl_id":null,"docs":" The system process ID for the exec process.\n","sig":null,"attributes":[{"value":"/ The system process ID for the exec process.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54679,"byte_end":54726,"line_start":1512,"line_end":1512,"column_start":5,"column_end":52}},{"value":"serde(rename = \"Pid\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54731,"byte_end":54755,"line_start":1513,"line_end":1513,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54760,"byte_end":54807,"line_start":1514,"line_end":1514,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3803},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54917,"byte_end":54932,"line_start":1520,"line_end":1520,"column_start":12,"column_end":27},"name":"ExecStartConfig","qualname":"::models::ExecStartConfig","value":"ExecStartConfig { detach, tty }","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3805}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3804},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55060,"byte_end":55066,"line_start":1524,"line_end":1524,"column_start":9,"column_end":15},"name":"detach","qualname":"::models::ExecStartConfig::detach","value":"std::option::Option<bool>","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":" Detach from the command.\n","sig":null,"attributes":[{"value":"/ Detach from the command.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54939,"byte_end":54967,"line_start":1521,"line_end":1521,"column_start":5,"column_end":33}},{"value":"serde(rename = \"Detach\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":54972,"byte_end":54999,"line_start":1522,"line_end":1522,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55004,"byte_end":55051,"line_start":1523,"line_end":1523,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3805},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55203,"byte_end":55206,"line_start":1529,"line_end":1529,"column_start":9,"column_end":12},"name":"tty","qualname":"::models::ExecStartConfig::tty","value":"std::option::Option<bool>","parent":{"krate":0,"index":3803},"children":[],"decl_id":null,"docs":" Allocate a pseudo-TTY.\n","sig":null,"attributes":[{"value":"/ Allocate a pseudo-TTY.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55087,"byte_end":55113,"line_start":1526,"line_end":1526,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Tty\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55118,"byte_end":55142,"line_start":1527,"line_end":1527,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55147,"byte_end":55194,"line_start":1528,"line_end":1528,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55351,"byte_end":55367,"line_start":1535,"line_end":1535,"column_start":10,"column_end":26},"name":"GenericResources","qualname":"::models::GenericResources","value":"GenericResourcesInner","parent":null,"children":[],"decl_id":null,"docs":" User-defined resources can be either Integer resources (e.g, `SSD=3`) or String resources (e.g, `GPU=UUID1`). \n","sig":null,"attributes":[{"value":"/ User-defined resources can be either Integer resources (e.g, `SSD=3`) or String resources (e.g, `GPU=UUID1`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55226,"byte_end":55340,"line_start":1533,"line_end":1533,"column_start":1,"column_end":115}}]},{"kind":"Struct","id":{"krate":0,"index":3865},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55473,"byte_end":55494,"line_start":1538,"line_end":1538,"column_start":12,"column_end":33},"name":"GenericResourcesInner","qualname":"::models::GenericResourcesInner","value":"GenericResourcesInner { named_resource_spec, discrete_resource_spec }","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3866},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55600,"byte_end":55619,"line_start":1541,"line_end":1541,"column_start":9,"column_end":28},"name":"named_resource_spec","qualname":"::models::GenericResourcesInner::named_resource_spec","value":"std::option::Option<models::GenericResourcesInnerNamedResourceSpec>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NamedResourceSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55501,"byte_end":55539,"line_start":1539,"line_end":1539,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55544,"byte_end":55591,"line_start":1540,"line_end":1540,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3867},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55776,"byte_end":55798,"line_start":1545,"line_end":1545,"column_start":9,"column_end":31},"name":"discrete_resource_spec","qualname":"::models::GenericResourcesInner::discrete_resource_spec","value":"std::option::Option<models::GenericResourcesInnerDiscreteResourceSpec>","parent":{"krate":0,"index":3865},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DiscreteResourceSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55674,"byte_end":55715,"line_start":1543,"line_end":1543,"column_start":5,"column_end":46}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55720,"byte_end":55767,"line_start":1544,"line_end":1544,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3927},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55934,"byte_end":55975,"line_start":1550,"line_end":1550,"column_start":12,"column_end":53},"name":"GenericResourcesInnerDiscreteResourceSpec","qualname":"::models::GenericResourcesInnerDiscreteResourceSpec","value":"GenericResourcesInnerDiscreteResourceSpec { kind, value }","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3928},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56068,"byte_end":56072,"line_start":1553,"line_end":1553,"column_start":9,"column_end":13},"name":"kind","qualname":"::models::GenericResourcesInnerDiscreteResourceSpec::kind","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Kind\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":55982,"byte_end":56007,"line_start":1551,"line_end":1551,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56012,"byte_end":56059,"line_start":1552,"line_end":1552,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3929},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56182,"byte_end":56187,"line_start":1557,"line_end":1557,"column_start":9,"column_end":14},"name":"value","qualname":"::models::GenericResourcesInnerDiscreteResourceSpec::value","value":"std::option::Option<i64>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56095,"byte_end":56121,"line_start":1555,"line_end":1555,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56126,"byte_end":56173,"line_start":1556,"line_end":1556,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3989},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56285,"byte_end":56323,"line_start":1562,"line_end":1562,"column_start":12,"column_end":50},"name":"GenericResourcesInnerNamedResourceSpec","qualname":"::models::GenericResourcesInnerNamedResourceSpec","value":"GenericResourcesInnerNamedResourceSpec { kind, value }","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3990},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56416,"byte_end":56420,"line_start":1565,"line_end":1565,"column_start":9,"column_end":13},"name":"kind","qualname":"::models::GenericResourcesInnerNamedResourceSpec::kind","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Kind\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56330,"byte_end":56355,"line_start":1563,"line_end":1563,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56360,"byte_end":56407,"line_start":1564,"line_end":1564,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3991},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56530,"byte_end":56535,"line_start":1569,"line_end":1569,"column_start":9,"column_end":14},"name":"value","qualname":"::models::GenericResourcesInnerNamedResourceSpec::value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":3989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56443,"byte_end":56469,"line_start":1567,"line_end":1567,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56474,"byte_end":56521,"line_start":1568,"line_end":1568,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4051},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56686,"byte_end":56701,"line_start":1575,"line_end":1575,"column_start":12,"column_end":27},"name":"GraphDriverData","qualname":"::models::GraphDriverData","value":"GraphDriverData { name, data }","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053}],"decl_id":null,"docs":" Information about a container's graph driver.\n","sig":null,"attributes":[{"value":"/ Information about a container's graph driver.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56557,"byte_end":56606,"line_start":1573,"line_end":1573,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4052},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56742,"byte_end":56746,"line_start":1577,"line_end":1577,"column_start":9,"column_end":13},"name":"name","qualname":"::models::GraphDriverData::name","value":"std::string::String","parent":{"krate":0,"index":4051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56708,"byte_end":56733,"line_start":1576,"line_end":1576,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4053},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56858,"byte_end":56862,"line_start":1581,"line_end":1581,"column_start":9,"column_end":13},"name":"data","qualname":"::models::GraphDriverData::data","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":4051},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Data\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56761,"byte_end":56786,"line_start":1579,"line_end":1579,"column_start":5,"column_end":30}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_map\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56791,"byte_end":56849,"line_start":1580,"line_end":1580,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4132},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57046,"byte_end":57052,"line_start":1587,"line_end":1587,"column_start":12,"column_end":18},"name":"Health","qualname":"::models::Health","value":"Health { status, failing_streak, log }","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135}],"decl_id":null,"docs":" Health stores information about the container's healthcheck results. \n","sig":null,"attributes":[{"value":"/ Health stores information about the container's healthcheck results. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":56893,"byte_end":56966,"line_start":1585,"line_end":1585,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4133},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57483,"byte_end":57489,"line_start":1591,"line_end":1591,"column_start":9,"column_end":15},"name":"status","qualname":"::models::Health::status","value":"std::option::Option<models::HealthStatusEnum>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Status is one of `none`, `starting`, `healthy` or `unhealthy`  - \\\"none\\\"      Indicates there is no healthcheck - \\\"starting\\\"  Starting indicates that the container is not yet ready - \\\"healthy\\\"   Healthy indicates that the container is running correctly - \\\"unhealthy\\\" Unhealthy indicates that the container has a problem \n","sig":null,"attributes":[{"value":"/ Status is one of `none`, `starting`, `healthy` or `unhealthy`  - \\\"none\\\"      Indicates there is no healthcheck - \\\"starting\\\"  Starting indicates that the container is not yet ready - \\\"healthy\\\"   Healthy indicates that the container is running correctly - \\\"unhealthy\\\" Unhealthy indicates that the container has a problem ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57059,"byte_end":57390,"line_start":1588,"line_end":1588,"column_start":5,"column_end":336}},{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57395,"byte_end":57422,"line_start":1589,"line_end":1589,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57427,"byte_end":57474,"line_start":1590,"line_end":1590,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57677,"byte_end":57691,"line_start":1596,"line_end":1596,"column_start":9,"column_end":23},"name":"failing_streak","qualname":"::models::Health::failing_streak","value":"std::option::Option<i64>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" FailingStreak is the number of consecutive failures\n","sig":null,"attributes":[{"value":"/ FailingStreak is the number of consecutive failures","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57522,"byte_end":57577,"line_start":1593,"line_end":1593,"column_start":5,"column_end":60}},{"value":"serde(rename = \"FailingStreak\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57582,"byte_end":57616,"line_start":1594,"line_end":1594,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57621,"byte_end":57668,"line_start":1595,"line_end":1595,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4135},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57854,"byte_end":57857,"line_start":1601,"line_end":1601,"column_start":9,"column_end":12},"name":"log","qualname":"::models::Health::log","value":"std::option::Option<std::vec::Vec<models::HealthcheckResult>>","parent":{"krate":0,"index":4132},"children":[],"decl_id":null,"docs":" Log contains the last few results (oldest first) \n","sig":null,"attributes":[{"value":"/ Log contains the last few results (oldest first) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57711,"byte_end":57764,"line_start":1598,"line_end":1598,"column_start":5,"column_end":58}},{"value":"serde(rename = \"Log\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57769,"byte_end":57793,"line_start":1599,"line_end":1599,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57798,"byte_end":57845,"line_start":1600,"line_end":1600,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58071,"byte_end":58076,"line_start":1609,"line_end":1609,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::HealthStatusEnum::EMPTY","value":"HealthStatusEnum::EMPTY","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58045,"byte_end":58066,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4200},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58112,"byte_end":58116,"line_start":1611,"line_end":1611,"column_start":5,"column_end":9},"name":"NONE","qualname":"::models::HealthStatusEnum::NONE","value":"HealthStatusEnum::NONE","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58082,"byte_end":58107,"line_start":1610,"line_end":1610,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4202},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58156,"byte_end":58164,"line_start":1613,"line_end":1613,"column_start":5,"column_end":13},"name":"STARTING","qualname":"::models::HealthStatusEnum::STARTING","value":"HealthStatusEnum::STARTING","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"starting\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58122,"byte_end":58151,"line_start":1612,"line_end":1612,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4204},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58203,"byte_end":58210,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12},"name":"HEALTHY","qualname":"::models::HealthStatusEnum::HEALTHY","value":"HealthStatusEnum::HEALTHY","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"healthy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58170,"byte_end":58198,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4206},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58251,"byte_end":58260,"line_start":1617,"line_end":1617,"column_start":5,"column_end":14},"name":"UNHEALTHY","qualname":"::models::HealthStatusEnum::UNHEALTHY","value":"HealthStatusEnum::UNHEALTHY","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"unhealthy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58216,"byte_end":58246,"line_start":1616,"line_end":1616,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":4197},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58021,"byte_end":58037,"line_start":1607,"line_end":1607,"column_start":10,"column_end":26},"name":"HealthStatusEnum","qualname":"::models::HealthStatusEnum","value":"pub enum HealthStatusEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"none\")]\n    NONE,\n\n    #[serde(rename = \"starting\")]\n    STARTING,\n\n    #[serde(rename = \"healthy\")]\n    HEALTHY,\n\n    #[serde(rename = \"unhealthy\")]\n    UNHEALTHY,\n}","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4200},{"krate":0,"index":4202},{"krate":0,"index":4204},{"krate":0,"index":4206}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":57895,"byte_end":57925,"line_start":1605,"line_end":1605,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4274},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":59771,"byte_end":59783,"line_start":1661,"line_end":1661,"column_start":12,"column_end":24},"name":"HealthConfig","qualname":"::models::HealthConfig","value":"HealthConfig { test, interval, timeout, retries, start_period }","parent":null,"children":[{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278},{"krate":0,"index":4279}],"decl_id":null,"docs":" A test to perform to check that the container is healthy.\n","sig":null,"attributes":[{"value":"/ A test to perform to check that the container is healthy.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":59630,"byte_end":59691,"line_start":1659,"line_end":1659,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4275},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60133,"byte_end":60137,"line_start":1665,"line_end":1665,"column_start":9,"column_end":13},"name":"test","qualname":"::models::HealthConfig::test","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":4274},"children":[],"decl_id":null,"docs":" The test to perform. Possible values are:  - `[]` inherit healthcheck from image or parent image - `[\\\"NONE\\\"]` disable healthcheck - `[\\\"CMD\\\", args...]` exec arguments directly - `[\\\"CMD-SHELL\\\", command]` run command with system's default shell \n","sig":null,"attributes":[{"value":"/ The test to perform. Possible values are:  - `[]` inherit healthcheck from image or parent image - `[\\\"NONE\\\"]` disable healthcheck - `[\\\"CMD\\\", args...]` exec arguments directly - `[\\\"CMD-SHELL\\\", command]` run command with system's default shell ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":59790,"byte_end":60042,"line_start":1662,"line_end":1662,"column_start":5,"column_end":257}},{"value":"serde(rename = \"Test\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60047,"byte_end":60072,"line_start":1663,"line_end":1663,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60077,"byte_end":60124,"line_start":1664,"line_end":1664,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4276},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60372,"byte_end":60380,"line_start":1670,"line_end":1670,"column_start":9,"column_end":17},"name":"interval","qualname":"::models::HealthConfig::interval","value":"std::option::Option<i64>","parent":{"krate":0,"index":4274},"children":[],"decl_id":null,"docs":" The time to wait between checks in nanoseconds. It should be 0 or at least 1000000 (1 ms). 0 means inherit. \n","sig":null,"attributes":[{"value":"/ The time to wait between checks in nanoseconds. It should be 0 or at least 1000000 (1 ms). 0 means inherit. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60165,"byte_end":60277,"line_start":1667,"line_end":1667,"column_start":5,"column_end":117}},{"value":"serde(rename = \"Interval\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60282,"byte_end":60311,"line_start":1668,"line_end":1668,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60316,"byte_end":60363,"line_start":1669,"line_end":1669,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4277},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60618,"byte_end":60625,"line_start":1675,"line_end":1675,"column_start":9,"column_end":16},"name":"timeout","qualname":"::models::HealthConfig::timeout","value":"std::option::Option<i64>","parent":{"krate":0,"index":4274},"children":[],"decl_id":null,"docs":" The time to wait before considering the check to have hung. It should be 0 or at least 1000000 (1 ms). 0 means inherit. \n","sig":null,"attributes":[{"value":"/ The time to wait before considering the check to have hung. It should be 0 or at least 1000000 (1 ms). 0 means inherit. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60400,"byte_end":60524,"line_start":1672,"line_end":1672,"column_start":5,"column_end":129}},{"value":"serde(rename = \"Timeout\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60529,"byte_end":60557,"line_start":1673,"line_end":1673,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60562,"byte_end":60609,"line_start":1674,"line_end":1674,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4278},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60840,"byte_end":60847,"line_start":1680,"line_end":1680,"column_start":9,"column_end":16},"name":"retries","qualname":"::models::HealthConfig::retries","value":"std::option::Option<i64>","parent":{"krate":0,"index":4274},"children":[],"decl_id":null,"docs":" The number of consecutive failures needed to consider a container as unhealthy. 0 means inherit. \n","sig":null,"attributes":[{"value":"/ The number of consecutive failures needed to consider a container as unhealthy. 0 means inherit. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60645,"byte_end":60746,"line_start":1677,"line_end":1677,"column_start":5,"column_end":106}},{"value":"serde(rename = \"Retries\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60751,"byte_end":60779,"line_start":1678,"line_end":1678,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60784,"byte_end":60831,"line_start":1679,"line_end":1679,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4279},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61131,"byte_end":61143,"line_start":1685,"line_end":1685,"column_start":9,"column_end":21},"name":"start_period","qualname":"::models::HealthConfig::start_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":4274},"children":[],"decl_id":null,"docs":" Start period for the container to initialize before starting health-retries countdown in nanoseconds. It should be 0 or at least 1000000 (1 ms). 0 means inherit. \n","sig":null,"attributes":[{"value":"/ Start period for the container to initialize before starting health-retries countdown in nanoseconds. It should be 0 or at least 1000000 (1 ms). 0 means inherit. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":60867,"byte_end":61033,"line_start":1682,"line_end":1682,"column_start":5,"column_end":171}},{"value":"serde(rename = \"StartPeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61038,"byte_end":61070,"line_start":1683,"line_end":1683,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61075,"byte_end":61122,"line_start":1684,"line_end":1684,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4345},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61325,"byte_end":61342,"line_start":1691,"line_end":1691,"column_start":12,"column_end":29},"name":"HealthcheckResult","qualname":"::models::HealthcheckResult","value":"HealthcheckResult { start, end, exit_code, output }","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349}],"decl_id":null,"docs":" HealthcheckResult stores information about a single run of a healthcheck probe \n","sig":null,"attributes":[{"value":"/ HealthcheckResult stores information about a single run of a healthcheck probe ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61162,"byte_end":61245,"line_start":1689,"line_end":1689,"column_start":1,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":4346},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61565,"byte_end":61570,"line_start":1695,"line_end":1695,"column_start":9,"column_end":14},"name":"start","qualname":"::models::HealthcheckResult::start","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Date and time at which this check started in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which this check started in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61349,"byte_end":61473,"line_start":1692,"line_end":1692,"column_start":5,"column_end":129}},{"value":"serde(rename = \"Start\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61478,"byte_end":61504,"line_start":1693,"line_end":1693,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61509,"byte_end":61556,"line_start":1694,"line_end":1694,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4347},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61828,"byte_end":61831,"line_start":1700,"line_end":1700,"column_start":9,"column_end":12},"name":"end","qualname":"::models::HealthcheckResult::end","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Date and time at which this check ended in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which this check ended in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61616,"byte_end":61738,"line_start":1697,"line_end":1697,"column_start":5,"column_end":127}},{"value":"serde(rename = \"End\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61743,"byte_end":61767,"line_start":1698,"line_end":1698,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61772,"byte_end":61819,"line_start":1699,"line_end":1699,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4348},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62084,"byte_end":62093,"line_start":1705,"line_end":1705,"column_start":9,"column_end":18},"name":"exit_code","qualname":"::models::HealthcheckResult::exit_code","value":"std::option::Option<i64>","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" ExitCode meanings:  - `0` healthy - `1` unhealthy - `2` reserved (considered unhealthy) - other values: error running probe \n","sig":null,"attributes":[{"value":"/ ExitCode meanings:  - `0` healthy - `1` unhealthy - `2` reserved (considered unhealthy) - other values: error running probe ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61861,"byte_end":61989,"line_start":1702,"line_end":1702,"column_start":5,"column_end":133}},{"value":"serde(rename = \"ExitCode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":61994,"byte_end":62023,"line_start":1703,"line_end":1703,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62028,"byte_end":62075,"line_start":1704,"line_end":1704,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4349},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62232,"byte_end":62238,"line_start":1710,"line_end":1710,"column_start":9,"column_end":15},"name":"output","qualname":"::models::HealthcheckResult::output","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Output from last check\n","sig":null,"attributes":[{"value":"/ Output from last check","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62113,"byte_end":62139,"line_start":1707,"line_end":1707,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Output\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62144,"byte_end":62171,"line_start":1708,"line_end":1708,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62176,"byte_end":62223,"line_start":1709,"line_end":1709,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4413},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62416,"byte_end":62435,"line_start":1716,"line_end":1716,"column_start":12,"column_end":31},"name":"HistoryResponseItem","qualname":"::models::HistoryResponseItem","value":"HistoryResponseItem { id, created, created_by, tags, size, comment }","parent":null,"children":[{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419}],"decl_id":null,"docs":" individual image layer information in response to ImageHistory operation\n","sig":null,"attributes":[{"value":"/ individual image layer information in response to ImageHistory operation","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62260,"byte_end":62336,"line_start":1714,"line_end":1714,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4414},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62474,"byte_end":62476,"line_start":1718,"line_end":1718,"column_start":9,"column_end":11},"name":"id","qualname":"::models::HistoryResponseItem::id","value":"std::string::String","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62442,"byte_end":62465,"line_start":1717,"line_end":1717,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4415},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62528,"byte_end":62535,"line_start":1721,"line_end":1721,"column_start":9,"column_end":16},"name":"created","qualname":"::models::HistoryResponseItem::created","value":"i64","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62491,"byte_end":62519,"line_start":1720,"line_end":1720,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4416},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62586,"byte_end":62596,"line_start":1724,"line_end":1724,"column_start":9,"column_end":19},"name":"created_by","qualname":"::models::HistoryResponseItem::created_by","value":"std::string::String","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CreatedBy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62547,"byte_end":62577,"line_start":1723,"line_end":1723,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":4417},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62708,"byte_end":62712,"line_start":1728,"line_end":1728,"column_start":9,"column_end":13},"name":"tags","qualname":"::models::HistoryResponseItem::tags","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Tags\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62611,"byte_end":62636,"line_start":1726,"line_end":1726,"column_start":5,"column_end":30}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62641,"byte_end":62699,"line_start":1727,"line_end":1727,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4418},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62766,"byte_end":62770,"line_start":1731,"line_end":1731,"column_start":9,"column_end":13},"name":"size","qualname":"::models::HistoryResponseItem::size","value":"i64","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62732,"byte_end":62757,"line_start":1730,"line_end":1730,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4419},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62819,"byte_end":62826,"line_start":1734,"line_end":1734,"column_start":9,"column_end":16},"name":"comment","qualname":"::models::HistoryResponseItem::comment","value":"std::string::String","parent":{"krate":0,"index":4413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Comment\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62782,"byte_end":62810,"line_start":1733,"line_end":1733,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4506},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62968,"byte_end":62987,"line_start":1740,"line_end":1740,"column_start":12,"column_end":31},"name":"HostConfigLogConfig","qualname":"::models::HostConfigLogConfig","value":"HostConfigLogConfig { typ, config }","parent":null,"children":[{"krate":0,"index":4507},{"krate":0,"index":4508}],"decl_id":null,"docs":" The logging configuration for this container\n","sig":null,"attributes":[{"value":"/ The logging configuration for this container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62840,"byte_end":62888,"line_start":1738,"line_end":1738,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4507},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63080,"byte_end":63083,"line_start":1743,"line_end":1743,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::HostConfigLogConfig::typ","value":"std::option::Option<models::HostConfigLogConfigTypeEnum>","parent":{"krate":0,"index":4506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":62994,"byte_end":63019,"line_start":1741,"line_end":1741,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63024,"byte_end":63071,"line_start":1742,"line_end":1742,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4508},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63215,"byte_end":63221,"line_start":1747,"line_end":1747,"column_start":9,"column_end":15},"name":"config","qualname":"::models::HostConfigLogConfig::config","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":4506},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63127,"byte_end":63154,"line_start":1745,"line_end":1745,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63159,"byte_end":63206,"line_start":1746,"line_end":1746,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4569},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63447,"byte_end":63452,"line_start":1755,"line_end":1755,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::HostConfigLogConfigTypeEnum::EMPTY","value":"HostConfigLogConfigTypeEnum::EMPTY","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63421,"byte_end":63442,"line_start":1754,"line_end":1754,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4571},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63493,"byte_end":63502,"line_start":1757,"line_end":1757,"column_start":5,"column_end":14},"name":"JSON_FILE","qualname":"::models::HostConfigLogConfigTypeEnum::JSON_FILE","value":"HostConfigLogConfigTypeEnum::JSON_FILE","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"json-file\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63458,"byte_end":63488,"line_start":1756,"line_end":1756,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4573},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63540,"byte_end":63546,"line_start":1759,"line_end":1759,"column_start":5,"column_end":11},"name":"SYSLOG","qualname":"::models::HostConfigLogConfigTypeEnum::SYSLOG","value":"HostConfigLogConfigTypeEnum::SYSLOG","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"syslog\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63508,"byte_end":63535,"line_start":1758,"line_end":1758,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4575},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63586,"byte_end":63594,"line_start":1761,"line_end":1761,"column_start":5,"column_end":13},"name":"JOURNALD","qualname":"::models::HostConfigLogConfigTypeEnum::JOURNALD","value":"HostConfigLogConfigTypeEnum::JOURNALD","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"journald\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63552,"byte_end":63581,"line_start":1760,"line_end":1760,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4577},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63630,"byte_end":63634,"line_start":1763,"line_end":1763,"column_start":5,"column_end":9},"name":"GELF","qualname":"::models::HostConfigLogConfigTypeEnum::GELF","value":"HostConfigLogConfigTypeEnum::GELF","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"gelf\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63600,"byte_end":63625,"line_start":1762,"line_end":1762,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4579},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63673,"byte_end":63680,"line_start":1765,"line_end":1765,"column_start":5,"column_end":12},"name":"FLUENTD","qualname":"::models::HostConfigLogConfigTypeEnum::FLUENTD","value":"HostConfigLogConfigTypeEnum::FLUENTD","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"fluentd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63640,"byte_end":63668,"line_start":1764,"line_end":1764,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4581},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63719,"byte_end":63726,"line_start":1767,"line_end":1767,"column_start":5,"column_end":12},"name":"AWSLOGS","qualname":"::models::HostConfigLogConfigTypeEnum::AWSLOGS","value":"HostConfigLogConfigTypeEnum::AWSLOGS","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"awslogs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63686,"byte_end":63714,"line_start":1766,"line_end":1766,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4583},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63764,"byte_end":63770,"line_start":1769,"line_end":1769,"column_start":5,"column_end":11},"name":"SPLUNK","qualname":"::models::HostConfigLogConfigTypeEnum::SPLUNK","value":"HostConfigLogConfigTypeEnum::SPLUNK","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"splunk\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63732,"byte_end":63759,"line_start":1768,"line_end":1768,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4585},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63809,"byte_end":63816,"line_start":1771,"line_end":1771,"column_start":5,"column_end":12},"name":"ETWLOGS","qualname":"::models::HostConfigLogConfigTypeEnum::ETWLOGS","value":"HostConfigLogConfigTypeEnum::ETWLOGS","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"etwlogs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63776,"byte_end":63804,"line_start":1770,"line_end":1770,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4587},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63852,"byte_end":63856,"line_start":1773,"line_end":1773,"column_start":5,"column_end":9},"name":"NONE","qualname":"::models::HostConfigLogConfigTypeEnum::NONE","value":"HostConfigLogConfigTypeEnum::NONE","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63822,"byte_end":63847,"line_start":1772,"line_end":1772,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":4568},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63386,"byte_end":63413,"line_start":1753,"line_end":1753,"column_start":10,"column_end":37},"name":"HostConfigLogConfigTypeEnum","qualname":"::models::HostConfigLogConfigTypeEnum","value":"pub enum HostConfigLogConfigTypeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"json-file\")]\n    JSON_FILE,\n\n    #[serde(rename = \"syslog\")]\n    SYSLOG,\n\n    #[serde(rename = \"journald\")]\n    JOURNALD,\n\n    #[serde(rename = \"gelf\")]\n    GELF,\n\n    #[serde(rename = \"fluentd\")]\n    FLUENTD,\n\n    #[serde(rename = \"awslogs\")]\n    AWSLOGS,\n\n    #[serde(rename = \"splunk\")]\n    SPLUNK,\n\n    #[serde(rename = \"etwlogs\")]\n    ETWLOGS,\n\n    #[serde(rename = \"none\")]\n    NONE,\n}","parent":null,"children":[{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4583},{"krate":0,"index":4585},{"krate":0,"index":4587}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63260,"byte_end":63290,"line_start":1751,"line_end":1751,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4665},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66575,"byte_end":66585,"line_start":1832,"line_end":1832,"column_start":12,"column_end":22},"name":"IdResponse","qualname":"::models::IdResponse","value":"IdResponse { id }","parent":null,"children":[{"krate":0,"index":4666}],"decl_id":null,"docs":" Response to an API call that returns just an Id\n","sig":null,"attributes":[{"value":"/ Response to an API call that returns just an Id","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66444,"byte_end":66495,"line_start":1830,"line_end":1830,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4666},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66668,"byte_end":66670,"line_start":1835,"line_end":1835,"column_start":9,"column_end":11},"name":"id","qualname":"::models::IdResponse::id","value":"std::string::String","parent":{"krate":0,"index":4665},"children":[],"decl_id":null,"docs":" The id of the newly created object.\n","sig":null,"attributes":[{"value":"/ The id of the newly created object.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66592,"byte_end":66631,"line_start":1833,"line_end":1833,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66636,"byte_end":66659,"line_start":1834,"line_end":1834,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4724},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66763,"byte_end":66768,"line_start":1840,"line_end":1840,"column_start":12,"column_end":17},"name":"Image","qualname":"::models::Image","value":"Image { id, repo_tags, repo_digests, parent, comment, created, container, container_config, docker_version, author, config, architecture, os, os_version, size, virtual_size, graph_driver, root_fs, metadata }","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4725},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66807,"byte_end":66809,"line_start":1842,"line_end":1842,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Image::id","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66775,"byte_end":66798,"line_start":1841,"line_end":1841,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4726},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66914,"byte_end":66923,"line_start":1846,"line_end":1846,"column_start":9,"column_end":18},"name":"repo_tags","qualname":"::models::Image::repo_tags","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RepoTags\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66824,"byte_end":66853,"line_start":1844,"line_end":1844,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66858,"byte_end":66905,"line_start":1845,"line_end":1845,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4727},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67044,"byte_end":67056,"line_start":1850,"line_end":1850,"column_start":9,"column_end":21},"name":"repo_digests","qualname":"::models::Image::repo_digests","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RepoDigests\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66951,"byte_end":66983,"line_start":1848,"line_end":1848,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":66988,"byte_end":67035,"line_start":1849,"line_end":1849,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4728},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67120,"byte_end":67126,"line_start":1853,"line_end":1853,"column_start":9,"column_end":15},"name":"parent","qualname":"::models::Image::parent","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Parent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67084,"byte_end":67111,"line_start":1852,"line_end":1852,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4729},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67178,"byte_end":67185,"line_start":1856,"line_end":1856,"column_start":9,"column_end":16},"name":"comment","qualname":"::models::Image::comment","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Comment\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67141,"byte_end":67169,"line_start":1855,"line_end":1855,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4730},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67237,"byte_end":67244,"line_start":1859,"line_end":1859,"column_start":9,"column_end":16},"name":"created","qualname":"::models::Image::created","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67200,"byte_end":67228,"line_start":1858,"line_end":1858,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4731},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67298,"byte_end":67307,"line_start":1862,"line_end":1862,"column_start":9,"column_end":18},"name":"container","qualname":"::models::Image::container","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Container\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67259,"byte_end":67289,"line_start":1861,"line_end":1861,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":4732},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67419,"byte_end":67435,"line_start":1866,"line_end":1866,"column_start":9,"column_end":25},"name":"container_config","qualname":"::models::Image::container_config","value":"std::option::Option<models::ContainerConfig>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67322,"byte_end":67358,"line_start":1864,"line_end":1864,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67363,"byte_end":67410,"line_start":1865,"line_end":1865,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4733},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67510,"byte_end":67524,"line_start":1869,"line_end":1869,"column_start":9,"column_end":23},"name":"docker_version","qualname":"::models::Image::docker_version","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DockerVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67467,"byte_end":67501,"line_start":1868,"line_end":1868,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4734},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67575,"byte_end":67581,"line_start":1872,"line_end":1872,"column_start":9,"column_end":15},"name":"author","qualname":"::models::Image::author","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Author\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67539,"byte_end":67566,"line_start":1871,"line_end":1871,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4735},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67684,"byte_end":67690,"line_start":1876,"line_end":1876,"column_start":9,"column_end":15},"name":"config","qualname":"::models::Image::config","value":"std::option::Option<models::ContainerConfig>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67596,"byte_end":67623,"line_start":1874,"line_end":1874,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67628,"byte_end":67675,"line_start":1875,"line_end":1875,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4736},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67764,"byte_end":67776,"line_start":1879,"line_end":1879,"column_start":9,"column_end":21},"name":"architecture","qualname":"::models::Image::architecture","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Architecture\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67722,"byte_end":67755,"line_start":1878,"line_end":1878,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4737},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67823,"byte_end":67825,"line_start":1882,"line_end":1882,"column_start":9,"column_end":11},"name":"os","qualname":"::models::Image::os","value":"std::string::String","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Os\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67791,"byte_end":67814,"line_start":1881,"line_end":1881,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4738},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67931,"byte_end":67941,"line_start":1886,"line_end":1886,"column_start":9,"column_end":19},"name":"os_version","qualname":"::models::Image::os_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"OsVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67840,"byte_end":67870,"line_start":1884,"line_end":1884,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67875,"byte_end":67922,"line_start":1885,"line_end":1885,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4739},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67998,"byte_end":68002,"line_start":1889,"line_end":1889,"column_start":9,"column_end":13},"name":"size","qualname":"::models::Image::size","value":"i64","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":67964,"byte_end":67989,"line_start":1888,"line_end":1888,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4740},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68055,"byte_end":68067,"line_start":1892,"line_end":1892,"column_start":9,"column_end":21},"name":"virtual_size","qualname":"::models::Image::virtual_size","value":"i64","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"VirtualSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68014,"byte_end":68046,"line_start":1891,"line_end":1891,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4741},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68120,"byte_end":68132,"line_start":1895,"line_end":1895,"column_start":9,"column_end":21},"name":"graph_driver","qualname":"::models::Image::graph_driver","value":"models::GraphDriverData","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"GraphDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68079,"byte_end":68111,"line_start":1894,"line_end":1894,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4742},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68192,"byte_end":68199,"line_start":1898,"line_end":1898,"column_start":9,"column_end":16},"name":"root_fs","qualname":"::models::Image::root_fs","value":"models::ImageRootFs","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RootFS\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68156,"byte_end":68183,"line_start":1897,"line_end":1897,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4743},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68309,"byte_end":68317,"line_start":1902,"line_end":1902,"column_start":9,"column_end":17},"name":"metadata","qualname":"::models::Image::metadata","value":"std::option::Option<models::ImageMetadata>","parent":{"krate":0,"index":4724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Metadata\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68219,"byte_end":68248,"line_start":1900,"line_end":1900,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68253,"byte_end":68300,"line_start":1901,"line_end":1901,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4837},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68425,"byte_end":68448,"line_start":1907,"line_end":1907,"column_start":12,"column_end":35},"name":"ImageDeleteResponseItem","qualname":"::models::ImageDeleteResponseItem","value":"ImageDeleteResponseItem { untagged, deleted }","parent":null,"children":[{"krate":0,"index":4838},{"krate":0,"index":4839}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4838},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68596,"byte_end":68604,"line_start":1911,"line_end":1911,"column_start":9,"column_end":17},"name":"untagged","qualname":"::models::ImageDeleteResponseItem::untagged","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" The image ID of an image that was untagged\n","sig":null,"attributes":[{"value":"/ The image ID of an image that was untagged","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68455,"byte_end":68501,"line_start":1908,"line_end":1908,"column_start":5,"column_end":51}},{"value":"serde(rename = \"Untagged\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68506,"byte_end":68535,"line_start":1909,"line_end":1909,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68540,"byte_end":68587,"line_start":1910,"line_end":1910,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4839},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68766,"byte_end":68773,"line_start":1916,"line_end":1916,"column_start":9,"column_end":16},"name":"deleted","qualname":"::models::ImageDeleteResponseItem::deleted","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" The image ID of an image that was deleted\n","sig":null,"attributes":[{"value":"/ The image ID of an image that was deleted","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68627,"byte_end":68672,"line_start":1913,"line_end":1913,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Deleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68677,"byte_end":68705,"line_start":1914,"line_end":1914,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68710,"byte_end":68757,"line_start":1915,"line_end":1915,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4899},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68897,"byte_end":68904,"line_start":1922,"line_end":1922,"column_start":12,"column_end":19},"name":"ImageId","qualname":"::models::ImageId","value":"ImageId { id }","parent":null,"children":[{"krate":0,"index":4900}],"decl_id":null,"docs":" Image ID or Digest\n","sig":null,"attributes":[{"value":"/ Image ID or Digest","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68795,"byte_end":68817,"line_start":1920,"line_end":1920,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4900},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68995,"byte_end":68997,"line_start":1925,"line_end":1925,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ImageId::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68911,"byte_end":68934,"line_start":1923,"line_end":1923,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":68939,"byte_end":68986,"line_start":1924,"line_end":1924,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4958},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69098,"byte_end":69111,"line_start":1930,"line_end":1930,"column_start":12,"column_end":25},"name":"ImageMetadata","qualname":"::models::ImageMetadata","value":"ImageMetadata { last_tag_time }","parent":null,"children":[{"krate":0,"index":4959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4959},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69211,"byte_end":69224,"line_start":1933,"line_end":1933,"column_start":9,"column_end":22},"name":"last_tag_time","qualname":"::models::ImageMetadata::last_tag_time","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":4958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LastTagTime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69118,"byte_end":69150,"line_start":1931,"line_end":1931,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69155,"byte_end":69202,"line_start":1932,"line_end":1932,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5017},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69332,"byte_end":69350,"line_start":1938,"line_end":1938,"column_start":12,"column_end":30},"name":"ImagePruneResponse","qualname":"::models::ImagePruneResponse","value":"ImagePruneResponse { images_deleted, space_reclaimed }","parent":null,"children":[{"krate":0,"index":5018},{"krate":0,"index":5019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5018},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69485,"byte_end":69499,"line_start":1942,"line_end":1942,"column_start":9,"column_end":23},"name":"images_deleted","qualname":"::models::ImagePruneResponse::images_deleted","value":"std::option::Option<std::vec::Vec<models::ImageDeleteResponseItem>>","parent":{"krate":0,"index":5017},"children":[],"decl_id":null,"docs":" Images that were deleted\n","sig":null,"attributes":[{"value":"/ Images that were deleted","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69357,"byte_end":69385,"line_start":1939,"line_end":1939,"column_start":5,"column_end":33}},{"value":"serde(rename = \"ImagesDeleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69390,"byte_end":69424,"line_start":1940,"line_end":1940,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69429,"byte_end":69476,"line_start":1941,"line_end":1941,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5019},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69678,"byte_end":69693,"line_start":1947,"line_end":1947,"column_start":9,"column_end":24},"name":"space_reclaimed","qualname":"::models::ImagePruneResponse::space_reclaimed","value":"std::option::Option<i64>","parent":{"krate":0,"index":5017},"children":[],"decl_id":null,"docs":" Disk space reclaimed in bytes\n","sig":null,"attributes":[{"value":"/ Disk space reclaimed in bytes","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69544,"byte_end":69577,"line_start":1944,"line_end":1944,"column_start":5,"column_end":38}},{"value":"serde(rename = \"SpaceReclaimed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69582,"byte_end":69617,"line_start":1945,"line_end":1945,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69622,"byte_end":69669,"line_start":1946,"line_end":1946,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5079},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69791,"byte_end":69802,"line_start":1952,"line_end":1952,"column_start":12,"column_end":23},"name":"ImageRootFs","qualname":"::models::ImageRootFs","value":"ImageRootFs { typ, layers, base_layer }","parent":null,"children":[{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5080},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69843,"byte_end":69846,"line_start":1954,"line_end":1954,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::ImageRootFs::typ","value":"std::string::String","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69809,"byte_end":69834,"line_start":1953,"line_end":1953,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5081},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69949,"byte_end":69955,"line_start":1958,"line_end":1958,"column_start":9,"column_end":15},"name":"layers","qualname":"::models::ImageRootFs::layers","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Layers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69861,"byte_end":69888,"line_start":1956,"line_end":1956,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69893,"byte_end":69940,"line_start":1957,"line_end":1957,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5082},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70074,"byte_end":70084,"line_start":1962,"line_end":1962,"column_start":9,"column_end":19},"name":"base_layer","qualname":"::models::ImageRootFs::base_layer","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"BaseLayer\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":69983,"byte_end":70013,"line_start":1960,"line_end":1960,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70018,"byte_end":70065,"line_start":1961,"line_end":1961,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5144},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70185,"byte_end":70208,"line_start":1967,"line_end":1967,"column_start":12,"column_end":35},"name":"ImageSearchResponseItem","qualname":"::models::ImageSearchResponseItem","value":"ImageSearchResponseItem { description, is_official, is_automated, name, star_count }","parent":null,"children":[{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5145},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70308,"byte_end":70319,"line_start":1970,"line_end":1970,"column_start":9,"column_end":20},"name":"description","qualname":"::models::ImageSearchResponseItem::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70215,"byte_end":70247,"line_start":1968,"line_end":1968,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70252,"byte_end":70299,"line_start":1969,"line_end":1969,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5146},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70435,"byte_end":70446,"line_start":1974,"line_end":1974,"column_start":9,"column_end":20},"name":"is_official","qualname":"::models::ImageSearchResponseItem::is_official","value":"std::option::Option<bool>","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"is_official\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70342,"byte_end":70374,"line_start":1972,"line_end":1972,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70379,"byte_end":70426,"line_start":1973,"line_end":1973,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5147},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70561,"byte_end":70573,"line_start":1978,"line_end":1978,"column_start":9,"column_end":21},"name":"is_automated","qualname":"::models::ImageSearchResponseItem::is_automated","value":"std::option::Option<bool>","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"is_automated\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70467,"byte_end":70500,"line_start":1976,"line_end":1976,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70505,"byte_end":70552,"line_start":1977,"line_end":1977,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5148},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70680,"byte_end":70684,"line_start":1982,"line_end":1982,"column_start":9,"column_end":13},"name":"name","qualname":"::models::ImageSearchResponseItem::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70594,"byte_end":70619,"line_start":1980,"line_end":1980,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70624,"byte_end":70671,"line_start":1981,"line_end":1981,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5149},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70799,"byte_end":70809,"line_start":1986,"line_end":1986,"column_start":9,"column_end":19},"name":"star_count","qualname":"::models::ImageSearchResponseItem::star_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"star_count\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70707,"byte_end":70738,"line_start":1984,"line_end":1984,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70743,"byte_end":70790,"line_start":1985,"line_end":1985,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70907,"byte_end":70919,"line_start":1991,"line_end":1991,"column_start":12,"column_end":24},"name":"ImageSummary","qualname":"::models::ImageSummary","value":"ImageSummary { id, parent_id, repo_tags, repo_digests, created, size, shared_size, virtual_size, labels, containers }","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5216},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70958,"byte_end":70960,"line_start":1993,"line_end":1993,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ImageSummary::id","value":"std::string::String","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70926,"byte_end":70949,"line_start":1992,"line_end":1992,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5217},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71013,"byte_end":71022,"line_start":1996,"line_end":1996,"column_start":9,"column_end":18},"name":"parent_id","qualname":"::models::ImageSummary::parent_id","value":"std::string::String","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ParentId\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":70975,"byte_end":71004,"line_start":1995,"line_end":1995,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5218},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71138,"byte_end":71147,"line_start":2000,"line_end":2000,"column_start":9,"column_end":18},"name":"repo_tags","qualname":"::models::ImageSummary::repo_tags","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RepoTags\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71037,"byte_end":71066,"line_start":1998,"line_end":1998,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71071,"byte_end":71129,"line_start":1999,"line_end":1999,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5219},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71271,"byte_end":71283,"line_start":2004,"line_end":2004,"column_start":9,"column_end":21},"name":"repo_digests","qualname":"::models::ImageSummary::repo_digests","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RepoDigests\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71167,"byte_end":71199,"line_start":2002,"line_end":2002,"column_start":5,"column_end":37}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71204,"byte_end":71262,"line_start":2003,"line_end":2003,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5220},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71340,"byte_end":71347,"line_start":2007,"line_end":2007,"column_start":9,"column_end":16},"name":"created","qualname":"::models::ImageSummary::created","value":"i64","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71303,"byte_end":71331,"line_start":2006,"line_end":2006,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5221},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71393,"byte_end":71397,"line_start":2010,"line_end":2010,"column_start":9,"column_end":13},"name":"size","qualname":"::models::ImageSummary::size","value":"i64","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71359,"byte_end":71384,"line_start":2009,"line_end":2009,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5222},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71449,"byte_end":71460,"line_start":2013,"line_end":2013,"column_start":9,"column_end":20},"name":"shared_size","qualname":"::models::ImageSummary::shared_size","value":"i64","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"SharedSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71409,"byte_end":71440,"line_start":2012,"line_end":2012,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5223},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71513,"byte_end":71525,"line_start":2016,"line_end":2016,"column_start":9,"column_end":21},"name":"virtual_size","qualname":"::models::ImageSummary::virtual_size","value":"i64","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"VirtualSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71472,"byte_end":71504,"line_start":2015,"line_end":2015,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5224},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71636,"byte_end":71642,"line_start":2020,"line_end":2020,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::ImageSummary::labels","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71537,"byte_end":71564,"line_start":2018,"line_end":2018,"column_start":5,"column_end":32}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_map\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71569,"byte_end":71627,"line_start":2019,"line_end":2019,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5225},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71714,"byte_end":71724,"line_start":2023,"line_end":2023,"column_start":9,"column_end":19},"name":"containers","qualname":"::models::ImageSummary::containers","value":"i64","parent":{"krate":0,"index":5215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Containers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71674,"byte_end":71705,"line_start":2022,"line_end":2022,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5358},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71867,"byte_end":71876,"line_start":2029,"line_end":2029,"column_start":12,"column_end":21},"name":"IndexInfo","qualname":"::models::IndexInfo","value":"IndexInfo { name, mirrors, secure, official }","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362}],"decl_id":null,"docs":" IndexInfo contains information about a registry.\n","sig":null,"attributes":[{"value":"/ IndexInfo contains information about a registry.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71735,"byte_end":71787,"line_start":2027,"line_end":2027,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5359},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72023,"byte_end":72027,"line_start":2033,"line_end":2033,"column_start":9,"column_end":13},"name":"name","qualname":"::models::IndexInfo::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" Name of the registry, such as \\\"docker.io\\\". \n","sig":null,"attributes":[{"value":"/ Name of the registry, such as \\\"docker.io\\\". ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71883,"byte_end":71932,"line_start":2030,"line_end":2030,"column_start":5,"column_end":54}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71937,"byte_end":71962,"line_start":2031,"line_end":2031,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":71967,"byte_end":72014,"line_start":2032,"line_end":2032,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5360},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72184,"byte_end":72191,"line_start":2038,"line_end":2038,"column_start":9,"column_end":16},"name":"mirrors","qualname":"::models::IndexInfo::mirrors","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" List of mirrors, expressed as URIs. \n","sig":null,"attributes":[{"value":"/ List of mirrors, expressed as URIs. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72050,"byte_end":72090,"line_start":2035,"line_end":2035,"column_start":5,"column_end":45}},{"value":"serde(rename = \"Mirrors\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72095,"byte_end":72123,"line_start":2036,"line_end":2036,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72128,"byte_end":72175,"line_start":2037,"line_end":2037,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5361},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72863,"byte_end":72869,"line_start":2043,"line_end":2043,"column_start":9,"column_end":15},"name":"secure","qualname":"::models::IndexInfo::secure","value":"std::option::Option<bool>","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" Indicates if the registry is part of the list of insecure registries.  If `false`, the registry is insecure. Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.  > **Warning**: Insecure registries can be useful when running a local > registry. However, because its use creates security vulnerabilities > it should ONLY be enabled for testing purposes. For increased > security, users should add their CA to their system's list of > trusted CAs instead of enabling this option. \n","sig":null,"attributes":[{"value":"/ Indicates if the registry is part of the list of insecure registries.  If `false`, the registry is insecure. Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.  > **Warning**: Insecure registries can be useful when running a local > registry. However, because its use creates security vulnerabilities > it should ONLY be enabled for testing purposes. For increased > security, users should add their CA to their system's list of > trusted CAs instead of enabling this option. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72219,"byte_end":72770,"line_start":2040,"line_end":2040,"column_start":5,"column_end":556}},{"value":"serde(rename = \"Secure\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72775,"byte_end":72802,"line_start":2041,"line_end":2041,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72807,"byte_end":72854,"line_start":2042,"line_end":2042,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5362},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73067,"byte_end":73075,"line_start":2048,"line_end":2048,"column_start":9,"column_end":17},"name":"official","qualname":"::models::IndexInfo::official","value":"std::option::Option<bool>","parent":{"krate":0,"index":5358},"children":[],"decl_id":null,"docs":" Indicates whether this is an official registry (i.e., Docker Hub / docker.io) \n","sig":null,"attributes":[{"value":"/ Indicates whether this is an official registry (i.e., Docker Hub / docker.io) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72890,"byte_end":72972,"line_start":2045,"line_end":2045,"column_start":5,"column_end":87}},{"value":"serde(rename = \"Official\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":72977,"byte_end":73006,"line_start":2046,"line_end":2046,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73011,"byte_end":73058,"line_start":2047,"line_end":2047,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5426},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73174,"byte_end":73191,"line_start":2053,"line_end":2053,"column_start":12,"column_end":29},"name":"InlineResponse400","qualname":"::models::InlineResponse400","value":"InlineResponse400 { error_response, message }","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5427},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73293,"byte_end":73307,"line_start":2056,"line_end":2056,"column_start":9,"column_end":23},"name":"error_response","qualname":"::models::InlineResponse400::error_response","value":"std::option::Option<models::ErrorResponse>","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ErrorResponse\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73198,"byte_end":73232,"line_start":2054,"line_end":2054,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73237,"byte_end":73284,"line_start":2055,"line_end":2055,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5428},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73599,"byte_end":73606,"line_start":2061,"line_end":2061,"column_start":9,"column_end":16},"name":"message","qualname":"::models::InlineResponse400::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5426},"children":[],"decl_id":null,"docs":" The error message. Either \\\"must specify path parameter\\\" (path cannot be empty) or \\\"not a directory\\\" (path was asserted to be a directory but exists as a file). \n","sig":null,"attributes":[{"value":"/ The error message. Either \\\"must specify path parameter\\\" (path cannot be empty) or \\\"not a directory\\\" (path was asserted to be a directory but exists as a file). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73337,"byte_end":73505,"line_start":2058,"line_end":2058,"column_start":5,"column_end":173}},{"value":"serde(rename = \"message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73510,"byte_end":73538,"line_start":2059,"line_end":2059,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73543,"byte_end":73590,"line_start":2060,"line_end":2060,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5488},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73707,"byte_end":73711,"line_start":2066,"line_end":2066,"column_start":12,"column_end":16},"name":"Ipam","qualname":"::models::Ipam","value":"Ipam { driver, config, options }","parent":null,"children":[{"krate":0,"index":5489},{"krate":0,"index":5490},{"krate":0,"index":5491}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5489},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73846,"byte_end":73852,"line_start":2070,"line_end":2070,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::Ipam::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5488},"children":[],"decl_id":null,"docs":" Name of the IPAM driver to use.\n","sig":null,"attributes":[{"value":"/ Name of the IPAM driver to use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73718,"byte_end":73753,"line_start":2067,"line_end":2067,"column_start":5,"column_end":40}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73758,"byte_end":73785,"line_start":2068,"line_end":2068,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73790,"byte_end":73837,"line_start":2069,"line_end":2069,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5490},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74148,"byte_end":74154,"line_start":2075,"line_end":2075,"column_start":9,"column_end":15},"name":"config","qualname":"::models::Ipam::config","value":"std::option::Option<std::vec::Vec<std::collections::HashMap<std::string::String, std::string::String>>>","parent":{"krate":0,"index":5488},"children":[],"decl_id":null,"docs":" List of IPAM configuration options, specified as a map:  ``` {\\\"Subnet\\\": <CIDR>, \\\"IPRange\\\": <CIDR>, \\\"Gateway\\\": <IP address>, \\\"AuxAddress\\\": <device_name:IP address>} ``` \n","sig":null,"attributes":[{"value":"/ List of IPAM configuration options, specified as a map:  ``` {\\\"Subnet\\\": <CIDR>, \\\"IPRange\\\": <CIDR>, \\\"Gateway\\\": <IP address>, \\\"AuxAddress\\\": <device_name:IP address>} ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":73875,"byte_end":74055,"line_start":2072,"line_end":2072,"column_start":5,"column_end":185}},{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74060,"byte_end":74087,"line_start":2073,"line_end":2073,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74092,"byte_end":74139,"line_start":2074,"line_end":2074,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5491},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74341,"byte_end":74348,"line_start":2080,"line_end":2080,"column_start":9,"column_end":16},"name":"options","qualname":"::models::Ipam::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":5488},"children":[],"decl_id":null,"docs":" Driver-specific options, specified as a map.\n","sig":null,"attributes":[{"value":"/ Driver-specific options, specified as a map.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74199,"byte_end":74247,"line_start":2077,"line_end":2077,"column_start":5,"column_end":53}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74252,"byte_end":74280,"line_start":2078,"line_end":2078,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74285,"byte_end":74332,"line_start":2079,"line_end":2079,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5553},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74547,"byte_end":74557,"line_start":2086,"line_end":2086,"column_start":12,"column_end":22},"name":"JoinTokens","qualname":"::models::JoinTokens","value":"JoinTokens { worker, manager }","parent":null,"children":[{"krate":0,"index":5554},{"krate":0,"index":5555}],"decl_id":null,"docs":" JoinTokens contains the tokens workers and managers need to join the swarm. \n","sig":null,"attributes":[{"value":"/ JoinTokens contains the tokens workers and managers need to join the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74387,"byte_end":74467,"line_start":2084,"line_end":2084,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":5554},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74706,"byte_end":74712,"line_start":2090,"line_end":2090,"column_start":9,"column_end":15},"name":"worker","qualname":"::models::JoinTokens::worker","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5553},"children":[],"decl_id":null,"docs":" The token workers can use to join the swarm. \n","sig":null,"attributes":[{"value":"/ The token workers can use to join the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74564,"byte_end":74613,"line_start":2087,"line_end":2087,"column_start":5,"column_end":54}},{"value":"serde(rename = \"Worker\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74618,"byte_end":74645,"line_start":2088,"line_end":2088,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74650,"byte_end":74697,"line_start":2089,"line_end":2089,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5555},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74879,"byte_end":74886,"line_start":2095,"line_end":2095,"column_start":9,"column_end":16},"name":"manager","qualname":"::models::JoinTokens::manager","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5553},"children":[],"decl_id":null,"docs":" The token managers can use to join the swarm. \n","sig":null,"attributes":[{"value":"/ The token managers can use to join the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74735,"byte_end":74785,"line_start":2092,"line_end":2092,"column_start":5,"column_end":55}},{"value":"serde(rename = \"Manager\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74790,"byte_end":74818,"line_start":2093,"line_end":2093,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74823,"byte_end":74870,"line_start":2094,"line_end":2094,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5616},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75281,"byte_end":75286,"line_start":2108,"line_end":2108,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::LocalNodeState::EMPTY","value":"LocalNodeState::EMPTY","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75255,"byte_end":75276,"line_start":2107,"line_end":2107,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5618},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75326,"byte_end":75334,"line_start":2110,"line_end":2110,"column_start":5,"column_end":13},"name":"INACTIVE","qualname":"::models::LocalNodeState::INACTIVE","value":"LocalNodeState::INACTIVE","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"inactive\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75292,"byte_end":75321,"line_start":2109,"line_end":2109,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5620},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75373,"byte_end":75380,"line_start":2112,"line_end":2112,"column_start":5,"column_end":12},"name":"PENDING","qualname":"::models::LocalNodeState::PENDING","value":"LocalNodeState::PENDING","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"pending\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75340,"byte_end":75368,"line_start":2111,"line_end":2111,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5622},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75418,"byte_end":75424,"line_start":2114,"line_end":2114,"column_start":5,"column_end":11},"name":"ACTIVE","qualname":"::models::LocalNodeState::ACTIVE","value":"LocalNodeState::ACTIVE","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"active\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75386,"byte_end":75413,"line_start":2113,"line_end":2113,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5624},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75461,"byte_end":75466,"line_start":2116,"line_end":2116,"column_start":5,"column_end":10},"name":"ERROR","qualname":"::models::LocalNodeState::ERROR","value":"LocalNodeState::ERROR","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75430,"byte_end":75456,"line_start":2115,"line_end":2115,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75504,"byte_end":75510,"line_start":2118,"line_end":2118,"column_start":5,"column_end":11},"name":"LOCKED","qualname":"::models::LocalNodeState::LOCKED","value":"LocalNodeState::LOCKED","parent":{"krate":0,"index":5615},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"locked\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75472,"byte_end":75499,"line_start":2117,"line_end":2117,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":5615},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75233,"byte_end":75247,"line_start":2106,"line_end":2106,"column_start":10,"column_end":24},"name":"LocalNodeState","qualname":"::models::LocalNodeState","value":"pub enum LocalNodeState {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"inactive\")]\n    INACTIVE,\n\n    #[serde(rename = \"pending\")]\n    PENDING,\n\n    #[serde(rename = \"active\")]\n    ACTIVE,\n\n    #[serde(rename = \"error\")]\n    ERROR,\n\n    #[serde(rename = \"locked\")]\n    LOCKED,\n}","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5618},{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":5626}],"decl_id":null,"docs":" Current local status of this node.\n Enumeration of values.\n Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`\n which helps with FFI.\n","sig":null,"attributes":[{"value":"/ Current local status of this node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74908,"byte_end":74946,"line_start":2099,"line_end":2099,"column_start":1,"column_end":39}},{"value":"/ Enumeration of values.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74947,"byte_end":74973,"line_start":2100,"line_end":2100,"column_start":1,"column_end":27}},{"value":"/ Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":74974,"byte_end":75069,"line_start":2101,"line_end":2101,"column_start":1,"column_end":96}},{"value":"/ which helps with FFI.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75070,"byte_end":75095,"line_start":2102,"line_end":2102,"column_start":1,"column_end":26}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75096,"byte_end":75126,"line_start":2103,"line_end":2103,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75127,"byte_end":75137,"line_start":2104,"line_end":2104,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":5696},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76777,"byte_end":76790,"line_start":2151,"line_end":2151,"column_start":12,"column_end":25},"name":"ManagerStatus","qualname":"::models::ManagerStatus","value":"ManagerStatus { leader, reachability, addr }","parent":null,"children":[{"krate":0,"index":5697},{"krate":0,"index":5698},{"krate":0,"index":5699}],"decl_id":null,"docs":" ManagerStatus represents the status of a manager.  It provides the current status of a node's manager component, if the node is a manager. \n","sig":null,"attributes":[{"value":"/ ManagerStatus represents the status of a manager.  It provides the current status of a node's manager component, if the node is a manager. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76554,"byte_end":76697,"line_start":2149,"line_end":2149,"column_start":1,"column_end":144}}]},{"kind":"Field","id":{"krate":0,"index":5697},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76885,"byte_end":76891,"line_start":2154,"line_end":2154,"column_start":9,"column_end":15},"name":"leader","qualname":"::models::ManagerStatus::leader","value":"std::option::Option<bool>","parent":{"krate":0,"index":5696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Leader\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76797,"byte_end":76824,"line_start":2152,"line_end":2152,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76829,"byte_end":76876,"line_start":2153,"line_end":2153,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5698},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77006,"byte_end":77018,"line_start":2158,"line_end":2158,"column_start":9,"column_end":21},"name":"reachability","qualname":"::models::ManagerStatus::reachability","value":"std::option::Option<models::Reachability>","parent":{"krate":0,"index":5696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Reachability\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76912,"byte_end":76945,"line_start":2156,"line_end":2156,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76950,"byte_end":76997,"line_start":2157,"line_end":2157,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5699},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77201,"byte_end":77205,"line_start":2163,"line_end":2163,"column_start":9,"column_end":13},"name":"addr","qualname":"::models::ManagerStatus::addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5696},"children":[],"decl_id":null,"docs":" The IP address and port at which the manager is reachable. \n","sig":null,"attributes":[{"value":"/ The IP address and port at which the manager is reachable. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77047,"byte_end":77110,"line_start":2160,"line_end":2160,"column_start":5,"column_end":68}},{"value":"serde(rename = \"Addr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77115,"byte_end":77140,"line_start":2161,"line_end":2161,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77145,"byte_end":77192,"line_start":2162,"line_end":2162,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5761},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77306,"byte_end":77311,"line_start":2168,"line_end":2168,"column_start":12,"column_end":17},"name":"Mount","qualname":"::models::Mount","value":"Mount { target, source, typ, read_only, consistency, bind_options, volume_options, tmpfs_options }","parent":null,"children":[{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5762},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77430,"byte_end":77436,"line_start":2172,"line_end":2172,"column_start":9,"column_end":15},"name":"target","qualname":"::models::Mount::target","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Container path.\n","sig":null,"attributes":[{"value":"/ Container path.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77318,"byte_end":77337,"line_start":2169,"line_end":2169,"column_start":5,"column_end":24}},{"value":"serde(rename = \"Target\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77342,"byte_end":77369,"line_start":2170,"line_end":2170,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77374,"byte_end":77421,"line_start":2171,"line_end":2171,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5763},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77603,"byte_end":77609,"line_start":2177,"line_end":2177,"column_start":9,"column_end":15},"name":"source","qualname":"::models::Mount::source","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Mount source (e.g. a volume name, a host path).\n","sig":null,"attributes":[{"value":"/ Mount source (e.g. a volume name, a host path).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77459,"byte_end":77510,"line_start":2174,"line_end":2174,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Source\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77515,"byte_end":77542,"line_start":2175,"line_end":2175,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77547,"byte_end":77594,"line_start":2176,"line_end":2176,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5764},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78261,"byte_end":78264,"line_start":2182,"line_end":2182,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::Mount::typ","value":"std::option::Option<models::MountTypeEnum>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" The mount type. Available types:  - `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container. - `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed. - `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs. - `npipe` Mounts a named pipe from the host into the container. Must exist prior to creating the container. \n","sig":null,"attributes":[{"value":"/ The mount type. Available types:  - `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container. - `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed. - `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs. - `npipe` Mounts a named pipe from the host into the container. Must exist prior to creating the container. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":77632,"byte_end":78170,"line_start":2179,"line_end":2179,"column_start":5,"column_end":543}},{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78175,"byte_end":78200,"line_start":2180,"line_end":2180,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78205,"byte_end":78252,"line_start":2181,"line_end":2181,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5765},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78431,"byte_end":78440,"line_start":2187,"line_end":2187,"column_start":9,"column_end":18},"name":"read_only","qualname":"::models::Mount::read_only","value":"std::option::Option<bool>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" Whether the mount should be read-only.\n","sig":null,"attributes":[{"value":"/ Whether the mount should be read-only.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78294,"byte_end":78336,"line_start":2184,"line_end":2184,"column_start":5,"column_end":47}},{"value":"serde(rename = \"ReadOnly\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78341,"byte_end":78370,"line_start":2185,"line_end":2185,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78375,"byte_end":78422,"line_start":2186,"line_end":2186,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5766},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78656,"byte_end":78667,"line_start":2192,"line_end":2192,"column_start":9,"column_end":20},"name":"consistency","qualname":"::models::Mount::consistency","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":" The consistency requirement for the mount: `default`, `consistent`, `cached`, or `delegated`.\n","sig":null,"attributes":[{"value":"/ The consistency requirement for the mount: `default`, `consistent`, `cached`, or `delegated`.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78461,"byte_end":78558,"line_start":2189,"line_end":2189,"column_start":5,"column_end":102}},{"value":"serde(rename = \"Consistency\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78563,"byte_end":78595,"line_start":2190,"line_end":2190,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78600,"byte_end":78647,"line_start":2191,"line_end":2191,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5767},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78783,"byte_end":78795,"line_start":2196,"line_end":2196,"column_start":9,"column_end":21},"name":"bind_options","qualname":"::models::Mount::bind_options","value":"std::option::Option<models::MountBindOptions>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"BindOptions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78690,"byte_end":78722,"line_start":2194,"line_end":2194,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78727,"byte_end":78774,"line_start":2195,"line_end":2195,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5768},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78923,"byte_end":78937,"line_start":2200,"line_end":2200,"column_start":9,"column_end":23},"name":"volume_options","qualname":"::models::Mount::volume_options","value":"std::option::Option<models::MountVolumeOptions>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"VolumeOptions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78828,"byte_end":78862,"line_start":2198,"line_end":2198,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78867,"byte_end":78914,"line_start":2199,"line_end":2199,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5769},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79066,"byte_end":79079,"line_start":2204,"line_end":2204,"column_start":9,"column_end":22},"name":"tmpfs_options","qualname":"::models::Mount::tmpfs_options","value":"std::option::Option<models::MountTmpfsOptions>","parent":{"krate":0,"index":5761},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TmpfsOptions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":78972,"byte_end":79005,"line_start":2202,"line_end":2202,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79010,"byte_end":79057,"line_start":2203,"line_end":2203,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5842},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79285,"byte_end":79290,"line_start":2212,"line_end":2212,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::MountTypeEnum::EMPTY","value":"MountTypeEnum::EMPTY","parent":{"krate":0,"index":5841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79259,"byte_end":79280,"line_start":2211,"line_end":2211,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5844},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79326,"byte_end":79330,"line_start":2214,"line_end":2214,"column_start":5,"column_end":9},"name":"BIND","qualname":"::models::MountTypeEnum::BIND","value":"MountTypeEnum::BIND","parent":{"krate":0,"index":5841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"bind\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79296,"byte_end":79321,"line_start":2213,"line_end":2213,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5846},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79368,"byte_end":79374,"line_start":2216,"line_end":2216,"column_start":5,"column_end":11},"name":"VOLUME","qualname":"::models::MountTypeEnum::VOLUME","value":"MountTypeEnum::VOLUME","parent":{"krate":0,"index":5841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"volume\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79336,"byte_end":79363,"line_start":2215,"line_end":2215,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5848},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79411,"byte_end":79416,"line_start":2218,"line_end":2218,"column_start":5,"column_end":10},"name":"TMPFS","qualname":"::models::MountTypeEnum::TMPFS","value":"MountTypeEnum::TMPFS","parent":{"krate":0,"index":5841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"tmpfs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79380,"byte_end":79406,"line_start":2217,"line_end":2217,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5850},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79453,"byte_end":79458,"line_start":2220,"line_end":2220,"column_start":5,"column_end":10},"name":"NPIPE","qualname":"::models::MountTypeEnum::NPIPE","value":"MountTypeEnum::NPIPE","parent":{"krate":0,"index":5841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"npipe\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79422,"byte_end":79448,"line_start":2219,"line_end":2219,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":5841},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79238,"byte_end":79251,"line_start":2210,"line_end":2210,"column_start":10,"column_end":23},"name":"MountTypeEnum","qualname":"::models::MountTypeEnum","value":"pub enum MountTypeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"bind\")]\n    BIND,\n\n    #[serde(rename = \"volume\")]\n    VOLUME,\n\n    #[serde(rename = \"tmpfs\")]\n    TMPFS,\n\n    #[serde(rename = \"npipe\")]\n    NPIPE,\n}","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5844},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5850}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79112,"byte_end":79142,"line_start":2208,"line_end":2208,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5918},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80853,"byte_end":80869,"line_start":2264,"line_end":2264,"column_start":12,"column_end":28},"name":"MountBindOptions","qualname":"::models::MountBindOptions","value":"MountBindOptions { propagation, non_recursive }","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920}],"decl_id":null,"docs":" Optional configuration for the `bind` type.\n","sig":null,"attributes":[{"value":"/ Optional configuration for the `bind` type.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80726,"byte_end":80773,"line_start":2262,"line_end":2262,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5919},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81053,"byte_end":81064,"line_start":2268,"line_end":2268,"column_start":9,"column_end":20},"name":"propagation","qualname":"::models::MountBindOptions::propagation","value":"std::option::Option<models::MountBindOptionsPropagationEnum>","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":" A propagation mode with the value `[r]private`, `[r]shared`, or `[r]slave`.\n","sig":null,"attributes":[{"value":"/ A propagation mode with the value `[r]private`, `[r]shared`, or `[r]slave`.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80876,"byte_end":80955,"line_start":2265,"line_end":2265,"column_start":5,"column_end":84}},{"value":"serde(rename = \"Propagation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80960,"byte_end":80992,"line_start":2266,"line_end":2266,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80997,"byte_end":81044,"line_start":2267,"line_end":2267,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5920},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81244,"byte_end":81257,"line_start":2273,"line_end":2273,"column_start":9,"column_end":22},"name":"non_recursive","qualname":"::models::MountBindOptions::non_recursive","value":"std::option::Option<bool>","parent":{"krate":0,"index":5918},"children":[],"decl_id":null,"docs":" Disable recursive bind mount.\n","sig":null,"attributes":[{"value":"/ Disable recursive bind mount.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81112,"byte_end":81145,"line_start":2270,"line_end":2270,"column_start":5,"column_end":38}},{"value":"serde(rename = \"NonRecursive\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81150,"byte_end":81183,"line_start":2271,"line_end":2271,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81188,"byte_end":81235,"line_start":2272,"line_end":2272,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5981},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81468,"byte_end":81473,"line_start":2281,"line_end":2281,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::MountBindOptionsPropagationEnum::EMPTY","value":"MountBindOptionsPropagationEnum::EMPTY","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81442,"byte_end":81463,"line_start":2280,"line_end":2280,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5983},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81512,"byte_end":81519,"line_start":2283,"line_end":2283,"column_start":5,"column_end":12},"name":"PRIVATE","qualname":"::models::MountBindOptionsPropagationEnum::PRIVATE","value":"MountBindOptionsPropagationEnum::PRIVATE","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"private\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81479,"byte_end":81507,"line_start":2282,"line_end":2282,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5985},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81559,"byte_end":81567,"line_start":2285,"line_end":2285,"column_start":5,"column_end":13},"name":"RPRIVATE","qualname":"::models::MountBindOptionsPropagationEnum::RPRIVATE","value":"MountBindOptionsPropagationEnum::RPRIVATE","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rprivate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81525,"byte_end":81554,"line_start":2284,"line_end":2284,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5987},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81605,"byte_end":81611,"line_start":2287,"line_end":2287,"column_start":5,"column_end":11},"name":"SHARED","qualname":"::models::MountBindOptionsPropagationEnum::SHARED","value":"MountBindOptionsPropagationEnum::SHARED","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"shared\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81573,"byte_end":81600,"line_start":2286,"line_end":2286,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5989},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81650,"byte_end":81657,"line_start":2289,"line_end":2289,"column_start":5,"column_end":12},"name":"RSHARED","qualname":"::models::MountBindOptionsPropagationEnum::RSHARED","value":"MountBindOptionsPropagationEnum::RSHARED","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rshared\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81617,"byte_end":81645,"line_start":2288,"line_end":2288,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5991},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81694,"byte_end":81699,"line_start":2291,"line_end":2291,"column_start":5,"column_end":10},"name":"SLAVE","qualname":"::models::MountBindOptionsPropagationEnum::SLAVE","value":"MountBindOptionsPropagationEnum::SLAVE","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"slave\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81663,"byte_end":81689,"line_start":2290,"line_end":2290,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5993},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81737,"byte_end":81743,"line_start":2293,"line_end":2293,"column_start":5,"column_end":11},"name":"RSLAVE","qualname":"::models::MountBindOptionsPropagationEnum::RSLAVE","value":"MountBindOptionsPropagationEnum::RSLAVE","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rslave\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81705,"byte_end":81732,"line_start":2292,"line_end":2292,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":5980},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81403,"byte_end":81434,"line_start":2279,"line_end":2279,"column_start":10,"column_end":41},"name":"MountBindOptionsPropagationEnum","qualname":"::models::MountBindOptionsPropagationEnum","value":"pub enum MountBindOptionsPropagationEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"private\")]\n    PRIVATE,\n\n    #[serde(rename = \"rprivate\")]\n    RPRIVATE,\n\n    #[serde(rename = \"shared\")]\n    SHARED,\n\n    #[serde(rename = \"rshared\")]\n    RSHARED,\n\n    #[serde(rename = \"slave\")]\n    SLAVE,\n\n    #[serde(rename = \"rslave\")]\n    RSLAVE,\n}","parent":null,"children":[{"krate":0,"index":5981},{"krate":0,"index":5983},{"krate":0,"index":5985},{"krate":0,"index":5987},{"krate":0,"index":5989},{"krate":0,"index":5991},{"krate":0,"index":5993}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81277,"byte_end":81307,"line_start":2277,"line_end":2277,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6065},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83925,"byte_end":83935,"line_start":2343,"line_end":2343,"column_start":12,"column_end":22},"name":"MountPoint","qualname":"::models::MountPoint","value":"MountPoint { typ, name, source, destination, driver, mode, rw, propagation }","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073}],"decl_id":null,"docs":" A mount point inside a container\n","sig":null,"attributes":[{"value":"/ A mount point inside a container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83809,"byte_end":83845,"line_start":2341,"line_end":2341,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6066},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84028,"byte_end":84031,"line_start":2346,"line_end":2346,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::MountPoint::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83942,"byte_end":83967,"line_start":2344,"line_end":2344,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83972,"byte_end":84019,"line_start":2345,"line_end":2345,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6067},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84140,"byte_end":84144,"line_start":2350,"line_end":2350,"column_start":9,"column_end":13},"name":"name","qualname":"::models::MountPoint::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84054,"byte_end":84079,"line_start":2348,"line_end":2348,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84084,"byte_end":84131,"line_start":2349,"line_end":2349,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6068},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84255,"byte_end":84261,"line_start":2354,"line_end":2354,"column_start":9,"column_end":15},"name":"source","qualname":"::models::MountPoint::source","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Source\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84167,"byte_end":84194,"line_start":2352,"line_end":2352,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84199,"byte_end":84246,"line_start":2353,"line_end":2353,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6069},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84377,"byte_end":84388,"line_start":2358,"line_end":2358,"column_start":9,"column_end":20},"name":"destination","qualname":"::models::MountPoint::destination","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Destination\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84284,"byte_end":84316,"line_start":2356,"line_end":2356,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84321,"byte_end":84368,"line_start":2357,"line_end":2357,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6070},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84499,"byte_end":84505,"line_start":2362,"line_end":2362,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::MountPoint::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84411,"byte_end":84438,"line_start":2360,"line_end":2360,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84443,"byte_end":84490,"line_start":2361,"line_end":2361,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6071},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84614,"byte_end":84618,"line_start":2366,"line_end":2366,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::MountPoint::mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84528,"byte_end":84553,"line_start":2364,"line_end":2364,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84558,"byte_end":84605,"line_start":2365,"line_end":2365,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6072},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84725,"byte_end":84727,"line_start":2370,"line_end":2370,"column_start":9,"column_end":11},"name":"rw","qualname":"::models::MountPoint::rw","value":"std::option::Option<bool>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RW\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84641,"byte_end":84664,"line_start":2368,"line_end":2368,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84669,"byte_end":84716,"line_start":2369,"line_end":2369,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6073},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84841,"byte_end":84852,"line_start":2374,"line_end":2374,"column_start":9,"column_end":20},"name":"propagation","qualname":"::models::MountPoint::propagation","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Propagation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84748,"byte_end":84780,"line_start":2372,"line_end":2372,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84785,"byte_end":84832,"line_start":2373,"line_end":2373,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6145},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85002,"byte_end":85019,"line_start":2380,"line_end":2380,"column_start":12,"column_end":29},"name":"MountTmpfsOptions","qualname":"::models::MountTmpfsOptions","value":"MountTmpfsOptions { size_bytes, mode }","parent":null,"children":[{"krate":0,"index":6146},{"krate":0,"index":6147}],"decl_id":null,"docs":" Optional configuration for the `tmpfs` type.\n","sig":null,"attributes":[{"value":"/ Optional configuration for the `tmpfs` type.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":84874,"byte_end":84922,"line_start":2378,"line_end":2378,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6146},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85164,"byte_end":85174,"line_start":2384,"line_end":2384,"column_start":9,"column_end":19},"name":"size_bytes","qualname":"::models::MountTmpfsOptions::size_bytes","value":"std::option::Option<i64>","parent":{"krate":0,"index":6145},"children":[],"decl_id":null,"docs":" The size for the tmpfs mount in bytes.\n","sig":null,"attributes":[{"value":"/ The size for the tmpfs mount in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85026,"byte_end":85068,"line_start":2381,"line_end":2381,"column_start":5,"column_end":47}},{"value":"serde(rename = \"SizeBytes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85073,"byte_end":85103,"line_start":2382,"line_end":2382,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85108,"byte_end":85155,"line_start":2383,"line_end":2383,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6147},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85343,"byte_end":85347,"line_start":2389,"line_end":2389,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::MountTmpfsOptions::mode","value":"std::option::Option<i64>","parent":{"krate":0,"index":6145},"children":[],"decl_id":null,"docs":" The permission mode for the tmpfs mount in an integer.\n","sig":null,"attributes":[{"value":"/ The permission mode for the tmpfs mount in an integer.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85194,"byte_end":85252,"line_start":2386,"line_end":2386,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85257,"byte_end":85282,"line_start":2387,"line_end":2387,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85287,"byte_end":85334,"line_start":2388,"line_end":2388,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6207},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85495,"byte_end":85513,"line_start":2395,"line_end":2395,"column_start":12,"column_end":30},"name":"MountVolumeOptions","qualname":"::models::MountVolumeOptions","value":"MountVolumeOptions { no_copy, labels, driver_config }","parent":null,"children":[{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210}],"decl_id":null,"docs":" Optional configuration for the `volume` type.\n","sig":null,"attributes":[{"value":"/ Optional configuration for the `volume` type.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85366,"byte_end":85415,"line_start":2393,"line_end":2393,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":6208},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85659,"byte_end":85666,"line_start":2399,"line_end":2399,"column_start":9,"column_end":16},"name":"no_copy","qualname":"::models::MountVolumeOptions::no_copy","value":"std::option::Option<bool>","parent":{"krate":0,"index":6207},"children":[],"decl_id":null,"docs":" Populate volume with data from the target.\n","sig":null,"attributes":[{"value":"/ Populate volume with data from the target.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85520,"byte_end":85566,"line_start":2396,"line_end":2396,"column_start":5,"column_end":51}},{"value":"serde(rename = \"NoCopy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85571,"byte_end":85598,"line_start":2397,"line_end":2397,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85603,"byte_end":85650,"line_start":2398,"line_end":2398,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6209},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85816,"byte_end":85822,"line_start":2404,"line_end":2404,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::MountVolumeOptions::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6207},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85687,"byte_end":85723,"line_start":2401,"line_end":2401,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85728,"byte_end":85755,"line_start":2402,"line_end":2402,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85760,"byte_end":85807,"line_start":2403,"line_end":2403,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6210},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85956,"byte_end":85969,"line_start":2408,"line_end":2408,"column_start":9,"column_end":22},"name":"driver_config","qualname":"::models::MountVolumeOptions::driver_config","value":"std::option::Option<models::MountVolumeOptionsDriverConfig>","parent":{"krate":0,"index":6207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DriverConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85862,"byte_end":85895,"line_start":2406,"line_end":2406,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":85900,"byte_end":85947,"line_start":2407,"line_end":2407,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6272},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86129,"byte_end":86159,"line_start":2414,"line_end":2414,"column_start":12,"column_end":42},"name":"MountVolumeOptionsDriverConfig","qualname":"::models::MountVolumeOptionsDriverConfig","value":"MountVolumeOptionsDriverConfig { name, options }","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274}],"decl_id":null,"docs":" Map of driver specific options\n","sig":null,"attributes":[{"value":"/ Map of driver specific options","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86015,"byte_end":86049,"line_start":2412,"line_end":2412,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":6273},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86308,"byte_end":86312,"line_start":2418,"line_end":2418,"column_start":9,"column_end":13},"name":"name","qualname":"::models::MountVolumeOptionsDriverConfig::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6272},"children":[],"decl_id":null,"docs":" Name of the driver to use to create the volume.\n","sig":null,"attributes":[{"value":"/ Name of the driver to use to create the volume.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86166,"byte_end":86217,"line_start":2415,"line_end":2415,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86222,"byte_end":86247,"line_start":2416,"line_end":2416,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86252,"byte_end":86299,"line_start":2417,"line_end":2417,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6274},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86474,"byte_end":86481,"line_start":2423,"line_end":2423,"column_start":9,"column_end":16},"name":"options","qualname":"::models::MountVolumeOptionsDriverConfig::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6272},"children":[],"decl_id":null,"docs":" key/value map of driver specific options.\n","sig":null,"attributes":[{"value":"/ key/value map of driver specific options.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86335,"byte_end":86380,"line_start":2420,"line_end":2420,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86385,"byte_end":86413,"line_start":2421,"line_end":2421,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86418,"byte_end":86465,"line_start":2422,"line_end":2422,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6334},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86599,"byte_end":86606,"line_start":2428,"line_end":2428,"column_start":12,"column_end":19},"name":"Network","qualname":"::models::Network","value":"Network { name, id, created, scope, driver, enable_ipv6, ipam, internal, attachable, ingress, containers, options, labels }","parent":null,"children":[{"krate":0,"index":6335},{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6335},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86699,"byte_end":86703,"line_start":2431,"line_end":2431,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Network::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86613,"byte_end":86638,"line_start":2429,"line_end":2429,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86643,"byte_end":86690,"line_start":2430,"line_end":2430,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6336},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86810,"byte_end":86812,"line_start":2435,"line_end":2435,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Network::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86726,"byte_end":86749,"line_start":2433,"line_end":2433,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86754,"byte_end":86801,"line_start":2434,"line_end":2434,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6337},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86924,"byte_end":86931,"line_start":2439,"line_end":2439,"column_start":9,"column_end":16},"name":"created","qualname":"::models::Network::created","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Created\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86835,"byte_end":86863,"line_start":2437,"line_end":2437,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86868,"byte_end":86915,"line_start":2438,"line_end":2438,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6338},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87048,"byte_end":87053,"line_start":2443,"line_end":2443,"column_start":9,"column_end":14},"name":"scope","qualname":"::models::Network::scope","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Scope\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86961,"byte_end":86987,"line_start":2441,"line_end":2441,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":86992,"byte_end":87039,"line_start":2442,"line_end":2442,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6339},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87164,"byte_end":87170,"line_start":2447,"line_end":2447,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::Network::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87076,"byte_end":87103,"line_start":2445,"line_end":2445,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87108,"byte_end":87155,"line_start":2446,"line_end":2446,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6340},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87285,"byte_end":87296,"line_start":2451,"line_end":2451,"column_start":9,"column_end":20},"name":"enable_ipv6","qualname":"::models::Network::enable_ipv6","value":"std::option::Option<bool>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EnableIPv6\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87193,"byte_end":87224,"line_start":2449,"line_end":2449,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87229,"byte_end":87276,"line_start":2450,"line_end":2450,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6341},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87403,"byte_end":87407,"line_start":2455,"line_end":2455,"column_start":9,"column_end":13},"name":"ipam","qualname":"::models::Network::ipam","value":"std::option::Option<models::Ipam>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPAM\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87317,"byte_end":87342,"line_start":2453,"line_end":2453,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87347,"byte_end":87394,"line_start":2454,"line_end":2454,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6342},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87518,"byte_end":87526,"line_start":2459,"line_end":2459,"column_start":9,"column_end":17},"name":"internal","qualname":"::models::Network::internal","value":"std::option::Option<bool>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Internal\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87428,"byte_end":87457,"line_start":2457,"line_end":2457,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87462,"byte_end":87509,"line_start":2458,"line_end":2458,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6343},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87639,"byte_end":87649,"line_start":2463,"line_end":2463,"column_start":9,"column_end":19},"name":"attachable","qualname":"::models::Network::attachable","value":"std::option::Option<bool>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Attachable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87547,"byte_end":87578,"line_start":2461,"line_end":2461,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87583,"byte_end":87630,"line_start":2462,"line_end":2462,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6344},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87759,"byte_end":87766,"line_start":2467,"line_end":2467,"column_start":9,"column_end":16},"name":"ingress","qualname":"::models::Network::ingress","value":"std::option::Option<bool>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Ingress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87670,"byte_end":87698,"line_start":2465,"line_end":2465,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87703,"byte_end":87750,"line_start":2466,"line_end":2466,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6345},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87879,"byte_end":87889,"line_start":2471,"line_end":2471,"column_start":9,"column_end":19},"name":"containers","qualname":"::models::Network::containers","value":"std::option::Option<std::collections::HashMap<std::string::String, models::NetworkContainer>>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Containers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87787,"byte_end":87818,"line_start":2469,"line_end":2469,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87823,"byte_end":87870,"line_start":2470,"line_end":2470,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6346},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88028,"byte_end":88035,"line_start":2475,"line_end":2475,"column_start":9,"column_end":16},"name":"options","qualname":"::models::Network::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87939,"byte_end":87967,"line_start":2473,"line_end":2473,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":87972,"byte_end":88019,"line_start":2474,"line_end":2474,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6347},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88163,"byte_end":88169,"line_start":2479,"line_end":2479,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::Network::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88075,"byte_end":88102,"line_start":2477,"line_end":2477,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88107,"byte_end":88154,"line_start":2478,"line_end":2478,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6429},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88360,"byte_end":88383,"line_start":2485,"line_end":2485,"column_start":12,"column_end":35},"name":"NetworkAttachmentConfig","qualname":"::models::NetworkAttachmentConfig","value":"NetworkAttachmentConfig { target, aliases, driver_opts }","parent":null,"children":[{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432}],"decl_id":null,"docs":" Specifies how a service should be attached to a particular network. \n","sig":null,"attributes":[{"value":"/ Specifies how a service should be attached to a particular network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88208,"byte_end":88280,"line_start":2483,"line_end":2483,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":6430},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88552,"byte_end":88558,"line_start":2489,"line_end":2489,"column_start":9,"column_end":15},"name":"target","qualname":"::models::NetworkAttachmentConfig::target","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6429},"children":[],"decl_id":null,"docs":" The target network for attachment. Must be a network name or ID. \n","sig":null,"attributes":[{"value":"/ The target network for attachment. Must be a network name or ID. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88390,"byte_end":88459,"line_start":2486,"line_end":2486,"column_start":5,"column_end":74}},{"value":"serde(rename = \"Target\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88464,"byte_end":88491,"line_start":2487,"line_end":2487,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88496,"byte_end":88543,"line_start":2488,"line_end":2488,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6431},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88741,"byte_end":88748,"line_start":2494,"line_end":2494,"column_start":9,"column_end":16},"name":"aliases","qualname":"::models::NetworkAttachmentConfig::aliases","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":6429},"children":[],"decl_id":null,"docs":" Discoverable alternate names for the service on this network. \n","sig":null,"attributes":[{"value":"/ Discoverable alternate names for the service on this network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88581,"byte_end":88647,"line_start":2491,"line_end":2491,"column_start":5,"column_end":71}},{"value":"serde(rename = \"Aliases\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88652,"byte_end":88680,"line_start":2492,"line_end":2492,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88685,"byte_end":88732,"line_start":2493,"line_end":2493,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6432},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88927,"byte_end":88938,"line_start":2499,"line_end":2499,"column_start":9,"column_end":20},"name":"driver_opts","qualname":"::models::NetworkAttachmentConfig::driver_opts","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6429},"children":[],"decl_id":null,"docs":" Driver attachment options for the network target. \n","sig":null,"attributes":[{"value":"/ Driver attachment options for the network target. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88776,"byte_end":88830,"line_start":2496,"line_end":2496,"column_start":5,"column_end":59}},{"value":"serde(rename = \"DriverOpts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88835,"byte_end":88866,"line_start":2497,"line_end":2497,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":88871,"byte_end":88918,"line_start":2498,"line_end":2498,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6494},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89056,"byte_end":89069,"line_start":2504,"line_end":2504,"column_start":12,"column_end":25},"name":"NetworkConfig","qualname":"::models::NetworkConfig","value":"NetworkConfig { name, check_duplicate, driver, internal, attachable, ingress, ipam, enable_ipv6, options, labels }","parent":null,"children":[{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6503},{"krate":0,"index":6504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6495},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89138,"byte_end":89142,"line_start":2507,"line_end":2507,"column_start":9,"column_end":13},"name":"name","qualname":"::models::NetworkConfig::name","value":"std::string::String","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" The network's name.\n","sig":null,"attributes":[{"value":"/ The network's name.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89076,"byte_end":89099,"line_start":2505,"line_end":2505,"column_start":5,"column_end":28}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89104,"byte_end":89129,"line_start":2506,"line_end":2506,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":6496},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89688,"byte_end":89703,"line_start":2512,"line_end":2512,"column_start":9,"column_end":24},"name":"check_duplicate","qualname":"::models::NetworkConfig::check_duplicate","value":"std::option::Option<bool>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Check for networks with duplicate names. Since Network is primarily keyed based on a random ID and not on the name, and network name is strictly a user-friendly alias to the network which is uniquely identified using ID, there is no guaranteed way to check for duplicates. CheckDuplicate is there to provide a best effort checking of any networks which has the same name but it is not guaranteed to catch all name collisions. \n","sig":null,"attributes":[{"value":"/ Check for networks with duplicate names. Since Network is primarily keyed based on a random ID and not on the name, and network name is strictly a user-friendly alias to the network which is uniquely identified using ID, there is no guaranteed way to check for duplicates. CheckDuplicate is there to provide a best effort checking of any networks which has the same name but it is not guaranteed to catch all name collisions. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89157,"byte_end":89587,"line_start":2509,"line_end":2509,"column_start":5,"column_end":435}},{"value":"serde(rename = \"CheckDuplicate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89592,"byte_end":89627,"line_start":2510,"line_end":2510,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89632,"byte_end":89679,"line_start":2511,"line_end":2511,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6497},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89862,"byte_end":89868,"line_start":2517,"line_end":2517,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::NetworkConfig::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Name of the network driver plugin to use.\n","sig":null,"attributes":[{"value":"/ Name of the network driver plugin to use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89724,"byte_end":89769,"line_start":2514,"line_end":2514,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89774,"byte_end":89801,"line_start":2515,"line_end":2515,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89806,"byte_end":89853,"line_start":2516,"line_end":2516,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6498},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90030,"byte_end":90038,"line_start":2522,"line_end":2522,"column_start":9,"column_end":17},"name":"internal","qualname":"::models::NetworkConfig::internal","value":"std::option::Option<bool>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Restrict external access to the network.\n","sig":null,"attributes":[{"value":"/ Restrict external access to the network.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89891,"byte_end":89935,"line_start":2519,"line_end":2519,"column_start":5,"column_end":49}},{"value":"serde(rename = \"Internal\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89940,"byte_end":89969,"line_start":2520,"line_end":2520,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":89974,"byte_end":90021,"line_start":2521,"line_end":2521,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6499},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90257,"byte_end":90267,"line_start":2527,"line_end":2527,"column_start":9,"column_end":19},"name":"attachable","qualname":"::models::NetworkConfig::attachable","value":"std::option::Option<bool>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Globally scoped network is manually attachable by regular containers from workers in swarm mode. \n","sig":null,"attributes":[{"value":"/ Globally scoped network is manually attachable by regular containers from workers in swarm mode. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90059,"byte_end":90160,"line_start":2524,"line_end":2524,"column_start":5,"column_end":106}},{"value":"serde(rename = \"Attachable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90165,"byte_end":90196,"line_start":2525,"line_end":2525,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90201,"byte_end":90248,"line_start":2526,"line_end":2526,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6500},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90464,"byte_end":90471,"line_start":2532,"line_end":2532,"column_start":9,"column_end":16},"name":"ingress","qualname":"::models::NetworkConfig::ingress","value":"std::option::Option<bool>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Ingress network is the network which provides the routing-mesh in swarm mode. \n","sig":null,"attributes":[{"value":"/ Ingress network is the network which provides the routing-mesh in swarm mode. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90288,"byte_end":90370,"line_start":2529,"line_end":2529,"column_start":5,"column_end":87}},{"value":"serde(rename = \"Ingress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90375,"byte_end":90403,"line_start":2530,"line_end":2530,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90408,"byte_end":90455,"line_start":2531,"line_end":2531,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6501},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90629,"byte_end":90633,"line_start":2537,"line_end":2537,"column_start":9,"column_end":13},"name":"ipam","qualname":"::models::NetworkConfig::ipam","value":"std::option::Option<models::Ipam>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Optional custom IP scheme for the network.\n","sig":null,"attributes":[{"value":"/ Optional custom IP scheme for the network.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90492,"byte_end":90538,"line_start":2534,"line_end":2534,"column_start":5,"column_end":51}},{"value":"serde(rename = \"IPAM\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90543,"byte_end":90568,"line_start":2535,"line_end":2535,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90573,"byte_end":90620,"line_start":2536,"line_end":2536,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6502},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90782,"byte_end":90793,"line_start":2542,"line_end":2542,"column_start":9,"column_end":20},"name":"enable_ipv6","qualname":"::models::NetworkConfig::enable_ipv6","value":"std::option::Option<bool>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Enable IPv6 on the network.\n","sig":null,"attributes":[{"value":"/ Enable IPv6 on the network.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90654,"byte_end":90685,"line_start":2539,"line_end":2539,"column_start":5,"column_end":36}},{"value":"serde(rename = \"EnableIPv6\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90690,"byte_end":90721,"line_start":2540,"line_end":2540,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90726,"byte_end":90773,"line_start":2541,"line_end":2541,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6503},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90963,"byte_end":90970,"line_start":2547,"line_end":2547,"column_start":9,"column_end":16},"name":"options","qualname":"::models::NetworkConfig::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" Network specific options to be used by the drivers.\n","sig":null,"attributes":[{"value":"/ Network specific options to be used by the drivers.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90814,"byte_end":90869,"line_start":2544,"line_end":2544,"column_start":5,"column_end":60}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90874,"byte_end":90902,"line_start":2545,"line_end":2545,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":90907,"byte_end":90954,"line_start":2546,"line_end":2546,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6504},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91139,"byte_end":91145,"line_start":2552,"line_end":2552,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::NetworkConfig::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":6494},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91010,"byte_end":91046,"line_start":2549,"line_end":2549,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91051,"byte_end":91078,"line_start":2550,"line_end":2550,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91083,"byte_end":91130,"line_start":2551,"line_end":2551,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6580},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91263,"byte_end":91279,"line_start":2557,"line_end":2557,"column_start":12,"column_end":28},"name":"NetworkContainer","qualname":"::models::NetworkContainer","value":"NetworkContainer { name, endpoint_id, mac_address, ipv4_address, ipv6_address }","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6583},{"krate":0,"index":6584},{"krate":0,"index":6585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6581},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91372,"byte_end":91376,"line_start":2560,"line_end":2560,"column_start":9,"column_end":13},"name":"name","qualname":"::models::NetworkContainer::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91286,"byte_end":91311,"line_start":2558,"line_end":2558,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91316,"byte_end":91363,"line_start":2559,"line_end":2559,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6582},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91491,"byte_end":91502,"line_start":2564,"line_end":2564,"column_start":9,"column_end":20},"name":"endpoint_id","qualname":"::models::NetworkContainer::endpoint_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EndpointID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91399,"byte_end":91430,"line_start":2562,"line_end":2562,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91435,"byte_end":91482,"line_start":2563,"line_end":2563,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6583},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91617,"byte_end":91628,"line_start":2568,"line_end":2568,"column_start":9,"column_end":20},"name":"mac_address","qualname":"::models::NetworkContainer::mac_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"MacAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91525,"byte_end":91556,"line_start":2566,"line_end":2566,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91561,"byte_end":91608,"line_start":2567,"line_end":2567,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6584},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91744,"byte_end":91756,"line_start":2572,"line_end":2572,"column_start":9,"column_end":21},"name":"ipv4_address","qualname":"::models::NetworkContainer::ipv4_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPv4Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91651,"byte_end":91683,"line_start":2570,"line_end":2570,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91688,"byte_end":91735,"line_start":2571,"line_end":2571,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6585},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91872,"byte_end":91884,"line_start":2576,"line_end":2576,"column_start":9,"column_end":21},"name":"ipv6_address","qualname":"::models::NetworkContainer::ipv6_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6580},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IPv6Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91779,"byte_end":91811,"line_start":2574,"line_end":2574,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91816,"byte_end":91863,"line_start":2575,"line_end":2575,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6651},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":91985,"byte_end":92006,"line_start":2581,"line_end":2581,"column_start":12,"column_end":33},"name":"NetworkCreateResponse","qualname":"::models::NetworkCreateResponse","value":"NetworkCreateResponse { id, warning }","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6652},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92136,"byte_end":92138,"line_start":2585,"line_end":2585,"column_start":9,"column_end":11},"name":"id","qualname":"::models::NetworkCreateResponse::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6651},"children":[],"decl_id":null,"docs":" The ID of the created network.\n","sig":null,"attributes":[{"value":"/ The ID of the created network.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92013,"byte_end":92047,"line_start":2582,"line_end":2582,"column_start":5,"column_end":39}},{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92052,"byte_end":92075,"line_start":2583,"line_end":2583,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92080,"byte_end":92127,"line_start":2584,"line_end":2584,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6653},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92250,"byte_end":92257,"line_start":2589,"line_end":2589,"column_start":9,"column_end":16},"name":"warning","qualname":"::models::NetworkCreateResponse::warning","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6651},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Warning\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92161,"byte_end":92189,"line_start":2587,"line_end":2587,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92194,"byte_end":92241,"line_start":2588,"line_end":2588,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92358,"byte_end":92378,"line_start":2594,"line_end":2594,"column_start":12,"column_end":32},"name":"NetworkPruneResponse","qualname":"::models::NetworkPruneResponse","value":"NetworkPruneResponse { networks_deleted }","parent":null,"children":[{"krate":0,"index":6714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6714},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92517,"byte_end":92533,"line_start":2598,"line_end":2598,"column_start":9,"column_end":25},"name":"networks_deleted","qualname":"::models::NetworkPruneResponse::networks_deleted","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":6713},"children":[],"decl_id":null,"docs":" Networks that were deleted\n","sig":null,"attributes":[{"value":"/ Networks that were deleted","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92385,"byte_end":92415,"line_start":2595,"line_end":2595,"column_start":5,"column_end":35}},{"value":"serde(rename = \"NetworksDeleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92420,"byte_end":92456,"line_start":2596,"line_end":2596,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92461,"byte_end":92508,"line_start":2597,"line_end":2597,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6772},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92699,"byte_end":92714,"line_start":2604,"line_end":2604,"column_start":12,"column_end":27},"name":"NetworkSettings","qualname":"::models::NetworkSettings","value":"NetworkSettings { bridge, sandbox_id, hairpin_mode, link_local_ipv6_address, link_local_ipv6_prefix_len, ports, sandbox_key, secondary_ip_addresses, secondary_ipv6_addresses, endpoint_id, gateway, global_ipv6_address, global_ipv6_prefix_len, ip_address, ip_prefix_len, ipv6_gateway, mac_address, networks }","parent":null,"children":[{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6780},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790}],"decl_id":null,"docs":" NetworkSettings exposes the network settings in the API\n","sig":null,"attributes":[{"value":"/ NetworkSettings exposes the network settings in the API","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92560,"byte_end":92619,"line_start":2602,"line_end":2602,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6773},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92872,"byte_end":92878,"line_start":2608,"line_end":2608,"column_start":9,"column_end":15},"name":"bridge","qualname":"::models::NetworkSettings::bridge","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Name of the network'a bridge (for example, `docker0`).\n","sig":null,"attributes":[{"value":"/ Name of the network'a bridge (for example, `docker0`).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92721,"byte_end":92779,"line_start":2605,"line_end":2605,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Bridge\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92784,"byte_end":92811,"line_start":2606,"line_end":2606,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92816,"byte_end":92863,"line_start":2607,"line_end":2607,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6774},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93059,"byte_end":93069,"line_start":2613,"line_end":2613,"column_start":9,"column_end":19},"name":"sandbox_id","qualname":"::models::NetworkSettings::sandbox_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" SandboxID uniquely represents a container's network stack.\n","sig":null,"attributes":[{"value":"/ SandboxID uniquely represents a container's network stack.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92901,"byte_end":92963,"line_start":2610,"line_end":2610,"column_start":5,"column_end":67}},{"value":"serde(rename = \"SandboxID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":92968,"byte_end":92998,"line_start":2611,"line_end":2611,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93003,"byte_end":93050,"line_start":2612,"line_end":2612,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6775},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93263,"byte_end":93275,"line_start":2618,"line_end":2618,"column_start":9,"column_end":21},"name":"hairpin_mode","qualname":"::models::NetworkSettings::hairpin_mode","value":"std::option::Option<bool>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Indicates if hairpin NAT should be enabled on the virtual interface. \n","sig":null,"attributes":[{"value":"/ Indicates if hairpin NAT should be enabled on the virtual interface. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93092,"byte_end":93165,"line_start":2615,"line_end":2615,"column_start":5,"column_end":78}},{"value":"serde(rename = \"HairpinMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93170,"byte_end":93202,"line_start":2616,"line_end":2616,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93207,"byte_end":93254,"line_start":2617,"line_end":2617,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6776},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93456,"byte_end":93479,"line_start":2623,"line_end":2623,"column_start":9,"column_end":32},"name":"link_local_ipv6_address","qualname":"::models::NetworkSettings::link_local_ipv6_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" IPv6 unicast address using the link-local prefix.\n","sig":null,"attributes":[{"value":"/ IPv6 unicast address using the link-local prefix.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93296,"byte_end":93349,"line_start":2620,"line_end":2620,"column_start":5,"column_end":58}},{"value":"serde(rename = \"LinkLocalIPv6Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93354,"byte_end":93395,"line_start":2621,"line_end":2621,"column_start":5,"column_end":46}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93400,"byte_end":93447,"line_start":2622,"line_end":2622,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6777},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93657,"byte_end":93683,"line_start":2628,"line_end":2628,"column_start":9,"column_end":35},"name":"link_local_ipv6_prefix_len","qualname":"::models::NetworkSettings::link_local_ipv6_prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Prefix length of the IPv6 unicast address.\n","sig":null,"attributes":[{"value":"/ Prefix length of the IPv6 unicast address.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93502,"byte_end":93548,"line_start":2625,"line_end":2625,"column_start":5,"column_end":51}},{"value":"serde(rename = \"LinkLocalIPv6PrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93553,"byte_end":93596,"line_start":2626,"line_end":2626,"column_start":5,"column_end":48}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93601,"byte_end":93648,"line_start":2627,"line_end":2627,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6778},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93790,"byte_end":93795,"line_start":2632,"line_end":2632,"column_start":9,"column_end":14},"name":"ports","qualname":"::models::NetworkSettings::ports","value":"std::option::Option<std::collections::HashMap<std::string::String, std::option::Option<std::vec::Vec<models::PortBinding>>>>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Ports\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93703,"byte_end":93729,"line_start":2630,"line_end":2630,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93734,"byte_end":93781,"line_start":2631,"line_end":2631,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6779},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93953,"byte_end":93964,"line_start":2637,"line_end":2637,"column_start":9,"column_end":20},"name":"sandbox_key","qualname":"::models::NetworkSettings::sandbox_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" SandboxKey identifies the sandbox\n","sig":null,"attributes":[{"value":"/ SandboxKey identifies the sandbox","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93819,"byte_end":93856,"line_start":2634,"line_end":2634,"column_start":5,"column_end":42}},{"value":"serde(rename = \"SandboxKey\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93861,"byte_end":93892,"line_start":2635,"line_end":2635,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93897,"byte_end":93944,"line_start":2636,"line_end":2636,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6780},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94098,"byte_end":94120,"line_start":2642,"line_end":2642,"column_start":9,"column_end":31},"name":"secondary_ip_addresses","qualname":"::models::NetworkSettings::secondary_ip_addresses","value":"std::option::Option<std::vec::Vec<models::Address>>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" \n","sig":null,"attributes":[{"value":"/ ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93987,"byte_end":93991,"line_start":2639,"line_end":2639,"column_start":5,"column_end":9}},{"value":"serde(rename = \"SecondaryIPAddresses\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":93996,"byte_end":94037,"line_start":2640,"line_end":2640,"column_start":5,"column_end":46}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94042,"byte_end":94089,"line_start":2641,"line_end":2641,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6781},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94262,"byte_end":94286,"line_start":2647,"line_end":2647,"column_start":9,"column_end":33},"name":"secondary_ipv6_addresses","qualname":"::models::NetworkSettings::secondary_ipv6_addresses","value":"std::option::Option<std::vec::Vec<models::Address>>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" \n","sig":null,"attributes":[{"value":"/ ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94149,"byte_end":94153,"line_start":2644,"line_end":2644,"column_start":5,"column_end":9}},{"value":"serde(rename = \"SecondaryIPv6Addresses\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94158,"byte_end":94201,"line_start":2645,"line_end":2645,"column_start":5,"column_end":48}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94206,"byte_end":94253,"line_start":2646,"line_end":2646,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6782},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94810,"byte_end":94821,"line_start":2652,"line_end":2652,"column_start":9,"column_end":20},"name":"endpoint_id","qualname":"::models::NetworkSettings::endpoint_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" EndpointID uniquely represents a service endpoint in a Sandbox.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ EndpointID uniquely represents a service endpoint in a Sandbox.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94315,"byte_end":94713,"line_start":2649,"line_end":2649,"column_start":5,"column_end":403}},{"value":"serde(rename = \"EndpointID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94718,"byte_end":94749,"line_start":2650,"line_end":2650,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94754,"byte_end":94801,"line_start":2651,"line_end":2651,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6783},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95324,"byte_end":95331,"line_start":2657,"line_end":2657,"column_start":9,"column_end":16},"name":"gateway","qualname":"::models::NetworkSettings::gateway","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Gateway address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ Gateway address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":94844,"byte_end":95230,"line_start":2654,"line_end":2654,"column_start":5,"column_end":391}},{"value":"serde(rename = \"Gateway\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95235,"byte_end":95263,"line_start":2655,"line_end":2655,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95268,"byte_end":95315,"line_start":2656,"line_end":2656,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6784},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95848,"byte_end":95867,"line_start":2662,"line_end":2662,"column_start":9,"column_end":28},"name":"global_ipv6_address","qualname":"::models::NetworkSettings::global_ipv6_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Global IPv6 address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ Global IPv6 address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95354,"byte_end":95744,"line_start":2659,"line_end":2659,"column_start":5,"column_end":395}},{"value":"serde(rename = \"GlobalIPv6Address\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95749,"byte_end":95787,"line_start":2660,"line_end":2660,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95792,"byte_end":95839,"line_start":2661,"line_end":2661,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6785},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96370,"byte_end":96392,"line_start":2667,"line_end":2667,"column_start":9,"column_end":31},"name":"global_ipv6_prefix_len","qualname":"::models::NetworkSettings::global_ipv6_prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Mask length of the global IPv6 address.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ Mask length of the global IPv6 address.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":95890,"byte_end":96264,"line_start":2664,"line_end":2664,"column_start":5,"column_end":379}},{"value":"serde(rename = \"GlobalIPv6PrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96269,"byte_end":96309,"line_start":2665,"line_end":2665,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96314,"byte_end":96361,"line_start":2666,"line_end":2666,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6786},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96891,"byte_end":96901,"line_start":2672,"line_end":2672,"column_start":9,"column_end":19},"name":"ip_address","qualname":"::models::NetworkSettings::ip_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" IPv4 address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ IPv4 address for the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96412,"byte_end":96795,"line_start":2669,"line_end":2669,"column_start":5,"column_end":388}},{"value":"serde(rename = \"IPAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96800,"byte_end":96830,"line_start":2670,"line_end":2670,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96835,"byte_end":96882,"line_start":2671,"line_end":2671,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6787},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97389,"byte_end":97402,"line_start":2677,"line_end":2677,"column_start":9,"column_end":22},"name":"ip_prefix_len","qualname":"::models::NetworkSettings::ip_prefix_len","value":"std::option::Option<i64>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Mask length of the IPv4 address.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ Mask length of the IPv4 address.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":96924,"byte_end":97291,"line_start":2674,"line_end":2674,"column_start":5,"column_end":372}},{"value":"serde(rename = \"IPPrefixLen\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97296,"byte_end":97328,"line_start":2675,"line_end":2675,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97333,"byte_end":97380,"line_start":2676,"line_end":2676,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6788},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97893,"byte_end":97905,"line_start":2682,"line_end":2682,"column_start":9,"column_end":21},"name":"ipv6_gateway","qualname":"::models::NetworkSettings::ipv6_gateway","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" IPv6 gateway address for this network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ IPv6 gateway address for this network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97422,"byte_end":97795,"line_start":2679,"line_end":2679,"column_start":5,"column_end":378}},{"value":"serde(rename = \"IPv6Gateway\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97800,"byte_end":97832,"line_start":2680,"line_end":2680,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97837,"byte_end":97884,"line_start":2681,"line_end":2681,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6789},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98424,"byte_end":98435,"line_start":2687,"line_end":2687,"column_start":9,"column_end":20},"name":"mac_address","qualname":"::models::NetworkSettings::mac_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" MAC address for the container on the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 \n","sig":null,"attributes":[{"value":"/ MAC address for the container on the default \\\"bridge\\\" network.  <p><br /></p>  > **Deprecated**: This field is only propagated when attached to the > default \\\"bridge\\\" network. Use the information from the \\\"bridge\\\" > network inside the `Networks` map instead, which contains the same > information. This field was deprecated in Docker 1.9 and is scheduled > to be removed in Docker 17.12.0 ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":97928,"byte_end":98327,"line_start":2684,"line_end":2684,"column_start":5,"column_end":404}},{"value":"serde(rename = \"MacAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98332,"byte_end":98363,"line_start":2685,"line_end":2685,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98368,"byte_end":98415,"line_start":2686,"line_end":2686,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6790},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98624,"byte_end":98632,"line_start":2692,"line_end":2692,"column_start":9,"column_end":17},"name":"networks","qualname":"::models::NetworkSettings::networks","value":"std::option::Option<std::collections::HashMap<std::string::String, models::EndpointSettings>>","parent":{"krate":0,"index":6772},"children":[],"decl_id":null,"docs":" Information about all networks that the container is connected to. \n","sig":null,"attributes":[{"value":"/ Information about all networks that the container is connected to. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98458,"byte_end":98529,"line_start":2689,"line_end":2689,"column_start":5,"column_end":76}},{"value":"serde(rename = \"Networks\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98534,"byte_end":98563,"line_start":2690,"line_end":2690,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98568,"byte_end":98615,"line_start":2691,"line_end":2691,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6882},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98972,"byte_end":98988,"line_start":2698,"line_end":2698,"column_start":12,"column_end":28},"name":"NetworkingConfig","qualname":"::models::NetworkingConfig","value":"NetworkingConfig { endpoints_config }","parent":null,"children":[{"krate":0,"index":6883}],"decl_id":null,"docs":" NetworkingConfig represents the container's networking configuration for each of its interfaces. It is used for the networking configs specified in the `docker create` and `docker network connect` commands. \n","sig":null,"attributes":[{"value":"/ NetworkingConfig represents the container's networking configuration for each of its interfaces. It is used for the networking configs specified in the `docker create` and `docker network connect` commands. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98681,"byte_end":98892,"line_start":2696,"line_end":2696,"column_start":1,"column_end":212}}]},{"kind":"Field","id":{"krate":0,"index":6883},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99171,"byte_end":99187,"line_start":2702,"line_end":2702,"column_start":9,"column_end":25},"name":"endpoints_config","qualname":"::models::NetworkingConfig::endpoints_config","value":"std::option::Option<std::collections::HashMap<std::string::String, models::EndpointSettings>>","parent":{"krate":0,"index":6882},"children":[],"decl_id":null,"docs":" A mapping of network name to endpoint configuration for that network. \n","sig":null,"attributes":[{"value":"/ A mapping of network name to endpoint configuration for that network. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":98995,"byte_end":99069,"line_start":2699,"line_end":2699,"column_start":5,"column_end":79}},{"value":"serde(rename = \"EndpointsConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99074,"byte_end":99110,"line_start":2700,"line_end":2700,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99115,"byte_end":99162,"line_start":2701,"line_end":2701,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":6941},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99315,"byte_end":99319,"line_start":2707,"line_end":2707,"column_start":12,"column_end":16},"name":"Node","qualname":"::models::Node","value":"Node { id, version, created_at, updated_at, spec, description, status, manager_status }","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6942},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99410,"byte_end":99412,"line_start":2710,"line_end":2710,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Node::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99326,"byte_end":99349,"line_start":2708,"line_end":2708,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99354,"byte_end":99401,"line_start":2709,"line_end":2709,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6943},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99524,"byte_end":99531,"line_start":2714,"line_end":2714,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Node::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99435,"byte_end":99463,"line_start":2712,"line_end":2712,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99468,"byte_end":99515,"line_start":2713,"line_end":2713,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6944},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99794,"byte_end":99804,"line_start":2719,"line_end":2719,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Node::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":" Date and time at which the node was added to the swarm in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the node was added to the swarm in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99561,"byte_end":99698,"line_start":2716,"line_end":2716,"column_start":5,"column_end":142}},{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99703,"byte_end":99733,"line_start":2717,"line_end":2717,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99738,"byte_end":99785,"line_start":2718,"line_end":2718,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6945},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100061,"byte_end":100071,"line_start":2724,"line_end":2724,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Node::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":" Date and time at which the node was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the node was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99834,"byte_end":99965,"line_start":2721,"line_end":2721,"column_start":5,"column_end":136}},{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":99970,"byte_end":100000,"line_start":2722,"line_end":2722,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100005,"byte_end":100052,"line_start":2723,"line_end":2723,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6946},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100187,"byte_end":100191,"line_start":2728,"line_end":2728,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Node::spec","value":"std::option::Option<models::NodeSpec>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100101,"byte_end":100126,"line_start":2726,"line_end":2726,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100131,"byte_end":100178,"line_start":2727,"line_end":2727,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6947},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100309,"byte_end":100320,"line_start":2732,"line_end":2732,"column_start":9,"column_end":20},"name":"description","qualname":"::models::Node::description","value":"std::option::Option<models::NodeDescription>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100216,"byte_end":100248,"line_start":2730,"line_end":2730,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100253,"byte_end":100300,"line_start":2731,"line_end":2731,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6948},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100440,"byte_end":100446,"line_start":2736,"line_end":2736,"column_start":9,"column_end":15},"name":"status","qualname":"::models::Node::status","value":"std::option::Option<models::NodeStatus>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100352,"byte_end":100379,"line_start":2734,"line_end":2734,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100384,"byte_end":100431,"line_start":2735,"line_end":2735,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6949},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100568,"byte_end":100582,"line_start":2740,"line_end":2740,"column_start":9,"column_end":23},"name":"manager_status","qualname":"::models::Node::manager_status","value":"std::option::Option<models::ManagerStatus>","parent":{"krate":0,"index":6941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ManagerStatus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100473,"byte_end":100507,"line_start":2738,"line_end":2738,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100512,"byte_end":100559,"line_start":2739,"line_end":2739,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7021},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100777,"byte_end":100792,"line_start":2746,"line_end":2746,"column_start":12,"column_end":27},"name":"NodeDescription","qualname":"::models::NodeDescription","value":"NodeDescription { hostname, platform, resources, engine, tls_info }","parent":null,"children":[{"krate":0,"index":7022},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026}],"decl_id":null,"docs":" NodeDescription encapsulates the properties of the Node as reported by the agent. \n","sig":null,"attributes":[{"value":"/ NodeDescription encapsulates the properties of the Node as reported by the agent. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100611,"byte_end":100697,"line_start":2744,"line_end":2744,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":7022},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100889,"byte_end":100897,"line_start":2749,"line_end":2749,"column_start":9,"column_end":17},"name":"hostname","qualname":"::models::NodeDescription::hostname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Hostname\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100799,"byte_end":100828,"line_start":2747,"line_end":2747,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100833,"byte_end":100880,"line_start":2748,"line_end":2748,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7023},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101010,"byte_end":101018,"line_start":2753,"line_end":2753,"column_start":9,"column_end":17},"name":"platform","qualname":"::models::NodeDescription::platform","value":"std::option::Option<models::Platform>","parent":{"krate":0,"index":7021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Platform\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100920,"byte_end":100949,"line_start":2751,"line_end":2751,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":100954,"byte_end":101001,"line_start":2752,"line_end":2752,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7024},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101134,"byte_end":101143,"line_start":2757,"line_end":2757,"column_start":9,"column_end":18},"name":"resources","qualname":"::models::NodeDescription::resources","value":"std::option::Option<models::ResourceObject>","parent":{"krate":0,"index":7021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Resources\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101043,"byte_end":101073,"line_start":2755,"line_end":2755,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101078,"byte_end":101125,"line_start":2756,"line_end":2756,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7025},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101262,"byte_end":101268,"line_start":2761,"line_end":2761,"column_start":9,"column_end":15},"name":"engine","qualname":"::models::NodeDescription::engine","value":"std::option::Option<models::EngineDescription>","parent":{"krate":0,"index":7021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Engine\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101174,"byte_end":101201,"line_start":2759,"line_end":2759,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101206,"byte_end":101253,"line_start":2760,"line_end":2760,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7026},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101391,"byte_end":101399,"line_start":2765,"line_end":2765,"column_start":9,"column_end":17},"name":"tls_info","qualname":"::models::NodeDescription::tls_info","value":"std::option::Option<models::TlsInfo>","parent":{"krate":0,"index":7021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TLSInfo\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101302,"byte_end":101330,"line_start":2763,"line_end":2763,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101335,"byte_end":101382,"line_start":2764,"line_end":2764,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7092},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101501,"byte_end":101509,"line_start":2770,"line_end":2770,"column_start":12,"column_end":20},"name":"NodeSpec","qualname":"::models::NodeSpec","value":"NodeSpec { name, labels, role, availability }","parent":null,"children":[{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7093},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101629,"byte_end":101633,"line_start":2774,"line_end":2774,"column_start":9,"column_end":13},"name":"name","qualname":"::models::NodeSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":" Name for the node.\n","sig":null,"attributes":[{"value":"/ Name for the node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101516,"byte_end":101538,"line_start":2771,"line_end":2771,"column_start":5,"column_end":27}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101543,"byte_end":101568,"line_start":2772,"line_end":2772,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101573,"byte_end":101620,"line_start":2773,"line_end":2773,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7094},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101785,"byte_end":101791,"line_start":2779,"line_end":2779,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::NodeSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101656,"byte_end":101692,"line_start":2776,"line_end":2776,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101697,"byte_end":101724,"line_start":2777,"line_end":2777,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101729,"byte_end":101776,"line_start":2778,"line_end":2778,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7095},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101943,"byte_end":101947,"line_start":2784,"line_end":2784,"column_start":9,"column_end":13},"name":"role","qualname":"::models::NodeSpec::role","value":"std::option::Option<models::NodeSpecRoleEnum>","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":" Role of the node.\n","sig":null,"attributes":[{"value":"/ Role of the node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101831,"byte_end":101852,"line_start":2781,"line_end":2781,"column_start":5,"column_end":26}},{"value":"serde(rename = \"Role\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101857,"byte_end":101882,"line_start":2782,"line_end":2782,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101887,"byte_end":101934,"line_start":2783,"line_end":2783,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7096},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102108,"byte_end":102120,"line_start":2789,"line_end":2789,"column_start":9,"column_end":21},"name":"availability","qualname":"::models::NodeSpec::availability","value":"std::option::Option<models::NodeSpecAvailabilityEnum>","parent":{"krate":0,"index":7092},"children":[],"decl_id":null,"docs":" Availability of the node.\n","sig":null,"attributes":[{"value":"/ Availability of the node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":101980,"byte_end":102009,"line_start":2786,"line_end":2786,"column_start":5,"column_end":34}},{"value":"serde(rename = \"Availability\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102014,"byte_end":102047,"line_start":2787,"line_end":2787,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102052,"byte_end":102099,"line_start":2788,"line_end":2788,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7161},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102336,"byte_end":102341,"line_start":2797,"line_end":2797,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::NodeSpecRoleEnum::EMPTY","value":"NodeSpecRoleEnum::EMPTY","parent":{"krate":0,"index":7160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102310,"byte_end":102331,"line_start":2796,"line_end":2796,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7163},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102379,"byte_end":102385,"line_start":2799,"line_end":2799,"column_start":5,"column_end":11},"name":"WORKER","qualname":"::models::NodeSpecRoleEnum::WORKER","value":"NodeSpecRoleEnum::WORKER","parent":{"krate":0,"index":7160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"worker\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102347,"byte_end":102374,"line_start":2798,"line_end":2798,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7165},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102424,"byte_end":102431,"line_start":2801,"line_end":2801,"column_start":5,"column_end":12},"name":"MANAGER","qualname":"::models::NodeSpecRoleEnum::MANAGER","value":"NodeSpecRoleEnum::MANAGER","parent":{"krate":0,"index":7160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"manager\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102391,"byte_end":102419,"line_start":2800,"line_end":2800,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":7160},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102286,"byte_end":102302,"line_start":2795,"line_end":2795,"column_start":10,"column_end":26},"name":"NodeSpecRoleEnum","qualname":"::models::NodeSpecRoleEnum","value":"pub enum NodeSpecRoleEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"worker\")]\n    WORKER,\n\n    #[serde(rename = \"manager\")]\n    MANAGER,\n}","parent":null,"children":[{"krate":0,"index":7161},{"krate":0,"index":7163},{"krate":0,"index":7165}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102160,"byte_end":102190,"line_start":2793,"line_end":2793,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7230},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103625,"byte_end":103630,"line_start":2841,"line_end":2841,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::NodeSpecAvailabilityEnum::EMPTY","value":"NodeSpecAvailabilityEnum::EMPTY","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103599,"byte_end":103620,"line_start":2840,"line_end":2840,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7232},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103668,"byte_end":103674,"line_start":2843,"line_end":2843,"column_start":5,"column_end":11},"name":"ACTIVE","qualname":"::models::NodeSpecAvailabilityEnum::ACTIVE","value":"NodeSpecAvailabilityEnum::ACTIVE","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"active\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103636,"byte_end":103663,"line_start":2842,"line_end":2842,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7234},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103711,"byte_end":103716,"line_start":2845,"line_end":2845,"column_start":5,"column_end":10},"name":"PAUSE","qualname":"::models::NodeSpecAvailabilityEnum::PAUSE","value":"NodeSpecAvailabilityEnum::PAUSE","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"pause\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103680,"byte_end":103706,"line_start":2844,"line_end":2844,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7236},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103753,"byte_end":103758,"line_start":2847,"line_end":2847,"column_start":5,"column_end":10},"name":"DRAIN","qualname":"::models::NodeSpecAvailabilityEnum::DRAIN","value":"NodeSpecAvailabilityEnum::DRAIN","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"drain\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103722,"byte_end":103748,"line_start":2846,"line_end":2846,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":7229},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103567,"byte_end":103591,"line_start":2839,"line_end":2839,"column_start":10,"column_end":34},"name":"NodeSpecAvailabilityEnum","qualname":"::models::NodeSpecAvailabilityEnum","value":"pub enum NodeSpecAvailabilityEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"active\")]\n    ACTIVE,\n\n    #[serde(rename = \"pause\")]\n    PAUSE,\n\n    #[serde(rename = \"drain\")]\n    DRAIN,\n}","parent":null,"children":[{"krate":0,"index":7230},{"krate":0,"index":7232},{"krate":0,"index":7234},{"krate":0,"index":7236}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103441,"byte_end":103471,"line_start":2837,"line_end":2837,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105423,"byte_end":105430,"line_start":2895,"line_end":2895,"column_start":5,"column_end":12},"name":"UNKNOWN","qualname":"::models::NodeState::UNKNOWN","value":"NodeState::UNKNOWN","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"unknown\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105390,"byte_end":105418,"line_start":2894,"line_end":2894,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7305},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105466,"byte_end":105470,"line_start":2897,"line_end":2897,"column_start":5,"column_end":9},"name":"DOWN","qualname":"::models::NodeState::DOWN","value":"NodeState::DOWN","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"down\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105436,"byte_end":105461,"line_start":2896,"line_end":2896,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105507,"byte_end":105512,"line_start":2899,"line_end":2899,"column_start":5,"column_end":10},"name":"READY","qualname":"::models::NodeState::READY","value":"NodeState::READY","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ready\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105476,"byte_end":105502,"line_start":2898,"line_end":2898,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7309},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105556,"byte_end":105568,"line_start":2901,"line_end":2901,"column_start":5,"column_end":17},"name":"DISCONNECTED","qualname":"::models::NodeState::DISCONNECTED","value":"NodeState::DISCONNECTED","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"disconnected\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105518,"byte_end":105551,"line_start":2900,"line_end":2900,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":7302},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105373,"byte_end":105382,"line_start":2893,"line_end":2893,"column_start":10,"column_end":19},"name":"NodeState","qualname":"::models::NodeState","value":"pub enum NodeState {\n\n    #[serde(rename = \"unknown\")]\n    UNKNOWN,\n\n    #[serde(rename = \"down\")]\n    DOWN,\n\n    #[serde(rename = \"ready\")]\n    READY,\n\n    #[serde(rename = \"disconnected\")]\n    DISCONNECTED,\n}","parent":null,"children":[{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307},{"krate":0,"index":7309}],"decl_id":null,"docs":" NodeState represents the state of a node.\n Enumeration of values.\n Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`\n which helps with FFI.\n","sig":null,"attributes":[{"value":"/ NodeState represents the state of a node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105041,"byte_end":105086,"line_start":2886,"line_end":2886,"column_start":1,"column_end":46}},{"value":"/ Enumeration of values.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105087,"byte_end":105113,"line_start":2887,"line_end":2887,"column_start":1,"column_end":27}},{"value":"/ Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105114,"byte_end":105209,"line_start":2888,"line_end":2888,"column_start":1,"column_end":96}},{"value":"/ which helps with FFI.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105210,"byte_end":105235,"line_start":2889,"line_end":2889,"column_start":1,"column_end":26}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105236,"byte_end":105266,"line_start":2890,"line_end":2890,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105267,"byte_end":105277,"line_start":2891,"line_end":2891,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":7375},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106547,"byte_end":106557,"line_start":2930,"line_end":2930,"column_start":12,"column_end":22},"name":"NodeStatus","qualname":"::models::NodeStatus","value":"NodeStatus { state, message, addr }","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378}],"decl_id":null,"docs":" NodeStatus represents the status of a node.  It provides the current status of the node, as seen by the manager. \n","sig":null,"attributes":[{"value":"/ NodeStatus represents the status of a node.  It provides the current status of the node, as seen by the manager. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106350,"byte_end":106467,"line_start":2928,"line_end":2928,"column_start":1,"column_end":118}}]},{"kind":"Field","id":{"krate":0,"index":7376},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106651,"byte_end":106656,"line_start":2933,"line_end":2933,"column_start":9,"column_end":14},"name":"state","qualname":"::models::NodeStatus::state","value":"std::option::Option<models::NodeState>","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"State\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106564,"byte_end":106590,"line_start":2931,"line_end":2931,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106595,"byte_end":106642,"line_start":2932,"line_end":2932,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7377},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106771,"byte_end":106778,"line_start":2937,"line_end":2937,"column_start":9,"column_end":16},"name":"message","qualname":"::models::NodeStatus::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106682,"byte_end":106710,"line_start":2935,"line_end":2935,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106715,"byte_end":106762,"line_start":2936,"line_end":2936,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7378},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106919,"byte_end":106923,"line_start":2942,"line_end":2942,"column_start":9,"column_end":13},"name":"addr","qualname":"::models::NodeStatus::addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" IP address of the node.\n","sig":null,"attributes":[{"value":"/ IP address of the node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106801,"byte_end":106828,"line_start":2939,"line_end":2939,"column_start":5,"column_end":32}},{"value":"serde(rename = \"Addr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106833,"byte_end":106858,"line_start":2940,"line_end":2940,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106863,"byte_end":106910,"line_start":2941,"line_end":2941,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7440},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107629,"byte_end":107642,"line_start":2948,"line_end":2948,"column_start":12,"column_end":25},"name":"ObjectVersion","qualname":"::models::ObjectVersion","value":"ObjectVersion { index }","parent":null,"children":[{"krate":0,"index":7441}],"decl_id":null,"docs":" The version number of the object such as node, service, etc. This is needed to avoid conflicting writes. The client must send the version number along with the modified specification when updating these objects.  This approach ensures safe concurrency and determinism in that the change on the object may not be applied if the version number has changed from the last read. In other words, if two update requests specify the same base version, only one of the requests can succeed. As a result, two separate update requests that happen at the same time will not unintentionally overwrite each other. \n","sig":null,"attributes":[{"value":"/ The version number of the object such as node, service, etc. This is needed to avoid conflicting writes. The client must send the version number along with the modified specification when updating these objects.  This approach ensures safe concurrency and determinism in that the change on the object may not be applied if the version number has changed from the last read. In other words, if two update requests specify the same base version, only one of the requests can succeed. As a result, two separate update requests that happen at the same time will not unintentionally overwrite each other. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106945,"byte_end":107549,"line_start":2946,"line_end":2946,"column_start":1,"column_end":605}}]},{"kind":"Field","id":{"krate":0,"index":7441},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107736,"byte_end":107741,"line_start":2951,"line_end":2951,"column_start":9,"column_end":14},"name":"index","qualname":"::models::ObjectVersion::index","value":"std::option::Option<u64>","parent":{"krate":0,"index":7440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Index\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107649,"byte_end":107675,"line_start":2949,"line_end":2949,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107680,"byte_end":107727,"line_start":2950,"line_end":2950,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7499},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107879,"byte_end":107887,"line_start":2957,"line_end":2957,"column_start":12,"column_end":20},"name":"PeerNode","qualname":"::models::PeerNode","value":"PeerNode { node_id, addr }","parent":null,"children":[{"krate":0,"index":7500},{"krate":0,"index":7501}],"decl_id":null,"docs":" Represents a peer-node in the swarm\n","sig":null,"attributes":[{"value":"/ Represents a peer-node in the swarm","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107760,"byte_end":107799,"line_start":2955,"line_end":2955,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":7500},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108039,"byte_end":108046,"line_start":2961,"line_end":2961,"column_start":9,"column_end":16},"name":"node_id","qualname":"::models::PeerNode::node_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7499},"children":[],"decl_id":null,"docs":" Unique identifier of for this node in the swarm.\n","sig":null,"attributes":[{"value":"/ Unique identifier of for this node in the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107894,"byte_end":107946,"line_start":2958,"line_end":2958,"column_start":5,"column_end":57}},{"value":"serde(rename = \"NodeID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107951,"byte_end":107978,"line_start":2959,"line_end":2959,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":107983,"byte_end":108030,"line_start":2960,"line_end":2960,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7501},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108220,"byte_end":108224,"line_start":2966,"line_end":2966,"column_start":9,"column_end":13},"name":"addr","qualname":"::models::PeerNode::addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7499},"children":[],"decl_id":null,"docs":" IP address and ports at which this node can be reached. \n","sig":null,"attributes":[{"value":"/ IP address and ports at which this node can be reached. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108069,"byte_end":108129,"line_start":2963,"line_end":2963,"column_start":5,"column_end":65}},{"value":"serde(rename = \"Addr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108134,"byte_end":108159,"line_start":2964,"line_end":2964,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108164,"byte_end":108211,"line_start":2965,"line_end":2965,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7561},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108374,"byte_end":108382,"line_start":2972,"line_end":2972,"column_start":12,"column_end":20},"name":"Platform","qualname":"::models::Platform","value":"Platform { architecture, os }","parent":null,"children":[{"krate":0,"index":7562},{"krate":0,"index":7563}],"decl_id":null,"docs":" Platform represents the platform (Arch/OS). \n","sig":null,"attributes":[{"value":"/ Platform represents the platform (Arch/OS). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108246,"byte_end":108294,"line_start":2970,"line_end":2970,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":7562},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108567,"byte_end":108579,"line_start":2976,"line_end":2976,"column_start":9,"column_end":21},"name":"architecture","qualname":"::models::Platform::architecture","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" Architecture represents the hardware architecture (for example, `x86_64`). \n","sig":null,"attributes":[{"value":"/ Architecture represents the hardware architecture (for example, `x86_64`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108389,"byte_end":108468,"line_start":2973,"line_end":2973,"column_start":5,"column_end":84}},{"value":"serde(rename = \"Architecture\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108473,"byte_end":108506,"line_start":2974,"line_end":2974,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108511,"byte_end":108558,"line_start":2975,"line_end":2975,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7563},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108767,"byte_end":108769,"line_start":2981,"line_end":2981,"column_start":9,"column_end":11},"name":"os","qualname":"::models::Platform::os","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7561},"children":[],"decl_id":null,"docs":" OS represents the Operating System (for example, `linux` or `windows`). \n","sig":null,"attributes":[{"value":"/ OS represents the Operating System (for example, `linux` or `windows`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108602,"byte_end":108678,"line_start":2978,"line_end":2978,"column_start":5,"column_end":81}},{"value":"serde(rename = \"OS\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108683,"byte_end":108706,"line_start":2979,"line_end":2979,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108711,"byte_end":108758,"line_start":2980,"line_end":2980,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7623},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108902,"byte_end":108908,"line_start":2987,"line_end":2987,"column_start":12,"column_end":18},"name":"Plugin","qualname":"::models::Plugin","value":"Plugin { id, name, enabled, settings, plugin_reference, config }","parent":null,"children":[{"krate":0,"index":7624},{"krate":0,"index":7625},{"krate":0,"index":7626},{"krate":0,"index":7627},{"krate":0,"index":7628},{"krate":0,"index":7629}],"decl_id":null,"docs":" A plugin for the Engine API\n","sig":null,"attributes":[{"value":"/ A plugin for the Engine API","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108791,"byte_end":108822,"line_start":2985,"line_end":2985,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7624},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108999,"byte_end":109001,"line_start":2990,"line_end":2990,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Plugin::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Id\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108915,"byte_end":108938,"line_start":2988,"line_end":2988,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":108943,"byte_end":108990,"line_start":2989,"line_end":2989,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7625},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109058,"byte_end":109062,"line_start":2993,"line_end":2993,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Plugin::name","value":"std::string::String","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109024,"byte_end":109049,"line_start":2992,"line_end":2992,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7626},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109205,"byte_end":109212,"line_start":2997,"line_end":2997,"column_start":9,"column_end":16},"name":"enabled","qualname":"::models::Plugin::enabled","value":"bool","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":" True if the plugin is running. False if the plugin is not running, only installed.\n","sig":null,"attributes":[{"value":"/ True if the plugin is running. False if the plugin is not running, only installed.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109077,"byte_end":109163,"line_start":2995,"line_end":2995,"column_start":5,"column_end":91}},{"value":"serde(rename = \"Enabled\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109168,"byte_end":109196,"line_start":2996,"line_end":2996,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7627},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109263,"byte_end":109271,"line_start":3000,"line_end":3000,"column_start":9,"column_end":17},"name":"settings","qualname":"::models::Plugin::settings","value":"models::PluginSettings","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Settings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109225,"byte_end":109254,"line_start":2999,"line_end":2999,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":7628},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109452,"byte_end":109468,"line_start":3005,"line_end":3005,"column_start":9,"column_end":25},"name":"plugin_reference","qualname":"::models::Plugin::plugin_reference","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":" plugin remote reference used to push/pull the plugin\n","sig":null,"attributes":[{"value":"/ plugin remote reference used to push/pull the plugin","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109294,"byte_end":109350,"line_start":3002,"line_end":3002,"column_start":5,"column_end":61}},{"value":"serde(rename = \"PluginReference\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109355,"byte_end":109391,"line_start":3003,"line_end":3003,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109396,"byte_end":109443,"line_start":3004,"line_end":3004,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7629},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109527,"byte_end":109533,"line_start":3008,"line_end":3008,"column_start":9,"column_end":15},"name":"config","qualname":"::models::Plugin::config","value":"models::PluginConfig","parent":{"krate":0,"index":7623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109491,"byte_end":109518,"line_start":3007,"line_end":3007,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":7697},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109660,"byte_end":109672,"line_start":3014,"line_end":3014,"column_start":12,"column_end":24},"name":"PluginConfig","qualname":"::models::PluginConfig","value":"PluginConfig { docker_version, description, documentation, interface, entrypoint, work_dir, user, network, linux, propagated_mount, ipc_host, pid_host, mounts, env, args, rootfs }","parent":null,"children":[{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7700},{"krate":0,"index":7701},{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7707},{"krate":0,"index":7708},{"krate":0,"index":7709},{"krate":0,"index":7710},{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7713}],"decl_id":null,"docs":" The config of a plugin.\n","sig":null,"attributes":[{"value":"/ The config of a plugin.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109553,"byte_end":109580,"line_start":3012,"line_end":3012,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7698},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109823,"byte_end":109837,"line_start":3018,"line_end":3018,"column_start":9,"column_end":23},"name":"docker_version","qualname":"::models::PluginConfig::docker_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":" Docker Version used to create the plugin\n","sig":null,"attributes":[{"value":"/ Docker Version used to create the plugin","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109679,"byte_end":109723,"line_start":3015,"line_end":3015,"column_start":5,"column_end":49}},{"value":"serde(rename = \"DockerVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109728,"byte_end":109762,"line_start":3016,"line_end":3016,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109767,"byte_end":109814,"line_start":3017,"line_end":3017,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7699},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109901,"byte_end":109912,"line_start":3021,"line_end":3021,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginConfig::description","value":"std::string::String","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109860,"byte_end":109892,"line_start":3020,"line_end":3020,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7700},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109970,"byte_end":109983,"line_start":3024,"line_end":3024,"column_start":9,"column_end":22},"name":"documentation","qualname":"::models::PluginConfig::documentation","value":"std::string::String","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Documentation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109927,"byte_end":109961,"line_start":3023,"line_end":3023,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":7701},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110037,"byte_end":110046,"line_start":3027,"line_end":3027,"column_start":9,"column_end":18},"name":"interface","qualname":"::models::PluginConfig::interface","value":"models::PluginConfigInterface","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Interface\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":109998,"byte_end":110028,"line_start":3026,"line_end":3026,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7702},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110179,"byte_end":110189,"line_start":3031,"line_end":3031,"column_start":9,"column_end":19},"name":"entrypoint","qualname":"::models::PluginConfig::entrypoint","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Entrypoint\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110076,"byte_end":110107,"line_start":3029,"line_end":3029,"column_start":5,"column_end":36}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110112,"byte_end":110170,"line_start":3030,"line_end":3030,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7703},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110246,"byte_end":110254,"line_start":3034,"line_end":3034,"column_start":9,"column_end":17},"name":"work_dir","qualname":"::models::PluginConfig::work_dir","value":"std::string::String","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"WorkDir\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110209,"byte_end":110237,"line_start":3033,"line_end":3033,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7704},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110355,"byte_end":110359,"line_start":3038,"line_end":3038,"column_start":9,"column_end":13},"name":"user","qualname":"::models::PluginConfig::user","value":"std::option::Option<models::PluginConfigUser>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"User\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110269,"byte_end":110294,"line_start":3036,"line_end":3036,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110299,"byte_end":110346,"line_start":3037,"line_end":3037,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7705},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110429,"byte_end":110436,"line_start":3041,"line_end":3041,"column_start":9,"column_end":16},"name":"network","qualname":"::models::PluginConfig::network","value":"models::PluginConfigNetwork","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Network\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110392,"byte_end":110420,"line_start":3040,"line_end":3040,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7706},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110499,"byte_end":110504,"line_start":3044,"line_end":3044,"column_start":9,"column_end":14},"name":"linux","qualname":"::models::PluginConfig::linux","value":"models::PluginConfigLinux","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Linux\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110464,"byte_end":110490,"line_start":3043,"line_end":3043,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":7707},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110575,"byte_end":110591,"line_start":3047,"line_end":3047,"column_start":9,"column_end":25},"name":"propagated_mount","qualname":"::models::PluginConfig::propagated_mount","value":"std::string::String","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PropagatedMount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110530,"byte_end":110566,"line_start":3046,"line_end":3046,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":7708},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110643,"byte_end":110651,"line_start":3050,"line_end":3050,"column_start":9,"column_end":17},"name":"ipc_host","qualname":"::models::PluginConfig::ipc_host","value":"bool","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IpcHost\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110606,"byte_end":110634,"line_start":3049,"line_end":3049,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7709},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110701,"byte_end":110709,"line_start":3053,"line_end":3053,"column_start":9,"column_end":17},"name":"pid_host","qualname":"::models::PluginConfig::pid_host","value":"bool","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PidHost\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110664,"byte_end":110692,"line_start":3052,"line_end":3052,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7710},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110821,"byte_end":110827,"line_start":3057,"line_end":3057,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::PluginConfig::mounts","value":"std::vec::Vec<models::PluginMount>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110722,"byte_end":110749,"line_start":3055,"line_end":3055,"column_start":5,"column_end":32}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110754,"byte_end":110812,"line_start":3056,"line_end":3056,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7711},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110948,"byte_end":110951,"line_start":3061,"line_end":3061,"column_start":9,"column_end":12},"name":"env","qualname":"::models::PluginConfig::env","value":"std::vec::Vec<models::PluginEnv>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Env\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110852,"byte_end":110876,"line_start":3059,"line_end":3059,"column_start":5,"column_end":29}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110881,"byte_end":110939,"line_start":3060,"line_end":3060,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7712},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111008,"byte_end":111012,"line_start":3064,"line_end":3064,"column_start":9,"column_end":13},"name":"args","qualname":"::models::PluginConfig::args","value":"models::PluginConfigArgs","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Args\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":110974,"byte_end":110999,"line_start":3063,"line_end":3063,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7713},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111125,"byte_end":111131,"line_start":3068,"line_end":3068,"column_start":9,"column_end":15},"name":"rootfs","qualname":"::models::PluginConfig::rootfs","value":"std::option::Option<models::PluginConfigRootfs>","parent":{"krate":0,"index":7697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rootfs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111037,"byte_end":111064,"line_start":3066,"line_end":3066,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111069,"byte_end":111116,"line_start":3067,"line_end":3067,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7858},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111244,"byte_end":111260,"line_start":3073,"line_end":3073,"column_start":12,"column_end":28},"name":"PluginConfigArgs","qualname":"::models::PluginConfigArgs","value":"PluginConfigArgs { name, description, settable, value }","parent":null,"children":[{"krate":0,"index":7859},{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7859},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111301,"byte_end":111305,"line_start":3075,"line_end":3075,"column_start":9,"column_end":13},"name":"name","qualname":"::models::PluginConfigArgs::name","value":"std::string::String","parent":{"krate":0,"index":7858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111267,"byte_end":111292,"line_start":3074,"line_end":3074,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7860},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111361,"byte_end":111372,"line_start":3078,"line_end":3078,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginConfigArgs::description","value":"std::string::String","parent":{"krate":0,"index":7858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111320,"byte_end":111352,"line_start":3077,"line_end":3077,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7861},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111488,"byte_end":111496,"line_start":3082,"line_end":3082,"column_start":9,"column_end":17},"name":"settable","qualname":"::models::PluginConfigArgs::settable","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":7858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Settable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111387,"byte_end":111416,"line_start":3080,"line_end":3080,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111421,"byte_end":111479,"line_start":3081,"line_end":3081,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7862},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111614,"byte_end":111619,"line_start":3086,"line_end":3086,"column_start":9,"column_end":14},"name":"value","qualname":"::models::PluginConfigArgs::value","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":7858},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111516,"byte_end":111542,"line_start":3084,"line_end":3084,"column_start":5,"column_end":31}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111547,"byte_end":111605,"line_start":3085,"line_end":3085,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7964},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111765,"byte_end":111786,"line_start":3092,"line_end":3092,"column_start":12,"column_end":33},"name":"PluginConfigInterface","qualname":"::models::PluginConfigInterface","value":"PluginConfigInterface { types, socket, protocol_scheme }","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7967}],"decl_id":null,"docs":" The interface between Docker and the plugin\n","sig":null,"attributes":[{"value":"/ The interface between Docker and the plugin","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111638,"byte_end":111685,"line_start":3090,"line_end":3090,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":7965},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111891,"byte_end":111896,"line_start":3095,"line_end":3095,"column_start":9,"column_end":14},"name":"types","qualname":"::models::PluginConfigInterface::types","value":"std::vec::Vec<models::PluginInterfaceType>","parent":{"krate":0,"index":7964},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Types\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111793,"byte_end":111819,"line_start":3093,"line_end":3093,"column_start":5,"column_end":31}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111824,"byte_end":111882,"line_start":3094,"line_end":3094,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7966},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111965,"byte_end":111971,"line_start":3098,"line_end":3098,"column_start":9,"column_end":15},"name":"socket","qualname":"::models::PluginConfigInterface::socket","value":"std::string::String","parent":{"krate":0,"index":7964},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Socket\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111929,"byte_end":111956,"line_start":3097,"line_end":3097,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":7967},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112144,"byte_end":112159,"line_start":3103,"line_end":3103,"column_start":9,"column_end":24},"name":"protocol_scheme","qualname":"::models::PluginConfigInterface::protocol_scheme","value":"std::option::Option<models::PluginConfigInterfaceProtocolSchemeEnum>","parent":{"krate":0,"index":7964},"children":[],"decl_id":null,"docs":" Protocol to use for clients connecting to the plugin.\n","sig":null,"attributes":[{"value":"/ Protocol to use for clients connecting to the plugin.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":111986,"byte_end":112043,"line_start":3100,"line_end":3100,"column_start":5,"column_end":62}},{"value":"serde(rename = \"ProtocolScheme\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112048,"byte_end":112083,"line_start":3101,"line_end":3101,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112088,"byte_end":112135,"line_start":3102,"line_end":3102,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8049},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112413,"byte_end":112418,"line_start":3111,"line_end":3111,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::PluginConfigInterfaceProtocolSchemeEnum::EMPTY","value":"PluginConfigInterfaceProtocolSchemeEnum::EMPTY","parent":{"krate":0,"index":8048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112387,"byte_end":112408,"line_start":3110,"line_end":3110,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8051},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112470,"byte_end":112490,"line_start":3113,"line_end":3113,"column_start":5,"column_end":25},"name":"MOBY_PLUGINS_HTTP_V1","qualname":"::models::PluginConfigInterfaceProtocolSchemeEnum::MOBY_PLUGINS_HTTP_V1","value":"PluginConfigInterfaceProtocolSchemeEnum::MOBY_PLUGINS_HTTP_V1","parent":{"krate":0,"index":8048},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"moby.plugins.http/v1\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112424,"byte_end":112465,"line_start":3112,"line_end":3112,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":8048},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112340,"byte_end":112379,"line_start":3109,"line_end":3109,"column_start":10,"column_end":49},"name":"PluginConfigInterfaceProtocolSchemeEnum","qualname":"::models::PluginConfigInterfaceProtocolSchemeEnum","value":"pub enum PluginConfigInterfaceProtocolSchemeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"moby.plugins.http/v1\")]\n    MOBY_PLUGINS_HTTP_V1,\n}","parent":null,"children":[{"krate":0,"index":8049},{"krate":0,"index":8051}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112214,"byte_end":112244,"line_start":3107,"line_end":3107,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8113},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113699,"byte_end":113716,"line_start":3147,"line_end":3147,"column_start":12,"column_end":29},"name":"PluginConfigLinux","qualname":"::models::PluginConfigLinux","value":"PluginConfigLinux { capabilities, allow_all_devices, devices }","parent":null,"children":[{"krate":0,"index":8114},{"krate":0,"index":8115},{"krate":0,"index":8116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8114},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113828,"byte_end":113840,"line_start":3150,"line_end":3150,"column_start":9,"column_end":21},"name":"capabilities","qualname":"::models::PluginConfigLinux::capabilities","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Capabilities\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113723,"byte_end":113756,"line_start":3148,"line_end":3148,"column_start":5,"column_end":38}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113761,"byte_end":113819,"line_start":3149,"line_end":3149,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8115},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113905,"byte_end":113922,"line_start":3153,"line_end":3153,"column_start":9,"column_end":26},"name":"allow_all_devices","qualname":"::models::PluginConfigLinux::allow_all_devices","value":"bool","parent":{"krate":0,"index":8113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"AllowAllDevices\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113860,"byte_end":113896,"line_start":3152,"line_end":3152,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":8116},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114035,"byte_end":114042,"line_start":3157,"line_end":3157,"column_start":9,"column_end":16},"name":"devices","qualname":"::models::PluginConfigLinux::devices","value":"std::vec::Vec<models::PluginDevice>","parent":{"krate":0,"index":8113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Devices\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113935,"byte_end":113963,"line_start":3155,"line_end":3155,"column_start":5,"column_end":33}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113968,"byte_end":114026,"line_start":3156,"line_end":3156,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8216},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114146,"byte_end":114165,"line_start":3162,"line_end":3162,"column_start":12,"column_end":31},"name":"PluginConfigNetwork","qualname":"::models::PluginConfigNetwork","value":"PluginConfigNetwork { typ }","parent":null,"children":[{"krate":0,"index":8217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8217},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114206,"byte_end":114209,"line_start":3164,"line_end":3164,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::PluginConfigNetwork::typ","value":"std::string::String","parent":{"krate":0,"index":8216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114172,"byte_end":114197,"line_start":3163,"line_end":3163,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8275},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114302,"byte_end":114320,"line_start":3169,"line_end":3169,"column_start":12,"column_end":30},"name":"PluginConfigRootfs","qualname":"::models::PluginConfigRootfs","value":"PluginConfigRootfs { typ, diff_ids }","parent":null,"children":[{"krate":0,"index":8276},{"krate":0,"index":8277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8276},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114413,"byte_end":114416,"line_start":3172,"line_end":3172,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::PluginConfigRootfs::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114327,"byte_end":114352,"line_start":3170,"line_end":3170,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114357,"byte_end":114404,"line_start":3171,"line_end":3171,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8277},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114529,"byte_end":114537,"line_start":3176,"line_end":3176,"column_start":9,"column_end":17},"name":"diff_ids","qualname":"::models::PluginConfigRootfs::diff_ids","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"diff_ids\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114439,"byte_end":114468,"line_start":3174,"line_end":3174,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114473,"byte_end":114520,"line_start":3175,"line_end":3175,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8337},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114643,"byte_end":114659,"line_start":3181,"line_end":3181,"column_start":12,"column_end":28},"name":"PluginConfigUser","qualname":"::models::PluginConfigUser","value":"PluginConfigUser { uid, gid }","parent":null,"children":[{"krate":0,"index":8338},{"krate":0,"index":8339}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8338},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114751,"byte_end":114754,"line_start":3184,"line_end":3184,"column_start":9,"column_end":12},"name":"uid","qualname":"::models::PluginConfigUser::uid","value":"std::option::Option<u32>","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114666,"byte_end":114690,"line_start":3182,"line_end":3182,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114695,"byte_end":114742,"line_start":3183,"line_end":3183,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8339},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114859,"byte_end":114862,"line_start":3188,"line_end":3188,"column_start":9,"column_end":12},"name":"gid","qualname":"::models::PluginConfigUser::gid","value":"std::option::Option<u32>","parent":{"krate":0,"index":8337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"GID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114774,"byte_end":114798,"line_start":3186,"line_end":3186,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114803,"byte_end":114850,"line_start":3187,"line_end":3187,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8399},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114960,"byte_end":114972,"line_start":3193,"line_end":3193,"column_start":12,"column_end":24},"name":"PluginDevice","qualname":"::models::PluginDevice","value":"PluginDevice { name, description, settable, path }","parent":null,"children":[{"krate":0,"index":8400},{"krate":0,"index":8401},{"krate":0,"index":8402},{"krate":0,"index":8403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8400},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115013,"byte_end":115017,"line_start":3195,"line_end":3195,"column_start":9,"column_end":13},"name":"name","qualname":"::models::PluginDevice::name","value":"std::string::String","parent":{"krate":0,"index":8399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":114979,"byte_end":115004,"line_start":3194,"line_end":3194,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":8401},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115073,"byte_end":115084,"line_start":3198,"line_end":3198,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginDevice::description","value":"std::string::String","parent":{"krate":0,"index":8399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115032,"byte_end":115064,"line_start":3197,"line_end":3197,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8402},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115200,"byte_end":115208,"line_start":3202,"line_end":3202,"column_start":9,"column_end":17},"name":"settable","qualname":"::models::PluginDevice::settable","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Settable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115099,"byte_end":115128,"line_start":3200,"line_end":3200,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115133,"byte_end":115191,"line_start":3201,"line_end":3201,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8403},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115262,"byte_end":115266,"line_start":3205,"line_end":3205,"column_start":9,"column_end":13},"name":"path","qualname":"::models::PluginDevice::path","value":"std::string::String","parent":{"krate":0,"index":8399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115228,"byte_end":115253,"line_start":3204,"line_end":3204,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8486},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115359,"byte_end":115368,"line_start":3210,"line_end":3210,"column_start":12,"column_end":21},"name":"PluginEnv","qualname":"::models::PluginEnv","value":"PluginEnv { name, description, settable, value }","parent":null,"children":[{"krate":0,"index":8487},{"krate":0,"index":8488},{"krate":0,"index":8489},{"krate":0,"index":8490}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8487},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115409,"byte_end":115413,"line_start":3212,"line_end":3212,"column_start":9,"column_end":13},"name":"name","qualname":"::models::PluginEnv::name","value":"std::string::String","parent":{"krate":0,"index":8486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115375,"byte_end":115400,"line_start":3211,"line_end":3211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":8488},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115469,"byte_end":115480,"line_start":3215,"line_end":3215,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginEnv::description","value":"std::string::String","parent":{"krate":0,"index":8486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115428,"byte_end":115460,"line_start":3214,"line_end":3214,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8489},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115596,"byte_end":115604,"line_start":3219,"line_end":3219,"column_start":9,"column_end":17},"name":"settable","qualname":"::models::PluginEnv::settable","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Settable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115495,"byte_end":115524,"line_start":3217,"line_end":3217,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115529,"byte_end":115587,"line_start":3218,"line_end":3218,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8490},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115659,"byte_end":115664,"line_start":3222,"line_end":3222,"column_start":9,"column_end":14},"name":"value","qualname":"::models::PluginEnv::value","value":"std::string::String","parent":{"krate":0,"index":8486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115624,"byte_end":115650,"line_start":3221,"line_end":3221,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8573},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115757,"byte_end":115776,"line_start":3227,"line_end":3227,"column_start":12,"column_end":31},"name":"PluginInterfaceType","qualname":"::models::PluginInterfaceType","value":"PluginInterfaceType { prefix, capability, version }","parent":null,"children":[{"krate":0,"index":8574},{"krate":0,"index":8575},{"krate":0,"index":8576}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8574},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115819,"byte_end":115825,"line_start":3229,"line_end":3229,"column_start":9,"column_end":15},"name":"prefix","qualname":"::models::PluginInterfaceType::prefix","value":"std::string::String","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Prefix\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115783,"byte_end":115810,"line_start":3228,"line_end":3228,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8575},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115880,"byte_end":115890,"line_start":3232,"line_end":3232,"column_start":9,"column_end":19},"name":"capability","qualname":"::models::PluginInterfaceType::capability","value":"std::string::String","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Capability\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115840,"byte_end":115871,"line_start":3231,"line_end":3231,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":8576},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115942,"byte_end":115949,"line_start":3235,"line_end":3235,"column_start":9,"column_end":16},"name":"version","qualname":"::models::PluginInterfaceType::version","value":"std::string::String","parent":{"krate":0,"index":8573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":115905,"byte_end":115933,"line_start":3234,"line_end":3234,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":8638},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116042,"byte_end":116053,"line_start":3240,"line_end":3240,"column_start":12,"column_end":23},"name":"PluginMount","qualname":"::models::PluginMount","value":"PluginMount { name, description, settable, source, destination, typ, options }","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640},{"krate":0,"index":8641},{"krate":0,"index":8642},{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8639},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116094,"byte_end":116098,"line_start":3242,"line_end":3242,"column_start":9,"column_end":13},"name":"name","qualname":"::models::PluginMount::name","value":"std::string::String","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116060,"byte_end":116085,"line_start":3241,"line_end":3241,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":8640},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116154,"byte_end":116165,"line_start":3245,"line_end":3245,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginMount::description","value":"std::string::String","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116113,"byte_end":116145,"line_start":3244,"line_end":3244,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8641},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116281,"byte_end":116289,"line_start":3249,"line_end":3249,"column_start":9,"column_end":17},"name":"settable","qualname":"::models::PluginMount::settable","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Settable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116180,"byte_end":116209,"line_start":3247,"line_end":3247,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116214,"byte_end":116272,"line_start":3248,"line_end":3248,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8642},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116345,"byte_end":116351,"line_start":3252,"line_end":3252,"column_start":9,"column_end":15},"name":"source","qualname":"::models::PluginMount::source","value":"std::string::String","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Source\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116309,"byte_end":116336,"line_start":3251,"line_end":3251,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8643},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116407,"byte_end":116418,"line_start":3255,"line_end":3255,"column_start":9,"column_end":20},"name":"destination","qualname":"::models::PluginMount::destination","value":"std::string::String","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Destination\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116366,"byte_end":116398,"line_start":3254,"line_end":3254,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8644},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116467,"byte_end":116470,"line_start":3258,"line_end":3258,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::PluginMount::typ","value":"std::string::String","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116433,"byte_end":116458,"line_start":3257,"line_end":3257,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":8645},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116585,"byte_end":116592,"line_start":3262,"line_end":3262,"column_start":9,"column_end":16},"name":"options","qualname":"::models::PluginMount::options","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116485,"byte_end":116513,"line_start":3260,"line_end":3260,"column_start":5,"column_end":33}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116518,"byte_end":116576,"line_start":3261,"line_end":3261,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8753},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116769,"byte_end":116788,"line_start":3268,"line_end":3268,"column_start":12,"column_end":31},"name":"PluginPrivilegeItem","qualname":"::models::PluginPrivilegeItem","value":"PluginPrivilegeItem { name, description, value }","parent":null,"children":[{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756}],"decl_id":null,"docs":" Describes a permission the user has to accept upon installing the plugin. \n","sig":null,"attributes":[{"value":"/ Describes a permission the user has to accept upon installing the plugin. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116611,"byte_end":116689,"line_start":3266,"line_end":3266,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":8754},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116881,"byte_end":116885,"line_start":3271,"line_end":3271,"column_start":9,"column_end":13},"name":"name","qualname":"::models::PluginPrivilegeItem::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116795,"byte_end":116820,"line_start":3269,"line_end":3269,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116825,"byte_end":116872,"line_start":3270,"line_end":3270,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8755},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117001,"byte_end":117012,"line_start":3275,"line_end":3275,"column_start":9,"column_end":20},"name":"description","qualname":"::models::PluginPrivilegeItem::description","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":8753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Description\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116908,"byte_end":116940,"line_start":3273,"line_end":3273,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":116945,"byte_end":116992,"line_start":3274,"line_end":3274,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8756},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117122,"byte_end":117127,"line_start":3279,"line_end":3279,"column_start":9,"column_end":14},"name":"value","qualname":"::models::PluginPrivilegeItem::value","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Value\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117035,"byte_end":117061,"line_start":3277,"line_end":3277,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117066,"byte_end":117113,"line_start":3278,"line_end":3278,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8818},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117277,"byte_end":117291,"line_start":3285,"line_end":3285,"column_start":12,"column_end":26},"name":"PluginSettings","qualname":"::models::PluginSettings","value":"PluginSettings { mounts, env, args, devices }","parent":null,"children":[{"krate":0,"index":8819},{"krate":0,"index":8820},{"krate":0,"index":8821},{"krate":0,"index":8822}],"decl_id":null,"docs":" Settings that can be modified by users.\n","sig":null,"attributes":[{"value":"/ Settings that can be modified by users.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117154,"byte_end":117197,"line_start":3283,"line_end":3283,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8819},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117397,"byte_end":117403,"line_start":3288,"line_end":3288,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::PluginSettings::mounts","value":"std::vec::Vec<models::PluginMount>","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117298,"byte_end":117325,"line_start":3286,"line_end":3286,"column_start":5,"column_end":32}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117330,"byte_end":117388,"line_start":3287,"line_end":3287,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8820},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117524,"byte_end":117527,"line_start":3292,"line_end":3292,"column_start":9,"column_end":12},"name":"env","qualname":"::models::PluginSettings::env","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Env\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117428,"byte_end":117452,"line_start":3290,"line_end":3290,"column_start":5,"column_end":29}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117457,"byte_end":117515,"line_start":3291,"line_end":3291,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8821},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117644,"byte_end":117648,"line_start":3296,"line_end":3296,"column_start":9,"column_end":13},"name":"args","qualname":"::models::PluginSettings::args","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Args\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117547,"byte_end":117572,"line_start":3294,"line_end":3294,"column_start":5,"column_end":30}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117577,"byte_end":117635,"line_start":3295,"line_end":3295,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8822},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117768,"byte_end":117775,"line_start":3300,"line_end":3300,"column_start":9,"column_end":16},"name":"devices","qualname":"::models::PluginSettings::devices","value":"std::vec::Vec<models::PluginDevice>","parent":{"krate":0,"index":8818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Devices\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117668,"byte_end":117696,"line_start":3298,"line_end":3298,"column_start":5,"column_end":33}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117701,"byte_end":117759,"line_start":3299,"line_end":3299,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":8962},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118109,"byte_end":118120,"line_start":3306,"line_end":3306,"column_start":12,"column_end":23},"name":"PluginsInfo","qualname":"::models::PluginsInfo","value":"PluginsInfo { volume, network, authorization, log }","parent":null,"children":[{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8965},{"krate":0,"index":8966}],"decl_id":null,"docs":" Available plugins per type.  <p><br /></p>  > **Note**: Only unmanaged (V1) plugins are included in this list. > V1 plugins are \\\"lazily\\\" loaded, and are not returned in this list > if there is no resource using the plugin. \n","sig":null,"attributes":[{"value":"/ Available plugins per type.  <p><br /></p>  > **Note**: Only unmanaged (V1) plugins are included in this list. > V1 plugins are \\\"lazily\\\" loaded, and are not returned in this list > if there is no resource using the plugin. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":117800,"byte_end":118029,"line_start":3304,"line_end":3304,"column_start":1,"column_end":230}}]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118286,"byte_end":118292,"line_start":3310,"line_end":3310,"column_start":9,"column_end":15},"name":"volume","qualname":"::models::PluginsInfo::volume","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8962},"children":[],"decl_id":null,"docs":" Names of available volume-drivers, and network-driver plugins.\n","sig":null,"attributes":[{"value":"/ Names of available volume-drivers, and network-driver plugins.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118127,"byte_end":118193,"line_start":3307,"line_end":3307,"column_start":5,"column_end":71}},{"value":"serde(rename = \"Volume\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118198,"byte_end":118225,"line_start":3308,"line_end":3308,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118230,"byte_end":118277,"line_start":3309,"line_end":3309,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8964},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118481,"byte_end":118488,"line_start":3315,"line_end":3315,"column_start":9,"column_end":16},"name":"network","qualname":"::models::PluginsInfo::network","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8962},"children":[],"decl_id":null,"docs":" Names of available network-drivers, and network-driver plugins.\n","sig":null,"attributes":[{"value":"/ Names of available network-drivers, and network-driver plugins.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118320,"byte_end":118387,"line_start":3312,"line_end":3312,"column_start":5,"column_end":72}},{"value":"serde(rename = \"Network\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118392,"byte_end":118420,"line_start":3313,"line_end":3313,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118425,"byte_end":118472,"line_start":3314,"line_end":3314,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8965},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118661,"byte_end":118674,"line_start":3320,"line_end":3320,"column_start":9,"column_end":22},"name":"authorization","qualname":"::models::PluginsInfo::authorization","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8962},"children":[],"decl_id":null,"docs":" Names of available authorization plugins.\n","sig":null,"attributes":[{"value":"/ Names of available authorization plugins.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118516,"byte_end":118561,"line_start":3317,"line_end":3317,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Authorization\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118566,"byte_end":118600,"line_start":3318,"line_end":3318,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118605,"byte_end":118652,"line_start":3319,"line_end":3319,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118859,"byte_end":118862,"line_start":3325,"line_end":3325,"column_start":9,"column_end":12},"name":"log","qualname":"::models::PluginsInfo::log","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":8962},"children":[],"decl_id":null,"docs":" Names of available logging-drivers, and logging-driver plugins.\n","sig":null,"attributes":[{"value":"/ Names of available logging-drivers, and logging-driver plugins.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118702,"byte_end":118769,"line_start":3322,"line_end":3322,"column_start":5,"column_end":72}},{"value":"serde(rename = \"Log\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118774,"byte_end":118798,"line_start":3323,"line_end":3323,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118803,"byte_end":118850,"line_start":3324,"line_end":3324,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9030},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119000,"byte_end":119004,"line_start":3331,"line_end":3331,"column_start":12,"column_end":16},"name":"Port","qualname":"::models::Port","value":"Port { ip, private_port, public_port, typ }","parent":null,"children":[{"krate":0,"index":9031},{"krate":0,"index":9032},{"krate":0,"index":9033},{"krate":0,"index":9034}],"decl_id":null,"docs":" An open port on a container\n","sig":null,"attributes":[{"value":"/ An open port on a container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":118889,"byte_end":118920,"line_start":3329,"line_end":3329,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":9031},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119158,"byte_end":119160,"line_start":3335,"line_end":3335,"column_start":9,"column_end":11},"name":"ip","qualname":"::models::Port::ip","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9030},"children":[],"decl_id":null,"docs":" Host IP address that the container's port is mapped to\n","sig":null,"attributes":[{"value":"/ Host IP address that the container's port is mapped to","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119011,"byte_end":119069,"line_start":3332,"line_end":3332,"column_start":5,"column_end":63}},{"value":"serde(rename = \"IP\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119074,"byte_end":119097,"line_start":3333,"line_end":3333,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119102,"byte_end":119149,"line_start":3334,"line_end":3334,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9032},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119254,"byte_end":119266,"line_start":3339,"line_end":3339,"column_start":9,"column_end":21},"name":"private_port","qualname":"::models::Port::private_port","value":"i64","parent":{"krate":0,"index":9030},"children":[],"decl_id":null,"docs":" Port on the container\n","sig":null,"attributes":[{"value":"/ Port on the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119183,"byte_end":119208,"line_start":3337,"line_end":3337,"column_start":5,"column_end":30}},{"value":"serde(rename = \"PrivatePort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119213,"byte_end":119245,"line_start":3338,"line_end":3338,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":9033},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119403,"byte_end":119414,"line_start":3344,"line_end":3344,"column_start":9,"column_end":20},"name":"public_port","qualname":"::models::Port::public_port","value":"std::option::Option<i64>","parent":{"krate":0,"index":9030},"children":[],"decl_id":null,"docs":" Port exposed on the host\n","sig":null,"attributes":[{"value":"/ Port exposed on the host","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119278,"byte_end":119306,"line_start":3341,"line_end":3341,"column_start":5,"column_end":33}},{"value":"serde(rename = \"PublicPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119311,"byte_end":119342,"line_start":3342,"line_end":3342,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119347,"byte_end":119394,"line_start":3343,"line_end":3343,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9034},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119582,"byte_end":119585,"line_start":3349,"line_end":3349,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::Port::typ","value":"std::option::Option<models::PortTypeEnum>","parent":{"krate":0,"index":9030},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119434,"byte_end":119459,"line_start":3346,"line_end":3346,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119464,"byte_end":119511,"line_start":3347,"line_end":3347,"column_start":5,"column_end":52}},{"value":"serde(with = \"serde_with::rust::string_empty_as_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119516,"byte_end":119573,"line_start":3348,"line_end":3348,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9126},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119785,"byte_end":119790,"line_start":3357,"line_end":3357,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::PortTypeEnum::EMPTY","value":"PortTypeEnum::EMPTY","parent":{"krate":0,"index":9125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119759,"byte_end":119780,"line_start":3356,"line_end":3356,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9128},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119825,"byte_end":119828,"line_start":3359,"line_end":3359,"column_start":5,"column_end":8},"name":"TCP","qualname":"::models::PortTypeEnum::TCP","value":"PortTypeEnum::TCP","parent":{"krate":0,"index":9125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"tcp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119796,"byte_end":119820,"line_start":3358,"line_end":3358,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9130},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119863,"byte_end":119866,"line_start":3361,"line_end":3361,"column_start":5,"column_end":8},"name":"UDP","qualname":"::models::PortTypeEnum::UDP","value":"PortTypeEnum::UDP","parent":{"krate":0,"index":9125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"udp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119834,"byte_end":119858,"line_start":3360,"line_end":3360,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9132},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119902,"byte_end":119906,"line_start":3363,"line_end":3363,"column_start":5,"column_end":9},"name":"SCTP","qualname":"::models::PortTypeEnum::SCTP","value":"PortTypeEnum::SCTP","parent":{"krate":0,"index":9125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"sctp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119872,"byte_end":119897,"line_start":3362,"line_end":3362,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":9125},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119739,"byte_end":119751,"line_start":3355,"line_end":3355,"column_start":10,"column_end":22},"name":"PortTypeEnum","qualname":"::models::PortTypeEnum","value":"pub enum PortTypeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"tcp\")]\n    TCP,\n\n    #[serde(rename = \"udp\")]\n    UDP,\n\n    #[serde(rename = \"sctp\")]\n    SCTP,\n}","parent":null,"children":[{"krate":0,"index":9126},{"krate":0,"index":9128},{"krate":0,"index":9130},{"krate":0,"index":9132}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119613,"byte_end":119643,"line_start":3353,"line_end":3353,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9198},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121133,"byte_end":121144,"line_start":3404,"line_end":3404,"column_start":12,"column_end":23},"name":"PortBinding","qualname":"::models::PortBinding","value":"PortBinding { host_ip, host_port }","parent":null,"children":[{"krate":0,"index":9199},{"krate":0,"index":9200}],"decl_id":null,"docs":" PortBinding represents a binding between a host IP address and a host port. \n","sig":null,"attributes":[{"value":"/ PortBinding represents a binding between a host IP address and a host port. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":120973,"byte_end":121053,"line_start":3402,"line_end":3402,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":9199},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121303,"byte_end":121310,"line_start":3408,"line_end":3408,"column_start":9,"column_end":16},"name":"host_ip","qualname":"::models::PortBinding::host_ip","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9198},"children":[],"decl_id":null,"docs":" Host IP address that the container's port is mapped to.\n","sig":null,"attributes":[{"value":"/ Host IP address that the container's port is mapped to.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121151,"byte_end":121210,"line_start":3405,"line_end":3405,"column_start":5,"column_end":64}},{"value":"serde(rename = \"HostIp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121215,"byte_end":121242,"line_start":3406,"line_end":3406,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121247,"byte_end":121294,"line_start":3407,"line_end":3407,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9200},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121488,"byte_end":121497,"line_start":3413,"line_end":3413,"column_start":9,"column_end":18},"name":"host_port","qualname":"::models::PortBinding::host_port","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9198},"children":[],"decl_id":null,"docs":" Host port number that the container's port is mapped to.\n","sig":null,"attributes":[{"value":"/ Host port number that the container's port is mapped to.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121333,"byte_end":121393,"line_start":3410,"line_end":3410,"column_start":5,"column_end":65}},{"value":"serde(rename = \"HostPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121398,"byte_end":121427,"line_start":3411,"line_end":3411,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121432,"byte_end":121479,"line_start":3412,"line_end":3412,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121891,"byte_end":121898,"line_start":3419,"line_end":3419,"column_start":10,"column_end":17},"name":"PortMap","qualname":"::models::PortMap","value":"HashMap<String, Option<Vec<PortBinding>>>","parent":null,"children":[],"decl_id":null,"docs":" PortMap describes the mapping of container ports to host ports, using the container's port-number and protocol as key in the format `<port>/<protocol>`, for example, `80/udp`.  If a container's port is mapped for multiple protocols, separate entries are added to the mapping table. \n","sig":null,"attributes":[{"value":"/ PortMap describes the mapping of container ports to host ports, using the container's port-number and protocol as key in the format `<port>/<protocol>`, for example, `80/udp`.  If a container's port is mapped for multiple protocols, separate entries are added to the mapping table. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":121519,"byte_end":121805,"line_start":3417,"line_end":3417,"column_start":1,"column_end":287}}]},{"kind":"Struct","id":{"krate":0,"index":9260},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122024,"byte_end":122037,"line_start":3422,"line_end":3422,"column_start":12,"column_end":25},"name":"ProcessConfig","qualname":"::models::ProcessConfig","value":"ProcessConfig { privileged, user, tty, entrypoint, arguments }","parent":null,"children":[{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9261},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122136,"byte_end":122146,"line_start":3425,"line_end":3425,"column_start":9,"column_end":19},"name":"privileged","qualname":"::models::ProcessConfig::privileged","value":"std::option::Option<bool>","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"privileged\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122044,"byte_end":122075,"line_start":3423,"line_end":3423,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122080,"byte_end":122127,"line_start":3424,"line_end":3424,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9262},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122253,"byte_end":122257,"line_start":3429,"line_end":3429,"column_start":9,"column_end":13},"name":"user","qualname":"::models::ProcessConfig::user","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"user\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122167,"byte_end":122192,"line_start":3427,"line_end":3427,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122197,"byte_end":122244,"line_start":3428,"line_end":3428,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9263},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122365,"byte_end":122368,"line_start":3433,"line_end":3433,"column_start":9,"column_end":12},"name":"tty","qualname":"::models::ProcessConfig::tty","value":"std::option::Option<bool>","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"tty\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122280,"byte_end":122304,"line_start":3431,"line_end":3431,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122309,"byte_end":122356,"line_start":3432,"line_end":3432,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9264},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122481,"byte_end":122491,"line_start":3437,"line_end":3437,"column_start":9,"column_end":19},"name":"entrypoint","qualname":"::models::ProcessConfig::entrypoint","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"entrypoint\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122389,"byte_end":122420,"line_start":3435,"line_end":3435,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122425,"byte_end":122472,"line_start":3436,"line_end":3436,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9265},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122605,"byte_end":122614,"line_start":3441,"line_end":3441,"column_start":9,"column_end":18},"name":"arguments","qualname":"::models::ProcessConfig::arguments","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"arguments\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122514,"byte_end":122544,"line_start":3439,"line_end":3439,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122549,"byte_end":122596,"line_start":3440,"line_end":3440,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9331},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122720,"byte_end":122734,"line_start":3446,"line_end":3446,"column_start":12,"column_end":26},"name":"ProgressDetail","qualname":"::models::ProgressDetail","value":"ProgressDetail { current, total }","parent":null,"children":[{"krate":0,"index":9332},{"krate":0,"index":9333}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9332},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122830,"byte_end":122837,"line_start":3449,"line_end":3449,"column_start":9,"column_end":16},"name":"current","qualname":"::models::ProgressDetail::current","value":"std::option::Option<i64>","parent":{"krate":0,"index":9331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"current\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122741,"byte_end":122769,"line_start":3447,"line_end":3447,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122774,"byte_end":122821,"line_start":3448,"line_end":3448,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9333},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122944,"byte_end":122949,"line_start":3453,"line_end":3453,"column_start":9,"column_end":14},"name":"total","qualname":"::models::ProgressDetail::total","value":"std::option::Option<i64>","parent":{"krate":0,"index":9331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"total\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122857,"byte_end":122883,"line_start":3451,"line_end":3451,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":122888,"byte_end":122935,"line_start":3452,"line_end":3452,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9393},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123047,"byte_end":123060,"line_start":3458,"line_end":3458,"column_start":12,"column_end":25},"name":"PushImageInfo","qualname":"::models::PushImageInfo","value":"PushImageInfo { error, status, progress, progress_detail }","parent":null,"children":[{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396},{"krate":0,"index":9397}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9394},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123154,"byte_end":123159,"line_start":3461,"line_end":3461,"column_start":9,"column_end":14},"name":"error","qualname":"::models::PushImageInfo::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123067,"byte_end":123093,"line_start":3459,"line_end":3459,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123098,"byte_end":123145,"line_start":3460,"line_end":3460,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9395},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123270,"byte_end":123276,"line_start":3465,"line_end":3465,"column_start":9,"column_end":15},"name":"status","qualname":"::models::PushImageInfo::status","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123182,"byte_end":123209,"line_start":3463,"line_end":3463,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123214,"byte_end":123261,"line_start":3464,"line_end":3464,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9396},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123389,"byte_end":123397,"line_start":3469,"line_end":3469,"column_start":9,"column_end":17},"name":"progress","qualname":"::models::PushImageInfo::progress","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123299,"byte_end":123328,"line_start":3467,"line_end":3467,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123333,"byte_end":123380,"line_start":3468,"line_end":3468,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9397},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123516,"byte_end":123531,"line_start":3473,"line_end":3473,"column_start":9,"column_end":24},"name":"progress_detail","qualname":"::models::PushImageInfo::progress_detail","value":"std::option::Option<models::ProgressDetail>","parent":{"krate":0,"index":9393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"progressDetail\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123420,"byte_end":123455,"line_start":3471,"line_end":3471,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123460,"byte_end":123507,"line_start":3472,"line_end":3472,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9462},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123956,"byte_end":123963,"line_start":3486,"line_end":3486,"column_start":5,"column_end":12},"name":"UNKNOWN","qualname":"::models::Reachability::UNKNOWN","value":"Reachability::UNKNOWN","parent":{"krate":0,"index":9461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"unknown\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123923,"byte_end":123951,"line_start":3485,"line_end":3485,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9464},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124006,"byte_end":124017,"line_start":3488,"line_end":3488,"column_start":5,"column_end":16},"name":"UNREACHABLE","qualname":"::models::Reachability::UNREACHABLE","value":"Reachability::UNREACHABLE","parent":{"krate":0,"index":9461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"unreachable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123969,"byte_end":124001,"line_start":3487,"line_end":3487,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9466},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124058,"byte_end":124067,"line_start":3490,"line_end":3490,"column_start":5,"column_end":14},"name":"REACHABLE","qualname":"::models::Reachability::REACHABLE","value":"Reachability::REACHABLE","parent":{"krate":0,"index":9461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"reachable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124023,"byte_end":124053,"line_start":3489,"line_end":3489,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":9461},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123903,"byte_end":123915,"line_start":3484,"line_end":3484,"column_start":10,"column_end":22},"name":"Reachability","qualname":"::models::Reachability","value":"pub enum Reachability {\n\n    #[serde(rename = \"unknown\")]\n    UNKNOWN,\n\n    #[serde(rename = \"unreachable\")]\n    UNREACHABLE,\n\n    #[serde(rename = \"reachable\")]\n    REACHABLE,\n}","parent":null,"children":[{"krate":0,"index":9462},{"krate":0,"index":9464},{"krate":0,"index":9466}],"decl_id":null,"docs":" Reachability represents the reachability of a node.\n Enumeration of values.\n Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`\n which helps with FFI.\n","sig":null,"attributes":[{"value":"/ Reachability represents the reachability of a node.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123561,"byte_end":123616,"line_start":3477,"line_end":3477,"column_start":1,"column_end":56}},{"value":"/ Enumeration of values.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123617,"byte_end":123643,"line_start":3478,"line_end":3478,"column_start":1,"column_end":27}},{"value":"/ Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123644,"byte_end":123739,"line_start":3479,"line_end":3479,"column_start":1,"column_end":96}},{"value":"/ which helps with FFI.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123740,"byte_end":123765,"line_start":3480,"line_end":3480,"column_start":1,"column_end":26}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123766,"byte_end":123796,"line_start":3481,"line_end":3481,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":123797,"byte_end":123807,"line_start":3482,"line_end":3482,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":9530},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124939,"byte_end":124960,"line_start":3517,"line_end":3517,"column_start":12,"column_end":33},"name":"RegistryServiceConfig","qualname":"::models::RegistryServiceConfig","value":"RegistryServiceConfig { allow_nondistributable_artifacts_cid_rs, allow_nondistributable_artifacts_hostnames, insecure_registry_cid_rs, index_configs, mirrors }","parent":null,"children":[{"krate":0,"index":9531},{"krate":0,"index":9532},{"krate":0,"index":9533},{"krate":0,"index":9534},{"krate":0,"index":9535}],"decl_id":null,"docs":" RegistryServiceConfig stores daemon registry services configuration. \n","sig":null,"attributes":[{"value":"/ RegistryServiceConfig stores daemon registry services configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124786,"byte_end":124859,"line_start":3515,"line_end":3515,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":9531},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":126125,"byte_end":126164,"line_start":3521,"line_end":3521,"column_start":9,"column_end":48},"name":"allow_nondistributable_artifacts_cid_rs","qualname":"::models::RegistryServiceConfig::allow_nondistributable_artifacts_cid_rs","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9530},"children":[],"decl_id":null,"docs":" List of IP ranges to which nondistributable artifacts can be pushed, using the CIDR syntax [RFC 4632](https://tools.ietf.org/html/4632).  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior, and enables the daemon to push nondistributable artifacts to all registries whose resolved IP address is within the subnet described by the CIDR syntax.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.  > **Warning**: Nondistributable artifacts typically have restrictions > on how and where they can be distributed and shared. Only use this > feature to push artifacts to private registries and ensure that you > are in compliance with any terms that cover redistributing > nondistributable artifacts. \n","sig":null,"attributes":[{"value":"/ List of IP ranges to which nondistributable artifacts can be pushed, using the CIDR syntax [RFC 4632](https://tools.ietf.org/html/4632).  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior, and enables the daemon to push nondistributable artifacts to all registries whose resolved IP address is within the subnet described by the CIDR syntax.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.  > **Warning**: Nondistributable artifacts typically have restrictions > on how and where they can be distributed and shared. Only use this > feature to push artifacts to private registries and ensure that you > are in compliance with any terms that cover redistributing > nondistributable artifacts. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124967,"byte_end":126003,"line_start":3518,"line_end":3518,"column_start":5,"column_end":1041}},{"value":"serde(rename = \"AllowNondistributableArtifactsCIDRs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":126008,"byte_end":126064,"line_start":3519,"line_end":3519,"column_start":5,"column_end":61}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":126069,"byte_end":126116,"line_start":3520,"line_end":3520,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9532},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":127238,"byte_end":127280,"line_start":3526,"line_end":3526,"column_start":9,"column_end":51},"name":"allow_nondistributable_artifacts_hostnames","qualname":"::models::RegistryServiceConfig::allow_nondistributable_artifacts_hostnames","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9530},"children":[],"decl_id":null,"docs":" List of registry hostnames to which nondistributable artifacts can be pushed, using the format `<hostname>[:<port>]` or `<IP address>[:<port>]`.  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior for the specified registries.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.  > **Warning**: Nondistributable artifacts typically have restrictions > on how and where they can be distributed and shared. Only use this > feature to push artifacts to private registries and ensure that you > are in compliance with any terms that cover redistributing > nondistributable artifacts. \n","sig":null,"attributes":[{"value":"/ List of registry hostnames to which nondistributable artifacts can be pushed, using the format `<hostname>[:<port>]` or `<IP address>[:<port>]`.  Some images (for example, Windows base images) contain artifacts whose distribution is restricted by license. When these images are pushed to a registry, restricted artifacts are not included.  This configuration override this behavior for the specified registries.  This option is useful when pushing images containing nondistributable artifacts to a registry on an air-gapped network so hosts on that network can pull the images without connecting to another server.  > **Warning**: Nondistributable artifacts typically have restrictions > on how and where they can be distributed and shared. Only use this > feature to push artifacts to private registries and ensure that you > are in compliance with any terms that cover redistributing > nondistributable artifacts. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":126192,"byte_end":127112,"line_start":3523,"line_end":3523,"column_start":5,"column_end":925}},{"value":"serde(rename = \"AllowNondistributableArtifactsHostnames\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":127117,"byte_end":127177,"line_start":3524,"line_end":3524,"column_start":5,"column_end":65}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":127182,"byte_end":127229,"line_start":3525,"line_end":3525,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9533},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128485,"byte_end":128509,"line_start":3531,"line_end":3531,"column_start":9,"column_end":33},"name":"insecure_registry_cid_rs","qualname":"::models::RegistryServiceConfig::insecure_registry_cid_rs","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9530},"children":[],"decl_id":null,"docs":" List of IP ranges of insecure registries, using the CIDR syntax ([RFC 4632](https://tools.ietf.org/html/4632)). Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.  By default, local registries (`127.0.0.0/8`) are configured as insecure. All other registries are secure. Communicating with an insecure registry is not possible if the daemon assumes that registry is secure.  This configuration override this behavior, insecure communication with registries whose resolved IP address is within the subnet described by the CIDR syntax.  Registries can also be marked insecure by hostname. Those registries are listed under `IndexConfigs` and have their `Secure` field set to `false`.  > **Warning**: Using this option can be useful when running a local > registry, but introduces security vulnerabilities. This option > should therefore ONLY be used for testing purposes. For increased > security, users should add their CA to their system's list of trusted > CAs instead of enabling this option. \n","sig":null,"attributes":[{"value":"/ List of IP ranges of insecure registries, using the CIDR syntax ([RFC 4632](https://tools.ietf.org/html/4632)). Insecure registries accept un-encrypted (HTTP) and/or untrusted (HTTPS with certificates from unknown CAs) communication.  By default, local registries (`127.0.0.0/8`) are configured as insecure. All other registries are secure. Communicating with an insecure registry is not possible if the daemon assumes that registry is secure.  This configuration override this behavior, insecure communication with registries whose resolved IP address is within the subnet described by the CIDR syntax.  Registries can also be marked insecure by hostname. Those registries are listed under `IndexConfigs` and have their `Secure` field set to `false`.  > **Warning**: Using this option can be useful when running a local > registry, but introduces security vulnerabilities. This option > should therefore ONLY be used for testing purposes. For increased > security, users should add their CA to their system's list of trusted > CAs instead of enabling this option. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":127308,"byte_end":128377,"line_start":3528,"line_end":3528,"column_start":5,"column_end":1074}},{"value":"serde(rename = \"InsecureRegistryCIDRs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128382,"byte_end":128424,"line_start":3529,"line_end":3529,"column_start":5,"column_end":47}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128429,"byte_end":128476,"line_start":3530,"line_end":3530,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9534},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128631,"byte_end":128644,"line_start":3535,"line_end":3535,"column_start":9,"column_end":22},"name":"index_configs","qualname":"::models::RegistryServiceConfig::index_configs","value":"std::option::Option<std::collections::HashMap<std::string::String, models::IndexInfo>>","parent":{"krate":0,"index":9530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"IndexConfigs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128537,"byte_end":128570,"line_start":3533,"line_end":3533,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128575,"byte_end":128622,"line_start":3534,"line_end":3534,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9535},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128869,"byte_end":128876,"line_start":3540,"line_end":3540,"column_start":9,"column_end":16},"name":"mirrors","qualname":"::models::RegistryServiceConfig::mirrors","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9530},"children":[],"decl_id":null,"docs":" List of registry URLs that act as a mirror for the official (`docker.io`) registry. \n","sig":null,"attributes":[{"value":"/ List of registry URLs that act as a mirror for the official (`docker.io`) registry. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128687,"byte_end":128775,"line_start":3537,"line_end":3537,"column_start":5,"column_end":93}},{"value":"serde(rename = \"Mirrors\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128780,"byte_end":128808,"line_start":3538,"line_end":3538,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128813,"byte_end":128860,"line_start":3539,"line_end":3539,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9601},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129081,"byte_end":129095,"line_start":3546,"line_end":3546,"column_start":12,"column_end":26},"name":"ResourceObject","qualname":"::models::ResourceObject","value":"ResourceObject { nano_cp_us, memory_bytes, generic_resources }","parent":null,"children":[{"krate":0,"index":9602},{"krate":0,"index":9603},{"krate":0,"index":9604}],"decl_id":null,"docs":" An object describing the resources which can be advertised by a node and requested by a task. \n","sig":null,"attributes":[{"value":"/ An object describing the resources which can be advertised by a node and requested by a task. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":128903,"byte_end":129001,"line_start":3544,"line_end":3544,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":9602},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129192,"byte_end":129202,"line_start":3549,"line_end":3549,"column_start":9,"column_end":19},"name":"nano_cp_us","qualname":"::models::ResourceObject::nano_cp_us","value":"std::option::Option<i64>","parent":{"krate":0,"index":9601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NanoCPUs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129102,"byte_end":129131,"line_start":3547,"line_end":3547,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129136,"byte_end":129183,"line_start":3548,"line_end":3548,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9603},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129315,"byte_end":129327,"line_start":3553,"line_end":3553,"column_start":9,"column_end":21},"name":"memory_bytes","qualname":"::models::ResourceObject::memory_bytes","value":"std::option::Option<i64>","parent":{"krate":0,"index":9601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"MemoryBytes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129222,"byte_end":129254,"line_start":3551,"line_end":3551,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129259,"byte_end":129306,"line_start":3552,"line_end":3552,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9604},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129445,"byte_end":129462,"line_start":3557,"line_end":3557,"column_start":9,"column_end":26},"name":"generic_resources","qualname":"::models::ResourceObject::generic_resources","value":"std::option::Option<models::GenericResourcesInner>","parent":{"krate":0,"index":9601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"GenericResources\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129347,"byte_end":129384,"line_start":3555,"line_end":3555,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129389,"byte_end":129436,"line_start":3556,"line_end":3556,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9666},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129632,"byte_end":129641,"line_start":3563,"line_end":3563,"column_start":12,"column_end":21},"name":"Resources","qualname":"::models::Resources","value":"Resources { cpu_shares, memory, cgroup_parent, blkio_weight, blkio_weight_device, blkio_device_read_bps, blkio_device_write_bps, blkio_device_read_i_ops, blkio_device_write_i_ops, cpu_period, cpu_quota, cpu_realtime_period, cpu_realtime_runtime, cpuset_cpus, cpuset_mems, devices, device_cgroup_rules, device_requests, kernel_memory, kernel_memory_tcp, memory_reservation, memory_swap, memory_swappiness, nano_cp_us, oom_kill_disable, init, pids_limit, ulimits, cpu_count, cpu_percent, io_maximum_i_ops, io_maximum_bandwidth }","parent":null,"children":[{"krate":0,"index":9667},{"krate":0,"index":9668},{"krate":0,"index":9669},{"krate":0,"index":9670},{"krate":0,"index":9671},{"krate":0,"index":9672},{"krate":0,"index":9673},{"krate":0,"index":9674},{"krate":0,"index":9675},{"krate":0,"index":9676},{"krate":0,"index":9677},{"krate":0,"index":9678},{"krate":0,"index":9679},{"krate":0,"index":9680},{"krate":0,"index":9681},{"krate":0,"index":9682},{"krate":0,"index":9683},{"krate":0,"index":9684},{"krate":0,"index":9685},{"krate":0,"index":9686},{"krate":0,"index":9687},{"krate":0,"index":9688},{"krate":0,"index":9689},{"krate":0,"index":9690},{"krate":0,"index":9691},{"krate":0,"index":9692},{"krate":0,"index":9693},{"krate":0,"index":9694},{"krate":0,"index":9695},{"krate":0,"index":9696},{"krate":0,"index":9697},{"krate":0,"index":9698}],"decl_id":null,"docs":" A container's resources (cgroups config, ulimits, etc)\n","sig":null,"attributes":[{"value":"/ A container's resources (cgroups config, ulimits, etc)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129494,"byte_end":129552,"line_start":3561,"line_end":3561,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":9667},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129840,"byte_end":129850,"line_start":3567,"line_end":3567,"column_start":9,"column_end":19},"name":"cpu_shares","qualname":"::models::Resources::cpu_shares","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" An integer value representing this container's relative CPU weight versus other containers. \n","sig":null,"attributes":[{"value":"/ An integer value representing this container's relative CPU weight versus other containers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129648,"byte_end":129744,"line_start":3564,"line_end":3564,"column_start":5,"column_end":101}},{"value":"serde(rename = \"CpuShares\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129749,"byte_end":129779,"line_start":3565,"line_end":3565,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129784,"byte_end":129831,"line_start":3566,"line_end":3566,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9668},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129989,"byte_end":129995,"line_start":3572,"line_end":3572,"column_start":9,"column_end":15},"name":"memory","qualname":"::models::Resources::memory","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Memory limit in bytes.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129870,"byte_end":129896,"line_start":3569,"line_end":3569,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Memory\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129901,"byte_end":129928,"line_start":3570,"line_end":3570,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":129933,"byte_end":129980,"line_start":3571,"line_end":3571,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9669},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130345,"byte_end":130358,"line_start":3577,"line_end":3577,"column_start":9,"column_end":22},"name":"cgroup_parent","qualname":"::models::Resources::cgroup_parent","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist. \n","sig":null,"attributes":[{"value":"/ Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130015,"byte_end":130246,"line_start":3574,"line_end":3574,"column_start":5,"column_end":236}},{"value":"serde(rename = \"CgroupParent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130251,"byte_end":130284,"line_start":3575,"line_end":3575,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130289,"byte_end":130336,"line_start":3576,"line_end":3576,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9670},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130517,"byte_end":130529,"line_start":3582,"line_end":3582,"column_start":9,"column_end":21},"name":"blkio_weight","qualname":"::models::Resources::blkio_weight","value":"std::option::Option<u16>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Block IO weight (relative weight).\n","sig":null,"attributes":[{"value":"/ Block IO weight (relative weight).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130381,"byte_end":130419,"line_start":3579,"line_end":3579,"column_start":5,"column_end":43}},{"value":"serde(rename = \"BlkioWeight\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130424,"byte_end":130456,"line_start":3580,"line_end":3580,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130461,"byte_end":130508,"line_start":3581,"line_end":3581,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9671},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130770,"byte_end":130789,"line_start":3587,"line_end":3587,"column_start":9,"column_end":28},"name":"blkio_weight_device","qualname":"::models::Resources::blkio_weight_device","value":"std::option::Option<std::vec::Vec<models::ResourcesBlkioWeightDevice>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Block IO weight (relative device weight) in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Weight\\\": weight}] ``` \n","sig":null,"attributes":[{"value":"/ Block IO weight (relative device weight) in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Weight\\\": weight}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130549,"byte_end":130666,"line_start":3584,"line_end":3584,"column_start":5,"column_end":122}},{"value":"serde(rename = \"BlkioWeightDevice\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130671,"byte_end":130709,"line_start":3585,"line_end":3585,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130714,"byte_end":130761,"line_start":3586,"line_end":3586,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9672},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131064,"byte_end":131085,"line_start":3592,"line_end":3592,"column_start":9,"column_end":30},"name":"blkio_device_read_bps","qualname":"::models::Resources::blkio_device_read_bps","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Limit read rate (bytes per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit read rate (bytes per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130837,"byte_end":130959,"line_start":3589,"line_end":3589,"column_start":5,"column_end":127}},{"value":"serde(rename = \"BlkioDeviceReadBps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":130964,"byte_end":131003,"line_start":3590,"line_end":3590,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131008,"byte_end":131055,"line_start":3591,"line_end":3591,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9673},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131348,"byte_end":131370,"line_start":3597,"line_end":3597,"column_start":9,"column_end":31},"name":"blkio_device_write_bps","qualname":"::models::Resources::blkio_device_write_bps","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Limit write rate (bytes per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit write rate (bytes per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131121,"byte_end":131242,"line_start":3594,"line_end":3594,"column_start":5,"column_end":126}},{"value":"serde(rename = \"BlkioDeviceWriteBps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131247,"byte_end":131287,"line_start":3595,"line_end":3595,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131292,"byte_end":131339,"line_start":3596,"line_end":3596,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9674},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131631,"byte_end":131654,"line_start":3602,"line_end":3602,"column_start":9,"column_end":32},"name":"blkio_device_read_i_ops","qualname":"::models::Resources::blkio_device_read_i_ops","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Limit read rate (IO per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit read rate (IO per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131406,"byte_end":131525,"line_start":3599,"line_end":3599,"column_start":5,"column_end":124}},{"value":"serde(rename = \"BlkioDeviceReadIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131530,"byte_end":131570,"line_start":3600,"line_end":3600,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131575,"byte_end":131622,"line_start":3601,"line_end":3601,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9675},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131915,"byte_end":131939,"line_start":3607,"line_end":3607,"column_start":9,"column_end":33},"name":"blkio_device_write_i_ops","qualname":"::models::Resources::blkio_device_write_i_ops","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Limit write rate (IO per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit write rate (IO per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131690,"byte_end":131808,"line_start":3604,"line_end":3604,"column_start":5,"column_end":123}},{"value":"serde(rename = \"BlkioDeviceWriteIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131813,"byte_end":131854,"line_start":3605,"line_end":3605,"column_start":5,"column_end":46}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131859,"byte_end":131906,"line_start":3606,"line_end":3606,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9676},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132118,"byte_end":132128,"line_start":3612,"line_end":3612,"column_start":9,"column_end":19},"name":"cpu_period","qualname":"::models::Resources::cpu_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" The length of a CPU period in microseconds.\n","sig":null,"attributes":[{"value":"/ The length of a CPU period in microseconds.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":131975,"byte_end":132022,"line_start":3609,"line_end":3609,"column_start":5,"column_end":52}},{"value":"serde(rename = \"CpuPeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132027,"byte_end":132057,"line_start":3610,"line_end":3610,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132062,"byte_end":132109,"line_start":3611,"line_end":3611,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9677},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132316,"byte_end":132325,"line_start":3617,"line_end":3617,"column_start":9,"column_end":18},"name":"cpu_quota","qualname":"::models::Resources::cpu_quota","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Microseconds of CPU time that the container can get in a CPU period. \n","sig":null,"attributes":[{"value":"/ Microseconds of CPU time that the container can get in a CPU period. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132148,"byte_end":132221,"line_start":3614,"line_end":3614,"column_start":5,"column_end":78}},{"value":"serde(rename = \"CpuQuota\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132226,"byte_end":132255,"line_start":3615,"line_end":3615,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132260,"byte_end":132307,"line_start":3616,"line_end":3616,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9678},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132566,"byte_end":132585,"line_start":3622,"line_end":3622,"column_start":9,"column_end":28},"name":"cpu_realtime_period","qualname":"::models::Resources::cpu_realtime_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. \n","sig":null,"attributes":[{"value":"/ The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132345,"byte_end":132462,"line_start":3619,"line_end":3619,"column_start":5,"column_end":122}},{"value":"serde(rename = \"CpuRealtimePeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132467,"byte_end":132505,"line_start":3620,"line_end":3620,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132510,"byte_end":132557,"line_start":3621,"line_end":3621,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9679},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132828,"byte_end":132848,"line_start":3627,"line_end":3627,"column_start":9,"column_end":29},"name":"cpu_realtime_runtime","qualname":"::models::Resources::cpu_realtime_runtime","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. \n","sig":null,"attributes":[{"value":"/ The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132605,"byte_end":132723,"line_start":3624,"line_end":3624,"column_start":5,"column_end":123}},{"value":"serde(rename = \"CpuRealtimeRuntime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132728,"byte_end":132767,"line_start":3625,"line_end":3625,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132772,"byte_end":132819,"line_start":3626,"line_end":3626,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9680},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133024,"byte_end":133035,"line_start":3632,"line_end":3632,"column_start":9,"column_end":20},"name":"cpuset_cpus","qualname":"::models::Resources::cpuset_cpus","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" CPUs in which to allow execution (e.g., `0-3`, `0,1`). \n","sig":null,"attributes":[{"value":"/ CPUs in which to allow execution (e.g., `0-3`, `0,1`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132868,"byte_end":132927,"line_start":3629,"line_end":3629,"column_start":5,"column_end":64}},{"value":"serde(rename = \"CpusetCpus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132932,"byte_end":132963,"line_start":3630,"line_end":3630,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":132968,"byte_end":133015,"line_start":3631,"line_end":3631,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9681},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133251,"byte_end":133262,"line_start":3637,"line_end":3637,"column_start":9,"column_end":20},"name":"cpuset_mems","qualname":"::models::Resources::cpuset_mems","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. \n","sig":null,"attributes":[{"value":"/ Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133058,"byte_end":133154,"line_start":3634,"line_end":3634,"column_start":5,"column_end":101}},{"value":"serde(rename = \"CpusetMems\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133159,"byte_end":133190,"line_start":3635,"line_end":3635,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133195,"byte_end":133242,"line_start":3636,"line_end":3636,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9682},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133425,"byte_end":133432,"line_start":3642,"line_end":3642,"column_start":9,"column_end":16},"name":"devices","qualname":"::models::Resources::devices","value":"std::option::Option<std::vec::Vec<models::DeviceMapping>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" A list of devices to add to the container.\n","sig":null,"attributes":[{"value":"/ A list of devices to add to the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133285,"byte_end":133331,"line_start":3639,"line_end":3639,"column_start":5,"column_end":51}},{"value":"serde(rename = \"Devices\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133336,"byte_end":133364,"line_start":3640,"line_end":3640,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133369,"byte_end":133416,"line_start":3641,"line_end":3641,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9683},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133623,"byte_end":133642,"line_start":3647,"line_end":3647,"column_start":9,"column_end":28},"name":"device_cgroup_rules","qualname":"::models::Resources::device_cgroup_rules","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" a list of cgroup rules to apply to the container\n","sig":null,"attributes":[{"value":"/ a list of cgroup rules to apply to the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133467,"byte_end":133519,"line_start":3644,"line_end":3644,"column_start":5,"column_end":57}},{"value":"serde(rename = \"DeviceCgroupRules\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133524,"byte_end":133562,"line_start":3645,"line_end":3645,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133567,"byte_end":133614,"line_start":3646,"line_end":3646,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9684},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133836,"byte_end":133851,"line_start":3652,"line_end":3652,"column_start":9,"column_end":24},"name":"device_requests","qualname":"::models::Resources::device_requests","value":"std::option::Option<std::vec::Vec<models::DeviceRequest>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" A list of requests for devices to be sent to device drivers. \n","sig":null,"attributes":[{"value":"/ A list of requests for devices to be sent to device drivers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133670,"byte_end":133735,"line_start":3649,"line_end":3649,"column_start":5,"column_end":70}},{"value":"serde(rename = \"DeviceRequests\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133740,"byte_end":133775,"line_start":3650,"line_end":3650,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133780,"byte_end":133827,"line_start":3651,"line_end":3651,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9685},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134018,"byte_end":134031,"line_start":3657,"line_end":3657,"column_start":9,"column_end":22},"name":"kernel_memory","qualname":"::models::Resources::kernel_memory","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Kernel memory limit in bytes.\n","sig":null,"attributes":[{"value":"/ Kernel memory limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133886,"byte_end":133919,"line_start":3654,"line_end":3654,"column_start":5,"column_end":38}},{"value":"serde(rename = \"KernelMemory\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133924,"byte_end":133957,"line_start":3655,"line_end":3655,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":133962,"byte_end":134009,"line_start":3656,"line_end":3656,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9686},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134208,"byte_end":134225,"line_start":3662,"line_end":3662,"column_start":9,"column_end":26},"name":"kernel_memory_tcp","qualname":"::models::Resources::kernel_memory_tcp","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Hard limit for kernel TCP buffer memory (in bytes).\n","sig":null,"attributes":[{"value":"/ Hard limit for kernel TCP buffer memory (in bytes).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134051,"byte_end":134106,"line_start":3659,"line_end":3659,"column_start":5,"column_end":60}},{"value":"serde(rename = \"KernelMemoryTCP\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134111,"byte_end":134147,"line_start":3660,"line_end":3660,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134152,"byte_end":134199,"line_start":3661,"line_end":3661,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9687},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134380,"byte_end":134398,"line_start":3667,"line_end":3667,"column_start":9,"column_end":27},"name":"memory_reservation","qualname":"::models::Resources::memory_reservation","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Memory soft limit in bytes.\n","sig":null,"attributes":[{"value":"/ Memory soft limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134245,"byte_end":134276,"line_start":3664,"line_end":3664,"column_start":5,"column_end":36}},{"value":"serde(rename = \"MemoryReservation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134281,"byte_end":134319,"line_start":3665,"line_end":3665,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134324,"byte_end":134371,"line_start":3666,"line_end":3666,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9688},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134593,"byte_end":134604,"line_start":3672,"line_end":3672,"column_start":9,"column_end":20},"name":"memory_swap","qualname":"::models::Resources::memory_swap","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Total memory limit (memory + swap). Set as `-1` to enable unlimited swap. \n","sig":null,"attributes":[{"value":"/ Total memory limit (memory + swap). Set as `-1` to enable unlimited swap. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134418,"byte_end":134496,"line_start":3669,"line_end":3669,"column_start":5,"column_end":83}},{"value":"serde(rename = \"MemorySwap\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134501,"byte_end":134532,"line_start":3670,"line_end":3670,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134537,"byte_end":134584,"line_start":3671,"line_end":3671,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9689},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134816,"byte_end":134833,"line_start":3677,"line_end":3677,"column_start":9,"column_end":26},"name":"memory_swappiness","qualname":"::models::Resources::memory_swappiness","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100. \n","sig":null,"attributes":[{"value":"/ Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134624,"byte_end":134713,"line_start":3674,"line_end":3674,"column_start":5,"column_end":94}},{"value":"serde(rename = \"MemorySwappiness\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134718,"byte_end":134755,"line_start":3675,"line_end":3675,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134760,"byte_end":134807,"line_start":3676,"line_end":3676,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9690},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134995,"byte_end":135005,"line_start":3682,"line_end":3682,"column_start":9,"column_end":19},"name":"nano_cp_us","qualname":"::models::Resources::nano_cp_us","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" CPU quota in units of 10<sup>-9</sup> CPUs.\n","sig":null,"attributes":[{"value":"/ CPU quota in units of 10<sup>-9</sup> CPUs.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134853,"byte_end":134900,"line_start":3679,"line_end":3679,"column_start":5,"column_end":52}},{"value":"serde(rename = \"NanoCPUs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134905,"byte_end":134934,"line_start":3680,"line_end":3680,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":134939,"byte_end":134986,"line_start":3681,"line_end":3681,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9691},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135167,"byte_end":135183,"line_start":3687,"line_end":3687,"column_start":9,"column_end":25},"name":"oom_kill_disable","qualname":"::models::Resources::oom_kill_disable","value":"std::option::Option<bool>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Disable OOM Killer for the container.\n","sig":null,"attributes":[{"value":"/ Disable OOM Killer for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135025,"byte_end":135066,"line_start":3684,"line_end":3684,"column_start":5,"column_end":46}},{"value":"serde(rename = \"OomKillDisable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135071,"byte_end":135106,"line_start":3685,"line_end":3685,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135111,"byte_end":135158,"line_start":3686,"line_end":3686,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9692},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135462,"byte_end":135466,"line_start":3692,"line_end":3692,"column_start":9,"column_end":13},"name":"init","qualname":"::models::Resources::init","value":"std::option::Option<bool>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. \n","sig":null,"attributes":[{"value":"/ Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135204,"byte_end":135371,"line_start":3689,"line_end":3689,"column_start":5,"column_end":172}},{"value":"serde(rename = \"Init\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135376,"byte_end":135401,"line_start":3690,"line_end":3690,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135406,"byte_end":135453,"line_start":3691,"line_end":3691,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9693},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135674,"byte_end":135684,"line_start":3697,"line_end":3697,"column_start":9,"column_end":19},"name":"pids_limit","qualname":"::models::Resources::pids_limit","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change. \n","sig":null,"attributes":[{"value":"/ Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135487,"byte_end":135578,"line_start":3694,"line_end":3694,"column_start":5,"column_end":96}},{"value":"serde(rename = \"PidsLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135583,"byte_end":135613,"line_start":3695,"line_end":3695,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135618,"byte_end":135665,"line_start":3696,"line_end":3696,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9694},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135930,"byte_end":135937,"line_start":3702,"line_end":3702,"column_start":9,"column_end":16},"name":"ulimits","qualname":"::models::Resources::ulimits","value":"std::option::Option<std::vec::Vec<models::ResourcesUlimits>>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" A list of resource limits to set in the container. For example:  ``` {\\\"Name\\\": \\\"nofile\\\", \\\"Soft\\\": 1024, \\\"Hard\\\": 2048} ``` \n","sig":null,"attributes":[{"value":"/ A list of resource limits to set in the container. For example:  ``` {\\\"Name\\\": \\\"nofile\\\", \\\"Soft\\\": 1024, \\\"Hard\\\": 2048} ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135704,"byte_end":135836,"line_start":3699,"line_end":3699,"column_start":5,"column_end":137}},{"value":"serde(rename = \"Ulimits\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135841,"byte_end":135869,"line_start":3700,"line_end":3700,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135874,"byte_end":135921,"line_start":3701,"line_end":3701,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9695},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136289,"byte_end":136298,"line_start":3707,"line_end":3707,"column_start":9,"column_end":18},"name":"cpu_count","qualname":"::models::Resources::cpu_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. \n","sig":null,"attributes":[{"value":"/ The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":135975,"byte_end":136194,"line_start":3704,"line_end":3704,"column_start":5,"column_end":224}},{"value":"serde(rename = \"CpuCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136199,"byte_end":136228,"line_start":3705,"line_end":3705,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136233,"byte_end":136280,"line_start":3706,"line_end":3706,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9696},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136652,"byte_end":136663,"line_start":3712,"line_end":3712,"column_start":9,"column_end":20},"name":"cpu_percent","qualname":"::models::Resources::cpu_percent","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. \n","sig":null,"attributes":[{"value":"/ The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136318,"byte_end":136555,"line_start":3709,"line_end":3709,"column_start":5,"column_end":242}},{"value":"serde(rename = \"CpuPercent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136560,"byte_end":136591,"line_start":3710,"line_end":3710,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136596,"byte_end":136643,"line_start":3711,"line_end":3711,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9697},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136845,"byte_end":136861,"line_start":3717,"line_end":3717,"column_start":9,"column_end":25},"name":"io_maximum_i_ops","qualname":"::models::Resources::io_maximum_i_ops","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Maximum IOps for the container system drive (Windows only)\n","sig":null,"attributes":[{"value":"/ Maximum IOps for the container system drive (Windows only)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136683,"byte_end":136745,"line_start":3714,"line_end":3714,"column_start":5,"column_end":67}},{"value":"serde(rename = \"IOMaximumIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136750,"byte_end":136784,"line_start":3715,"line_end":3715,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136789,"byte_end":136836,"line_start":3716,"line_end":3716,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9698},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137068,"byte_end":137088,"line_start":3722,"line_end":3722,"column_start":9,"column_end":29},"name":"io_maximum_bandwidth","qualname":"::models::Resources::io_maximum_bandwidth","value":"std::option::Option<i64>","parent":{"krate":0,"index":9666},"children":[],"decl_id":null,"docs":" Maximum IO in bytes per second for the container system drive (Windows only). \n","sig":null,"attributes":[{"value":"/ Maximum IO in bytes per second for the container system drive (Windows only). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136881,"byte_end":136963,"line_start":3719,"line_end":3719,"column_start":5,"column_end":87}},{"value":"serde(rename = \"IOMaximumBandwidth\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":136968,"byte_end":137007,"line_start":3720,"line_end":3720,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137012,"byte_end":137059,"line_start":3721,"line_end":3721,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9818},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137186,"byte_end":137212,"line_start":3727,"line_end":3727,"column_start":12,"column_end":38},"name":"ResourcesBlkioWeightDevice","qualname":"::models::ResourcesBlkioWeightDevice","value":"ResourcesBlkioWeightDevice { path, weight }","parent":null,"children":[{"krate":0,"index":9819},{"krate":0,"index":9820}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9819},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137305,"byte_end":137309,"line_start":3730,"line_end":3730,"column_start":9,"column_end":13},"name":"path","qualname":"::models::ResourcesBlkioWeightDevice::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137219,"byte_end":137244,"line_start":3728,"line_end":3728,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137249,"byte_end":137296,"line_start":3729,"line_end":3729,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9820},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137420,"byte_end":137426,"line_start":3734,"line_end":3734,"column_start":9,"column_end":15},"name":"weight","qualname":"::models::ResourcesBlkioWeightDevice::weight","value":"std::option::Option<usize>","parent":{"krate":0,"index":9818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Weight\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137332,"byte_end":137359,"line_start":3732,"line_end":3732,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137364,"byte_end":137411,"line_start":3733,"line_end":3733,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9880},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137526,"byte_end":137542,"line_start":3739,"line_end":3739,"column_start":12,"column_end":28},"name":"ResourcesUlimits","qualname":"::models::ResourcesUlimits","value":"ResourcesUlimits { name, soft, hard }","parent":null,"children":[{"krate":0,"index":9881},{"krate":0,"index":9882},{"krate":0,"index":9883}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9881},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137658,"byte_end":137662,"line_start":3743,"line_end":3743,"column_start":9,"column_end":13},"name":"name","qualname":"::models::ResourcesUlimits::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":9880},"children":[],"decl_id":null,"docs":" Name of ulimit\n","sig":null,"attributes":[{"value":"/ Name of ulimit","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137549,"byte_end":137567,"line_start":3740,"line_end":3740,"column_start":5,"column_end":23}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137572,"byte_end":137597,"line_start":3741,"line_end":3741,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137602,"byte_end":137649,"line_start":3742,"line_end":3742,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9882},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137790,"byte_end":137794,"line_start":3748,"line_end":3748,"column_start":9,"column_end":13},"name":"soft","qualname":"::models::ResourcesUlimits::soft","value":"std::option::Option<i64>","parent":{"krate":0,"index":9880},"children":[],"decl_id":null,"docs":" Soft limit\n","sig":null,"attributes":[{"value":"/ Soft limit","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137685,"byte_end":137699,"line_start":3745,"line_end":3745,"column_start":5,"column_end":19}},{"value":"serde(rename = \"Soft\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137704,"byte_end":137729,"line_start":3746,"line_end":3746,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137734,"byte_end":137781,"line_start":3747,"line_end":3747,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9883},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137919,"byte_end":137923,"line_start":3753,"line_end":3753,"column_start":9,"column_end":13},"name":"hard","qualname":"::models::ResourcesUlimits::hard","value":"std::option::Option<i64>","parent":{"krate":0,"index":9880},"children":[],"decl_id":null,"docs":" Hard limit\n","sig":null,"attributes":[{"value":"/ Hard limit","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137814,"byte_end":137828,"line_start":3750,"line_end":3750,"column_start":5,"column_end":19}},{"value":"serde(rename = \"Hard\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137833,"byte_end":137858,"line_start":3751,"line_end":3751,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137863,"byte_end":137910,"line_start":3752,"line_end":3752,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":9945},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138239,"byte_end":138252,"line_start":3759,"line_end":3759,"column_start":12,"column_end":25},"name":"RestartPolicy","qualname":"::models::RestartPolicy","value":"RestartPolicy { name, maximum_retry_count }","parent":null,"children":[{"krate":0,"index":9946},{"krate":0,"index":9947}],"decl_id":null,"docs":" The behavior to apply when the container exits. The default is not to restart.  An ever increasing delay (double the previous delay, starting at 100ms) is added before each restart to prevent flooding the server. \n","sig":null,"attributes":[{"value":"/ The behavior to apply when the container exits. The default is not to restart.  An ever increasing delay (double the previous delay, starting at 100ms) is added before each restart to prevent flooding the server. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":137942,"byte_end":138159,"line_start":3757,"line_end":3757,"column_start":1,"column_end":218}}]},{"kind":"Field","id":{"krate":0,"index":9946},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138575,"byte_end":138579,"line_start":3763,"line_end":3763,"column_start":9,"column_end":13},"name":"name","qualname":"::models::RestartPolicy::name","value":"std::option::Option<models::RestartPolicyNameEnum>","parent":{"krate":0,"index":9945},"children":[],"decl_id":null,"docs":" - Empty string means not to restart - `always` Always restart - `unless-stopped` Restart always except when the user has manually stopped the container - `on-failure` Restart only when the container exit code is non-zero \n","sig":null,"attributes":[{"value":"/ - Empty string means not to restart - `always` Always restart - `unless-stopped` Restart always except when the user has manually stopped the container - `on-failure` Restart only when the container exit code is non-zero ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138259,"byte_end":138484,"line_start":3760,"line_end":3760,"column_start":5,"column_end":230}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138489,"byte_end":138514,"line_start":3761,"line_end":3761,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138519,"byte_end":138566,"line_start":3762,"line_end":3762,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":9947},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138797,"byte_end":138816,"line_start":3768,"line_end":3768,"column_start":9,"column_end":28},"name":"maximum_retry_count","qualname":"::models::RestartPolicy::maximum_retry_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":9945},"children":[],"decl_id":null,"docs":" If `on-failure` is used, the number of times to retry before giving up. \n","sig":null,"attributes":[{"value":"/ If `on-failure` is used, the number of times to retry before giving up. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138617,"byte_end":138693,"line_start":3765,"line_end":3765,"column_start":5,"column_end":81}},{"value":"serde(rename = \"MaximumRetryCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138698,"byte_end":138736,"line_start":3766,"line_end":3766,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138741,"byte_end":138788,"line_start":3767,"line_end":3767,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10008},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139016,"byte_end":139021,"line_start":3776,"line_end":3776,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::RestartPolicyNameEnum::EMPTY","value":"RestartPolicyNameEnum::EMPTY","parent":{"krate":0,"index":10007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138990,"byte_end":139011,"line_start":3775,"line_end":3775,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10010},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139059,"byte_end":139065,"line_start":3778,"line_end":3778,"column_start":5,"column_end":11},"name":"ALWAYS","qualname":"::models::RestartPolicyNameEnum::ALWAYS","value":"RestartPolicyNameEnum::ALWAYS","parent":{"krate":0,"index":10007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"always\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139027,"byte_end":139054,"line_start":3777,"line_end":3777,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10012},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139111,"byte_end":139125,"line_start":3780,"line_end":3780,"column_start":5,"column_end":19},"name":"UNLESS_STOPPED","qualname":"::models::RestartPolicyNameEnum::UNLESS_STOPPED","value":"RestartPolicyNameEnum::UNLESS_STOPPED","parent":{"krate":0,"index":10007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"unless-stopped\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139071,"byte_end":139106,"line_start":3779,"line_end":3779,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10014},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139167,"byte_end":139177,"line_start":3782,"line_end":3782,"column_start":5,"column_end":15},"name":"ON_FAILURE","qualname":"::models::RestartPolicyNameEnum::ON_FAILURE","value":"RestartPolicyNameEnum::ON_FAILURE","parent":{"krate":0,"index":10007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"on-failure\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139131,"byte_end":139162,"line_start":3781,"line_end":3781,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10016},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139211,"byte_end":139213,"line_start":3784,"line_end":3784,"column_start":5,"column_end":7},"name":"NO","qualname":"::models::RestartPolicyNameEnum::NO","value":"RestartPolicyNameEnum::NO","parent":{"krate":0,"index":10007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"no\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139183,"byte_end":139206,"line_start":3783,"line_end":3783,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":10007},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138961,"byte_end":138982,"line_start":3774,"line_end":3774,"column_start":10,"column_end":31},"name":"RestartPolicyNameEnum","qualname":"::models::RestartPolicyNameEnum","value":"pub enum RestartPolicyNameEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"always\")]\n    ALWAYS,\n\n    #[serde(rename = \"unless-stopped\")]\n    UNLESS_STOPPED,\n\n    #[serde(rename = \"on-failure\")]\n    ON_FAILURE,\n\n    #[serde(rename = \"no\")]\n    NO,\n}","parent":null,"children":[{"krate":0,"index":10008},{"krate":0,"index":10010},{"krate":0,"index":10012},{"krate":0,"index":10014},{"krate":0,"index":10016}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":138835,"byte_end":138865,"line_start":3772,"line_end":3772,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10084},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141035,"byte_end":141042,"line_start":3828,"line_end":3828,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::models::Runtime","value":"Runtime { path, runtime_args }","parent":null,"children":[{"krate":0,"index":10085},{"krate":0,"index":10086}],"decl_id":null,"docs":" Runtime describes an [OCI compliant](https://github.com/opencontainers/runtime-spec) runtime.  The runtime is invoked by the daemon via the `containerd` daemon. OCI runtimes act as an interface to the Linux kernel namespaces, cgroups, and SELinux. \n","sig":null,"attributes":[{"value":"/ Runtime describes an [OCI compliant](https://github.com/opencontainers/runtime-spec) runtime.  The runtime is invoked by the daemon via the `containerd` daemon. OCI runtimes act as an interface to the Linux kernel namespaces, cgroups, and SELinux. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":140703,"byte_end":140955,"line_start":3826,"line_end":3826,"column_start":1,"column_end":253}}]},{"kind":"Field","id":{"krate":0,"index":10085},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141306,"byte_end":141310,"line_start":3832,"line_end":3832,"column_start":9,"column_end":13},"name":"path","qualname":"::models::Runtime::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10084},"children":[],"decl_id":null,"docs":" Name and, optional, path, of the OCI executable binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result. \n","sig":null,"attributes":[{"value":"/ Name and, optional, path, of the OCI executable binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141049,"byte_end":141215,"line_start":3829,"line_end":3829,"column_start":5,"column_end":171}},{"value":"serde(rename = \"path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141220,"byte_end":141245,"line_start":3830,"line_end":3830,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141250,"byte_end":141297,"line_start":3831,"line_end":3831,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10086},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141503,"byte_end":141515,"line_start":3837,"line_end":3837,"column_start":9,"column_end":21},"name":"runtime_args","qualname":"::models::Runtime::runtime_args","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":10084},"children":[],"decl_id":null,"docs":" List of command-line arguments to pass to the runtime when invoked. \n","sig":null,"attributes":[{"value":"/ List of command-line arguments to pass to the runtime when invoked. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141333,"byte_end":141405,"line_start":3834,"line_end":3834,"column_start":5,"column_end":77}},{"value":"serde(rename = \"runtimeArgs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141410,"byte_end":141442,"line_start":3835,"line_end":3835,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141447,"byte_end":141494,"line_start":3836,"line_end":3836,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10146},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141621,"byte_end":141627,"line_start":3842,"line_end":3842,"column_start":12,"column_end":18},"name":"Secret","qualname":"::models::Secret","value":"Secret { id, version, created_at, updated_at, spec }","parent":null,"children":[{"krate":0,"index":10147},{"krate":0,"index":10148},{"krate":0,"index":10149},{"krate":0,"index":10150},{"krate":0,"index":10151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10147},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141718,"byte_end":141720,"line_start":3845,"line_end":3845,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Secret::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141634,"byte_end":141657,"line_start":3843,"line_end":3843,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141662,"byte_end":141709,"line_start":3844,"line_end":3844,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10148},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141832,"byte_end":141839,"line_start":3849,"line_end":3849,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Secret::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":10146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141743,"byte_end":141771,"line_start":3847,"line_end":3847,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141776,"byte_end":141823,"line_start":3848,"line_end":3848,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10149},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141960,"byte_end":141970,"line_start":3853,"line_end":3853,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Secret::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":10146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141869,"byte_end":141899,"line_start":3851,"line_end":3851,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":141904,"byte_end":141951,"line_start":3852,"line_end":3852,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10150},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142091,"byte_end":142101,"line_start":3857,"line_end":3857,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Secret::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":10146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142000,"byte_end":142030,"line_start":3855,"line_end":3855,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142035,"byte_end":142082,"line_start":3856,"line_end":3856,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10151},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142217,"byte_end":142221,"line_start":3861,"line_end":3861,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Secret::spec","value":"std::option::Option<models::SecretSpec>","parent":{"krate":0,"index":10146},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142131,"byte_end":142156,"line_start":3859,"line_end":3859,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142161,"byte_end":142208,"line_start":3860,"line_end":3860,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10217},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142326,"byte_end":142336,"line_start":3866,"line_end":3866,"column_start":12,"column_end":22},"name":"SecretSpec","qualname":"::models::SecretSpec","value":"SecretSpec { name, labels, data, driver, templating }","parent":null,"children":[{"krate":0,"index":10218},{"krate":0,"index":10219},{"krate":0,"index":10220},{"krate":0,"index":10221},{"krate":0,"index":10222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10218},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142470,"byte_end":142474,"line_start":3870,"line_end":3870,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SecretSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10217},"children":[],"decl_id":null,"docs":" User-defined name of the secret.\n","sig":null,"attributes":[{"value":"/ User-defined name of the secret.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142343,"byte_end":142379,"line_start":3867,"line_end":3867,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142384,"byte_end":142409,"line_start":3868,"line_end":3868,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142414,"byte_end":142461,"line_start":3869,"line_end":3869,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10219},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142626,"byte_end":142632,"line_start":3875,"line_end":3875,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::SecretSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":10217},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142497,"byte_end":142533,"line_start":3872,"line_end":3872,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142538,"byte_end":142565,"line_start":3873,"line_end":3873,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142570,"byte_end":142617,"line_start":3874,"line_end":3874,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10220},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142963,"byte_end":142967,"line_start":3880,"line_end":3880,"column_start":9,"column_end":13},"name":"data","qualname":"::models::SecretSpec::data","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10217},"children":[],"decl_id":null,"docs":" Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-5)) data to store as secret.  This field is only used to _create_ a secret, and is not returned by other endpoints. \n","sig":null,"attributes":[{"value":"/ Base64-url-safe-encoded ([RFC 4648](https://tools.ietf.org/html/rfc4648#section-5)) data to store as secret.  This field is only used to _create_ a secret, and is not returned by other endpoints. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142672,"byte_end":142872,"line_start":3877,"line_end":3877,"column_start":5,"column_end":205}},{"value":"serde(rename = \"Data\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142877,"byte_end":142902,"line_start":3878,"line_end":3878,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142907,"byte_end":142954,"line_start":3879,"line_end":3879,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10221},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143178,"byte_end":143184,"line_start":3885,"line_end":3885,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::SecretSpec::driver","value":"std::option::Option<models::Driver>","parent":{"krate":0,"index":10217},"children":[],"decl_id":null,"docs":" Name of the secrets driver used to fetch the secret's value from an external secret store. \n","sig":null,"attributes":[{"value":"/ Name of the secrets driver used to fetch the secret's value from an external secret store. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":142990,"byte_end":143085,"line_start":3882,"line_end":3882,"column_start":5,"column_end":100}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143090,"byte_end":143117,"line_start":3883,"line_end":3883,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143122,"byte_end":143169,"line_start":3884,"line_end":3884,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10222},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143468,"byte_end":143478,"line_start":3890,"line_end":3890,"column_start":9,"column_end":19},"name":"templating","qualname":"::models::SecretSpec::templating","value":"std::option::Option<models::Driver>","parent":{"krate":0,"index":10217},"children":[],"decl_id":null,"docs":" Templating driver, if applicable  Templating controls whether and how to evaluate the config payload as a template. If no driver is set, no templating is used. \n","sig":null,"attributes":[{"value":"/ Templating driver, if applicable  Templating controls whether and how to evaluate the config payload as a template. If no driver is set, no templating is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143207,"byte_end":143371,"line_start":3887,"line_end":3887,"column_start":5,"column_end":169}},{"value":"serde(rename = \"Templating\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143376,"byte_end":143407,"line_start":3888,"line_end":3888,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143412,"byte_end":143459,"line_start":3889,"line_end":3889,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10288},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143579,"byte_end":143586,"line_start":3895,"line_end":3895,"column_start":12,"column_end":19},"name":"Service","qualname":"::models::Service","value":"Service { id, version, created_at, updated_at, spec, endpoint, update_status }","parent":null,"children":[{"krate":0,"index":10289},{"krate":0,"index":10290},{"krate":0,"index":10291},{"krate":0,"index":10292},{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10289},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143677,"byte_end":143679,"line_start":3898,"line_end":3898,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Service::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143593,"byte_end":143616,"line_start":3896,"line_end":3896,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143621,"byte_end":143668,"line_start":3897,"line_end":3897,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10290},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143791,"byte_end":143798,"line_start":3902,"line_end":3902,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Service::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143702,"byte_end":143730,"line_start":3900,"line_end":3900,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143735,"byte_end":143782,"line_start":3901,"line_end":3901,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10291},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143919,"byte_end":143929,"line_start":3906,"line_end":3906,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Service::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143828,"byte_end":143858,"line_start":3904,"line_end":3904,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143863,"byte_end":143910,"line_start":3905,"line_end":3905,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10292},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144050,"byte_end":144060,"line_start":3910,"line_end":3910,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Service::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143959,"byte_end":143989,"line_start":3908,"line_end":3908,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":143994,"byte_end":144041,"line_start":3909,"line_end":3909,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10293},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144176,"byte_end":144180,"line_start":3914,"line_end":3914,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Service::spec","value":"std::option::Option<models::ServiceSpec>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144090,"byte_end":144115,"line_start":3912,"line_end":3912,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144120,"byte_end":144167,"line_start":3913,"line_end":3913,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10294},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144298,"byte_end":144306,"line_start":3918,"line_end":3918,"column_start":9,"column_end":17},"name":"endpoint","qualname":"::models::Service::endpoint","value":"std::option::Option<models::ServiceEndpoint>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Endpoint\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144208,"byte_end":144237,"line_start":3916,"line_end":3916,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144242,"byte_end":144289,"line_start":3917,"line_end":3917,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10295},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144432,"byte_end":144445,"line_start":3922,"line_end":3922,"column_start":9,"column_end":22},"name":"update_status","qualname":"::models::Service::update_status","value":"std::option::Option<models::ServiceUpdateStatus>","parent":{"krate":0,"index":10288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdateStatus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144338,"byte_end":144371,"line_start":3920,"line_end":3920,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144376,"byte_end":144423,"line_start":3921,"line_end":3921,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10365},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144559,"byte_end":144580,"line_start":3927,"line_end":3927,"column_start":12,"column_end":33},"name":"ServiceCreateResponse","qualname":"::models::ServiceCreateResponse","value":"ServiceCreateResponse { id, warning }","parent":null,"children":[{"krate":0,"index":10366},{"krate":0,"index":10367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10366},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144710,"byte_end":144712,"line_start":3931,"line_end":3931,"column_start":9,"column_end":11},"name":"id","qualname":"::models::ServiceCreateResponse::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10365},"children":[],"decl_id":null,"docs":" The ID of the created service.\n","sig":null,"attributes":[{"value":"/ The ID of the created service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144587,"byte_end":144621,"line_start":3928,"line_end":3928,"column_start":5,"column_end":39}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144626,"byte_end":144649,"line_start":3929,"line_end":3929,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144654,"byte_end":144701,"line_start":3930,"line_end":3930,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10367},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144857,"byte_end":144864,"line_start":3936,"line_end":3936,"column_start":9,"column_end":16},"name":"warning","qualname":"::models::ServiceCreateResponse::warning","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10365},"children":[],"decl_id":null,"docs":" Optional warning message\n","sig":null,"attributes":[{"value":"/ Optional warning message","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144735,"byte_end":144763,"line_start":3933,"line_end":3933,"column_start":5,"column_end":33}},{"value":"serde(rename = \"Warning\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144768,"byte_end":144796,"line_start":3934,"line_end":3934,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144801,"byte_end":144848,"line_start":3935,"line_end":3935,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10427},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144965,"byte_end":144980,"line_start":3941,"line_end":3941,"column_start":12,"column_end":27},"name":"ServiceEndpoint","qualname":"::models::ServiceEndpoint","value":"ServiceEndpoint { spec, ports, virtual_i_ps }","parent":null,"children":[{"krate":0,"index":10428},{"krate":0,"index":10429},{"krate":0,"index":10430}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10428},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145073,"byte_end":145077,"line_start":3944,"line_end":3944,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::ServiceEndpoint::spec","value":"std::option::Option<models::EndpointSpec>","parent":{"krate":0,"index":10427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":144987,"byte_end":145012,"line_start":3942,"line_end":3942,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145017,"byte_end":145064,"line_start":3943,"line_end":3943,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10429},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145193,"byte_end":145198,"line_start":3948,"line_end":3948,"column_start":9,"column_end":14},"name":"ports","qualname":"::models::ServiceEndpoint::ports","value":"std::option::Option<std::vec::Vec<models::EndpointPortConfig>>","parent":{"krate":0,"index":10427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Ports\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145106,"byte_end":145132,"line_start":3946,"line_end":3946,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145137,"byte_end":145184,"line_start":3947,"line_end":3947,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10430},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145330,"byte_end":145342,"line_start":3952,"line_end":3952,"column_start":9,"column_end":21},"name":"virtual_i_ps","qualname":"::models::ServiceEndpoint::virtual_i_ps","value":"std::option::Option<std::vec::Vec<models::ServiceEndpointVirtualIPs>>","parent":{"krate":0,"index":10427},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"VirtualIPs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145238,"byte_end":145269,"line_start":3950,"line_end":3950,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145274,"byte_end":145321,"line_start":3951,"line_end":3951,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10492},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145467,"byte_end":145492,"line_start":3957,"line_end":3957,"column_start":12,"column_end":37},"name":"ServiceEndpointVirtualIPs","qualname":"::models::ServiceEndpointVirtualIPs","value":"ServiceEndpointVirtualIPs { network_id, addr }","parent":null,"children":[{"krate":0,"index":10493},{"krate":0,"index":10494}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10493},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145590,"byte_end":145600,"line_start":3960,"line_end":3960,"column_start":9,"column_end":19},"name":"network_id","qualname":"::models::ServiceEndpointVirtualIPs::network_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NetworkID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145499,"byte_end":145529,"line_start":3958,"line_end":3958,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145534,"byte_end":145581,"line_start":3959,"line_end":3959,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10494},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145709,"byte_end":145713,"line_start":3964,"line_end":3964,"column_start":9,"column_end":13},"name":"addr","qualname":"::models::ServiceEndpointVirtualIPs::addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Addr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145623,"byte_end":145648,"line_start":3962,"line_end":3962,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145653,"byte_end":145700,"line_start":3963,"line_end":3963,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10554},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145863,"byte_end":145874,"line_start":3970,"line_end":3970,"column_start":12,"column_end":23},"name":"ServiceSpec","qualname":"::models::ServiceSpec","value":"ServiceSpec { name, labels, task_template, mode, update_config, rollback_config, networks, endpoint_spec }","parent":null,"children":[{"krate":0,"index":10555},{"krate":0,"index":10556},{"krate":0,"index":10557},{"krate":0,"index":10558},{"krate":0,"index":10559},{"krate":0,"index":10560},{"krate":0,"index":10561},{"krate":0,"index":10562}],"decl_id":null,"docs":" User modifiable configuration for a service.\n","sig":null,"attributes":[{"value":"/ User modifiable configuration for a service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145735,"byte_end":145783,"line_start":3968,"line_end":3968,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10555},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145996,"byte_end":146000,"line_start":3974,"line_end":3974,"column_start":9,"column_end":13},"name":"name","qualname":"::models::ServiceSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" Name of the service.\n","sig":null,"attributes":[{"value":"/ Name of the service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145881,"byte_end":145905,"line_start":3971,"line_end":3971,"column_start":5,"column_end":29}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145910,"byte_end":145935,"line_start":3972,"line_end":3972,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":145940,"byte_end":145987,"line_start":3973,"line_end":3973,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10556},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146152,"byte_end":146158,"line_start":3979,"line_end":3979,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::ServiceSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146023,"byte_end":146059,"line_start":3976,"line_end":3976,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146064,"byte_end":146091,"line_start":3977,"line_end":3977,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146096,"byte_end":146143,"line_start":3978,"line_end":3978,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10557},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146292,"byte_end":146305,"line_start":3983,"line_end":3983,"column_start":9,"column_end":22},"name":"task_template","qualname":"::models::ServiceSpec::task_template","value":"std::option::Option<models::TaskSpec>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TaskTemplate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146198,"byte_end":146231,"line_start":3981,"line_end":3981,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146236,"byte_end":146283,"line_start":3982,"line_end":3982,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10558},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146416,"byte_end":146420,"line_start":3987,"line_end":3987,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::ServiceSpec::mode","value":"std::option::Option<models::ServiceSpecMode>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146330,"byte_end":146355,"line_start":3985,"line_end":3985,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146360,"byte_end":146407,"line_start":3986,"line_end":3986,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10559},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146546,"byte_end":146559,"line_start":3991,"line_end":3991,"column_start":9,"column_end":22},"name":"update_config","qualname":"::models::ServiceSpec::update_config","value":"std::option::Option<models::ServiceSpecUpdateConfig>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdateConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146452,"byte_end":146485,"line_start":3989,"line_end":3989,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146490,"byte_end":146537,"line_start":3990,"line_end":3990,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10560},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146695,"byte_end":146710,"line_start":3995,"line_end":3995,"column_start":9,"column_end":24},"name":"rollback_config","qualname":"::models::ServiceSpec::rollback_config","value":"std::option::Option<models::ServiceSpecRollbackConfig>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RollbackConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146599,"byte_end":146634,"line_start":3993,"line_end":3993,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146639,"byte_end":146686,"line_start":3994,"line_end":3994,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10561},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146905,"byte_end":146913,"line_start":4000,"line_end":4000,"column_start":9,"column_end":17},"name":"networks","qualname":"::models::ServiceSpec::networks","value":"std::option::Option<std::vec::Vec<models::NetworkAttachmentConfig>>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":" Specifies which networks the service should attach to.\n","sig":null,"attributes":[{"value":"/ Specifies which networks the service should attach to.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146752,"byte_end":146810,"line_start":3997,"line_end":3997,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Networks\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146815,"byte_end":146844,"line_start":3998,"line_end":3998,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146849,"byte_end":146896,"line_start":3999,"line_end":3999,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10562},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147052,"byte_end":147065,"line_start":4004,"line_end":4004,"column_start":9,"column_end":22},"name":"endpoint_spec","qualname":"::models::ServiceSpec::endpoint_spec","value":"std::option::Option<models::EndpointSpec>","parent":{"krate":0,"index":10554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EndpointSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146958,"byte_end":146991,"line_start":4002,"line_end":4002,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":146996,"byte_end":147043,"line_start":4003,"line_end":4003,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10634},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147209,"byte_end":147224,"line_start":4010,"line_end":4010,"column_start":12,"column_end":27},"name":"ServiceSpecMode","qualname":"::models::ServiceSpecMode","value":"ServiceSpecMode { replicated, global }","parent":null,"children":[{"krate":0,"index":10635},{"krate":0,"index":10636}],"decl_id":null,"docs":" Scheduling mode for the service.\n","sig":null,"attributes":[{"value":"/ Scheduling mode for the service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147093,"byte_end":147129,"line_start":4008,"line_end":4008,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":10635},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147323,"byte_end":147333,"line_start":4013,"line_end":4013,"column_start":9,"column_end":19},"name":"replicated","qualname":"::models::ServiceSpecMode::replicated","value":"std::option::Option<models::ServiceSpecModeReplicated>","parent":{"krate":0,"index":10634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Replicated\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147231,"byte_end":147262,"line_start":4011,"line_end":4011,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147267,"byte_end":147314,"line_start":4012,"line_end":4012,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10636},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147463,"byte_end":147469,"line_start":4017,"line_end":4017,"column_start":9,"column_end":15},"name":"global","qualname":"::models::ServiceSpecMode::global","value":"std::option::Option<std::collections::HashMap<(), ()>>","parent":{"krate":0,"index":10634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Global\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147375,"byte_end":147402,"line_start":4015,"line_end":4015,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147407,"byte_end":147454,"line_start":4016,"line_end":4016,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10696},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147579,"byte_end":147604,"line_start":4022,"line_end":4022,"column_start":12,"column_end":37},"name":"ServiceSpecModeReplicated","qualname":"::models::ServiceSpecModeReplicated","value":"ServiceSpecModeReplicated { replicas }","parent":null,"children":[{"krate":0,"index":10697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":10697},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147701,"byte_end":147709,"line_start":4025,"line_end":4025,"column_start":9,"column_end":17},"name":"replicas","qualname":"::models::ServiceSpecModeReplicated::replicas","value":"std::option::Option<i64>","parent":{"krate":0,"index":10696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Replicas\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147611,"byte_end":147640,"line_start":4023,"line_end":4023,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147645,"byte_end":147692,"line_start":4024,"line_end":4024,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":10755},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147867,"byte_end":147892,"line_start":4031,"line_end":4031,"column_start":12,"column_end":37},"name":"ServiceSpecRollbackConfig","qualname":"::models::ServiceSpecRollbackConfig","value":"ServiceSpecRollbackConfig { parallelism, delay, failure_action, monitor, max_failure_ratio, order }","parent":null,"children":[{"krate":0,"index":10756},{"krate":0,"index":10757},{"krate":0,"index":10758},{"krate":0,"index":10759},{"krate":0,"index":10760},{"krate":0,"index":10761}],"decl_id":null,"docs":" Specification for the rollback strategy of the service.\n","sig":null,"attributes":[{"value":"/ Specification for the rollback strategy of the service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147728,"byte_end":147787,"line_start":4029,"line_end":4029,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":10756},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148093,"byte_end":148104,"line_start":4035,"line_end":4035,"column_start":9,"column_end":20},"name":"parallelism","qualname":"::models::ServiceSpecRollbackConfig::parallelism","value":"std::option::Option<i64>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" Maximum number of tasks to be rolled back in one iteration (0 means unlimited parallelism). \n","sig":null,"attributes":[{"value":"/ Maximum number of tasks to be rolled back in one iteration (0 means unlimited parallelism). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":147899,"byte_end":147995,"line_start":4032,"line_end":4032,"column_start":5,"column_end":101}},{"value":"serde(rename = \"Parallelism\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148000,"byte_end":148032,"line_start":4033,"line_end":4033,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148037,"byte_end":148084,"line_start":4034,"line_end":4034,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10757},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148280,"byte_end":148285,"line_start":4040,"line_end":4040,"column_start":9,"column_end":14},"name":"delay","qualname":"::models::ServiceSpecRollbackConfig::delay","value":"std::option::Option<i64>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" Amount of time between rollback iterations, in nanoseconds. \n","sig":null,"attributes":[{"value":"/ Amount of time between rollback iterations, in nanoseconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148124,"byte_end":148188,"line_start":4037,"line_end":4037,"column_start":5,"column_end":69}},{"value":"serde(rename = \"Delay\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148193,"byte_end":148219,"line_start":4038,"line_end":4038,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148224,"byte_end":148271,"line_start":4039,"line_end":4039,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10758},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148499,"byte_end":148513,"line_start":4045,"line_end":4045,"column_start":9,"column_end":23},"name":"failure_action","qualname":"::models::ServiceSpecRollbackConfig::failure_action","value":"std::option::Option<models::ServiceSpecRollbackConfigFailureActionEnum>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" Action to take if an rolled back task fails to run, or stops running during the rollback. \n","sig":null,"attributes":[{"value":"/ Action to take if an rolled back task fails to run, or stops running during the rollback. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148305,"byte_end":148399,"line_start":4042,"line_end":4042,"column_start":5,"column_end":99}},{"value":"serde(rename = \"FailureAction\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148404,"byte_end":148438,"line_start":4043,"line_end":4043,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148443,"byte_end":148490,"line_start":4044,"line_end":4044,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10759},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148748,"byte_end":148755,"line_start":4050,"line_end":4050,"column_start":9,"column_end":16},"name":"monitor","qualname":"::models::ServiceSpecRollbackConfig::monitor","value":"std::option::Option<i64>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" Amount of time to monitor each rolled back task for failures, in nanoseconds. \n","sig":null,"attributes":[{"value":"/ Amount of time to monitor each rolled back task for failures, in nanoseconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148572,"byte_end":148654,"line_start":4047,"line_end":4047,"column_start":5,"column_end":87}},{"value":"serde(rename = \"Monitor\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148659,"byte_end":148687,"line_start":4048,"line_end":4048,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148692,"byte_end":148739,"line_start":4049,"line_end":4049,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10760},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149027,"byte_end":149044,"line_start":4055,"line_end":4055,"column_start":9,"column_end":26},"name":"max_failure_ratio","qualname":"::models::ServiceSpecRollbackConfig::max_failure_ratio","value":"std::option::Option<f64>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" The fraction of tasks that may fail during a rollback before the failure action is invoked, specified as a floating point number between 0 and 1. \n","sig":null,"attributes":[{"value":"/ The fraction of tasks that may fail during a rollback before the failure action is invoked, specified as a floating point number between 0 and 1. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148775,"byte_end":148925,"line_start":4052,"line_end":4052,"column_start":5,"column_end":155}},{"value":"serde(rename = \"MaxFailureRatio\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148930,"byte_end":148966,"line_start":4053,"line_end":4053,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":148971,"byte_end":149018,"line_start":4054,"line_end":4054,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10761},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149336,"byte_end":149341,"line_start":4060,"line_end":4060,"column_start":9,"column_end":14},"name":"order","qualname":"::models::ServiceSpecRollbackConfig::order","value":"std::option::Option<models::ServiceSpecRollbackConfigOrderEnum>","parent":{"krate":0,"index":10755},"children":[],"decl_id":null,"docs":" The order of operations when rolling back a task. Either the old task is shut down before the new task is started, or the new task is started before the old task is shut down. \n","sig":null,"attributes":[{"value":"/ The order of operations when rolling back a task. Either the old task is shut down before the new task is started, or the new task is started before the old task is shut down. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149064,"byte_end":149244,"line_start":4057,"line_end":4057,"column_start":5,"column_end":185}},{"value":"serde(rename = \"Order\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149249,"byte_end":149275,"line_start":4058,"line_end":4058,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149280,"byte_end":149327,"line_start":4059,"line_end":4059,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10830},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149593,"byte_end":149598,"line_start":4068,"line_end":4068,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ServiceSpecRollbackConfigFailureActionEnum::EMPTY","value":"ServiceSpecRollbackConfigFailureActionEnum::EMPTY","parent":{"krate":0,"index":10829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149567,"byte_end":149588,"line_start":4067,"line_end":4067,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10832},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149638,"byte_end":149646,"line_start":4070,"line_end":4070,"column_start":5,"column_end":13},"name":"CONTINUE","qualname":"::models::ServiceSpecRollbackConfigFailureActionEnum::CONTINUE","value":"ServiceSpecRollbackConfigFailureActionEnum::CONTINUE","parent":{"krate":0,"index":10829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"continue\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149604,"byte_end":149633,"line_start":4069,"line_end":4069,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10834},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149683,"byte_end":149688,"line_start":4072,"line_end":4072,"column_start":5,"column_end":10},"name":"PAUSE","qualname":"::models::ServiceSpecRollbackConfigFailureActionEnum::PAUSE","value":"ServiceSpecRollbackConfigFailureActionEnum::PAUSE","parent":{"krate":0,"index":10829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"pause\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149652,"byte_end":149678,"line_start":4071,"line_end":4071,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":10829},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149517,"byte_end":149559,"line_start":4066,"line_end":4066,"column_start":10,"column_end":52},"name":"ServiceSpecRollbackConfigFailureActionEnum","qualname":"::models::ServiceSpecRollbackConfigFailureActionEnum","value":"pub enum ServiceSpecRollbackConfigFailureActionEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"continue\")]\n    CONTINUE,\n\n    #[serde(rename = \"pause\")]\n    PAUSE,\n}","parent":null,"children":[{"krate":0,"index":10830},{"krate":0,"index":10832},{"krate":0,"index":10834}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149391,"byte_end":149421,"line_start":4064,"line_end":4064,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10899},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151204,"byte_end":151209,"line_start":4112,"line_end":4112,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ServiceSpecRollbackConfigOrderEnum::EMPTY","value":"ServiceSpecRollbackConfigOrderEnum::EMPTY","parent":{"krate":0,"index":10898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151178,"byte_end":151199,"line_start":4111,"line_end":4111,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10901},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151251,"byte_end":151261,"line_start":4114,"line_end":4114,"column_start":5,"column_end":15},"name":"STOP_FIRST","qualname":"::models::ServiceSpecRollbackConfigOrderEnum::STOP_FIRST","value":"ServiceSpecRollbackConfigOrderEnum::STOP_FIRST","parent":{"krate":0,"index":10898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"stop-first\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151215,"byte_end":151246,"line_start":4113,"line_end":4113,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10903},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151304,"byte_end":151315,"line_start":4116,"line_end":4116,"column_start":5,"column_end":16},"name":"START_FIRST","qualname":"::models::ServiceSpecRollbackConfigOrderEnum::START_FIRST","value":"ServiceSpecRollbackConfigOrderEnum::START_FIRST","parent":{"krate":0,"index":10898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"start-first\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151267,"byte_end":151299,"line_start":4115,"line_end":4115,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":10898},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151136,"byte_end":151170,"line_start":4110,"line_end":4110,"column_start":10,"column_end":44},"name":"ServiceSpecRollbackConfigOrderEnum","qualname":"::models::ServiceSpecRollbackConfigOrderEnum","value":"pub enum ServiceSpecRollbackConfigOrderEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"stop-first\")]\n    STOP_FIRST,\n\n    #[serde(rename = \"start-first\")]\n    START_FIRST,\n}","parent":null,"children":[{"krate":0,"index":10899},{"krate":0,"index":10901},{"krate":0,"index":10903}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151010,"byte_end":151040,"line_start":4108,"line_end":4108,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":10967},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152726,"byte_end":152749,"line_start":4154,"line_end":4154,"column_start":12,"column_end":35},"name":"ServiceSpecUpdateConfig","qualname":"::models::ServiceSpecUpdateConfig","value":"ServiceSpecUpdateConfig { parallelism, delay, failure_action, monitor, max_failure_ratio, order }","parent":null,"children":[{"krate":0,"index":10968},{"krate":0,"index":10969},{"krate":0,"index":10970},{"krate":0,"index":10971},{"krate":0,"index":10972},{"krate":0,"index":10973}],"decl_id":null,"docs":" Specification for the update strategy of the service.\n","sig":null,"attributes":[{"value":"/ Specification for the update strategy of the service.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152589,"byte_end":152646,"line_start":4152,"line_end":4152,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":10968},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152946,"byte_end":152957,"line_start":4158,"line_end":4158,"column_start":9,"column_end":20},"name":"parallelism","qualname":"::models::ServiceSpecUpdateConfig::parallelism","value":"std::option::Option<i64>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" Maximum number of tasks to be updated in one iteration (0 means unlimited parallelism). \n","sig":null,"attributes":[{"value":"/ Maximum number of tasks to be updated in one iteration (0 means unlimited parallelism). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152756,"byte_end":152848,"line_start":4155,"line_end":4155,"column_start":5,"column_end":97}},{"value":"serde(rename = \"Parallelism\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152853,"byte_end":152885,"line_start":4156,"line_end":4156,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152890,"byte_end":152937,"line_start":4157,"line_end":4157,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10969},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153120,"byte_end":153125,"line_start":4163,"line_end":4163,"column_start":9,"column_end":14},"name":"delay","qualname":"::models::ServiceSpecUpdateConfig::delay","value":"std::option::Option<i64>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" Amount of time between updates, in nanoseconds.\n","sig":null,"attributes":[{"value":"/ Amount of time between updates, in nanoseconds.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152977,"byte_end":153028,"line_start":4160,"line_end":4160,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Delay\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153033,"byte_end":153059,"line_start":4161,"line_end":4161,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153064,"byte_end":153111,"line_start":4162,"line_end":4162,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10970},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153333,"byte_end":153347,"line_start":4168,"line_end":4168,"column_start":9,"column_end":23},"name":"failure_action","qualname":"::models::ServiceSpecUpdateConfig::failure_action","value":"std::option::Option<models::ServiceSpecUpdateConfigFailureActionEnum>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" Action to take if an updated task fails to run, or stops running during the update. \n","sig":null,"attributes":[{"value":"/ Action to take if an updated task fails to run, or stops running during the update. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153145,"byte_end":153233,"line_start":4165,"line_end":4165,"column_start":5,"column_end":93}},{"value":"serde(rename = \"FailureAction\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153238,"byte_end":153272,"line_start":4166,"line_end":4166,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153277,"byte_end":153324,"line_start":4167,"line_end":4167,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10971},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153576,"byte_end":153583,"line_start":4173,"line_end":4173,"column_start":9,"column_end":16},"name":"monitor","qualname":"::models::ServiceSpecUpdateConfig::monitor","value":"std::option::Option<i64>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" Amount of time to monitor each updated task for failures, in nanoseconds. \n","sig":null,"attributes":[{"value":"/ Amount of time to monitor each updated task for failures, in nanoseconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153404,"byte_end":153482,"line_start":4170,"line_end":4170,"column_start":5,"column_end":83}},{"value":"serde(rename = \"Monitor\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153487,"byte_end":153515,"line_start":4171,"line_end":4171,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153520,"byte_end":153567,"line_start":4172,"line_end":4172,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10972},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153854,"byte_end":153871,"line_start":4178,"line_end":4178,"column_start":9,"column_end":26},"name":"max_failure_ratio","qualname":"::models::ServiceSpecUpdateConfig::max_failure_ratio","value":"std::option::Option<f64>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" The fraction of tasks that may fail during an update before the failure action is invoked, specified as a floating point number between 0 and 1. \n","sig":null,"attributes":[{"value":"/ The fraction of tasks that may fail during an update before the failure action is invoked, specified as a floating point number between 0 and 1. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153603,"byte_end":153752,"line_start":4175,"line_end":4175,"column_start":5,"column_end":154}},{"value":"serde(rename = \"MaxFailureRatio\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153757,"byte_end":153793,"line_start":4176,"line_end":4176,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153798,"byte_end":153845,"line_start":4177,"line_end":4177,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10973},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154171,"byte_end":154176,"line_start":4183,"line_end":4183,"column_start":9,"column_end":14},"name":"order","qualname":"::models::ServiceSpecUpdateConfig::order","value":"std::option::Option<models::ServiceSpecUpdateConfigOrderEnum>","parent":{"krate":0,"index":10967},"children":[],"decl_id":null,"docs":" The order of operations when rolling out an updated task. Either the old task is shut down before the new task is started, or the new task is started before the old task is shut down. \n","sig":null,"attributes":[{"value":"/ The order of operations when rolling out an updated task. Either the old task is shut down before the new task is started, or the new task is started before the old task is shut down. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":153891,"byte_end":154079,"line_start":4180,"line_end":4180,"column_start":5,"column_end":193}},{"value":"serde(rename = \"Order\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154084,"byte_end":154110,"line_start":4181,"line_end":4181,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154115,"byte_end":154162,"line_start":4182,"line_end":4182,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11042},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154424,"byte_end":154429,"line_start":4191,"line_end":4191,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ServiceSpecUpdateConfigFailureActionEnum::EMPTY","value":"ServiceSpecUpdateConfigFailureActionEnum::EMPTY","parent":{"krate":0,"index":11041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154398,"byte_end":154419,"line_start":4190,"line_end":4190,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11044},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154469,"byte_end":154477,"line_start":4193,"line_end":4193,"column_start":5,"column_end":13},"name":"CONTINUE","qualname":"::models::ServiceSpecUpdateConfigFailureActionEnum::CONTINUE","value":"ServiceSpecUpdateConfigFailureActionEnum::CONTINUE","parent":{"krate":0,"index":11041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"continue\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154435,"byte_end":154464,"line_start":4192,"line_end":4192,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11046},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154514,"byte_end":154519,"line_start":4195,"line_end":4195,"column_start":5,"column_end":10},"name":"PAUSE","qualname":"::models::ServiceSpecUpdateConfigFailureActionEnum::PAUSE","value":"ServiceSpecUpdateConfigFailureActionEnum::PAUSE","parent":{"krate":0,"index":11041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"pause\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154483,"byte_end":154509,"line_start":4194,"line_end":4194,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11048},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154559,"byte_end":154567,"line_start":4197,"line_end":4197,"column_start":5,"column_end":13},"name":"ROLLBACK","qualname":"::models::ServiceSpecUpdateConfigFailureActionEnum::ROLLBACK","value":"ServiceSpecUpdateConfigFailureActionEnum::ROLLBACK","parent":{"krate":0,"index":11041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rollback\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154525,"byte_end":154554,"line_start":4196,"line_end":4196,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":11041},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154350,"byte_end":154390,"line_start":4189,"line_end":4189,"column_start":10,"column_end":50},"name":"ServiceSpecUpdateConfigFailureActionEnum","qualname":"::models::ServiceSpecUpdateConfigFailureActionEnum","value":"pub enum ServiceSpecUpdateConfigFailureActionEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"continue\")]\n    CONTINUE,\n\n    #[serde(rename = \"pause\")]\n    PAUSE,\n\n    #[serde(rename = \"rollback\")]\n    ROLLBACK,\n}","parent":null,"children":[{"krate":0,"index":11042},{"krate":0,"index":11044},{"krate":0,"index":11046},{"krate":0,"index":11048}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154224,"byte_end":154254,"line_start":4187,"line_end":4187,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11115},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156312,"byte_end":156317,"line_start":4240,"line_end":4240,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ServiceSpecUpdateConfigOrderEnum::EMPTY","value":"ServiceSpecUpdateConfigOrderEnum::EMPTY","parent":{"krate":0,"index":11114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156286,"byte_end":156307,"line_start":4239,"line_end":4239,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11117},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156359,"byte_end":156369,"line_start":4242,"line_end":4242,"column_start":5,"column_end":15},"name":"STOP_FIRST","qualname":"::models::ServiceSpecUpdateConfigOrderEnum::STOP_FIRST","value":"ServiceSpecUpdateConfigOrderEnum::STOP_FIRST","parent":{"krate":0,"index":11114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"stop-first\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156323,"byte_end":156354,"line_start":4241,"line_end":4241,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11119},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156412,"byte_end":156423,"line_start":4244,"line_end":4244,"column_start":5,"column_end":16},"name":"START_FIRST","qualname":"::models::ServiceSpecUpdateConfigOrderEnum::START_FIRST","value":"ServiceSpecUpdateConfigOrderEnum::START_FIRST","parent":{"krate":0,"index":11114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"start-first\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156375,"byte_end":156407,"line_start":4243,"line_end":4243,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":11114},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156246,"byte_end":156278,"line_start":4238,"line_end":4238,"column_start":10,"column_end":42},"name":"ServiceSpecUpdateConfigOrderEnum","qualname":"::models::ServiceSpecUpdateConfigOrderEnum","value":"pub enum ServiceSpecUpdateConfigOrderEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"stop-first\")]\n    STOP_FIRST,\n\n    #[serde(rename = \"start-first\")]\n    START_FIRST,\n}","parent":null,"children":[{"krate":0,"index":11115},{"krate":0,"index":11117},{"krate":0,"index":11119}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156120,"byte_end":156150,"line_start":4236,"line_end":4236,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11183},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157752,"byte_end":157773,"line_start":4281,"line_end":4281,"column_start":12,"column_end":33},"name":"ServiceUpdateResponse","qualname":"::models::ServiceUpdateResponse","value":"ServiceUpdateResponse { warnings }","parent":null,"children":[{"krate":0,"index":11184}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11184},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157904,"byte_end":157912,"line_start":4285,"line_end":4285,"column_start":9,"column_end":17},"name":"warnings","qualname":"::models::ServiceUpdateResponse::warnings","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":11183},"children":[],"decl_id":null,"docs":" Optional warning messages\n","sig":null,"attributes":[{"value":"/ Optional warning messages","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157780,"byte_end":157809,"line_start":4282,"line_end":4282,"column_start":5,"column_end":34}},{"value":"serde(rename = \"Warnings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157814,"byte_end":157843,"line_start":4283,"line_end":4283,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157848,"byte_end":157895,"line_start":4284,"line_end":4284,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11242},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158054,"byte_end":158073,"line_start":4291,"line_end":4291,"column_start":12,"column_end":31},"name":"ServiceUpdateStatus","qualname":"::models::ServiceUpdateStatus","value":"ServiceUpdateStatus { state, started_at, completed_at, message }","parent":null,"children":[{"krate":0,"index":11243},{"krate":0,"index":11244},{"krate":0,"index":11245},{"krate":0,"index":11246}],"decl_id":null,"docs":" The status of a service update.\n","sig":null,"attributes":[{"value":"/ The status of a service update.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157939,"byte_end":157974,"line_start":4289,"line_end":4289,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":11243},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158167,"byte_end":158172,"line_start":4294,"line_end":4294,"column_start":9,"column_end":14},"name":"state","qualname":"::models::ServiceUpdateStatus::state","value":"std::option::Option<models::ServiceUpdateStatusStateEnum>","parent":{"krate":0,"index":11242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"State\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158080,"byte_end":158106,"line_start":4292,"line_end":4292,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158111,"byte_end":158158,"line_start":4293,"line_end":4293,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11244},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158308,"byte_end":158318,"line_start":4298,"line_end":4298,"column_start":9,"column_end":19},"name":"started_at","qualname":"::models::ServiceUpdateStatus::started_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":11242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"StartedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158217,"byte_end":158247,"line_start":4296,"line_end":4296,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158252,"byte_end":158299,"line_start":4297,"line_end":4297,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11245},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158441,"byte_end":158453,"line_start":4302,"line_end":4302,"column_start":9,"column_end":21},"name":"completed_at","qualname":"::models::ServiceUpdateStatus::completed_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":11242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CompletedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158348,"byte_end":158380,"line_start":4300,"line_end":4300,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158385,"byte_end":158432,"line_start":4301,"line_end":4301,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11246},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158572,"byte_end":158579,"line_start":4306,"line_end":4306,"column_start":9,"column_end":16},"name":"message","qualname":"::models::ServiceUpdateStatus::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158483,"byte_end":158511,"line_start":4304,"line_end":4304,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158516,"byte_end":158563,"line_start":4305,"line_end":4305,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11311},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158789,"byte_end":158794,"line_start":4314,"line_end":4314,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::ServiceUpdateStatusStateEnum::EMPTY","value":"ServiceUpdateStatusStateEnum::EMPTY","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158763,"byte_end":158784,"line_start":4313,"line_end":4313,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11313},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158834,"byte_end":158842,"line_start":4316,"line_end":4316,"column_start":5,"column_end":13},"name":"UPDATING","qualname":"::models::ServiceUpdateStatusStateEnum::UPDATING","value":"ServiceUpdateStatusStateEnum::UPDATING","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"updating\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158800,"byte_end":158829,"line_start":4315,"line_end":4315,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11315},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158880,"byte_end":158886,"line_start":4318,"line_end":4318,"column_start":5,"column_end":11},"name":"PAUSED","qualname":"::models::ServiceUpdateStatusStateEnum::PAUSED","value":"ServiceUpdateStatusStateEnum::PAUSED","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"paused\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158848,"byte_end":158875,"line_start":4317,"line_end":4317,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11317},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158927,"byte_end":158936,"line_start":4320,"line_end":4320,"column_start":5,"column_end":14},"name":"COMPLETED","qualname":"::models::ServiceUpdateStatusStateEnum::COMPLETED","value":"ServiceUpdateStatusStateEnum::COMPLETED","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"completed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158892,"byte_end":158922,"line_start":4319,"line_end":4319,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11319},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158984,"byte_end":159000,"line_start":4322,"line_end":4322,"column_start":5,"column_end":21},"name":"ROLLBACK_STARTED","qualname":"::models::ServiceUpdateStatusStateEnum::ROLLBACK_STARTED","value":"ServiceUpdateStatusStateEnum::ROLLBACK_STARTED","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rollback_started\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158942,"byte_end":158979,"line_start":4321,"line_end":4321,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11321},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159047,"byte_end":159062,"line_start":4324,"line_end":4324,"column_start":5,"column_end":20},"name":"ROLLBACK_PAUSED","qualname":"::models::ServiceUpdateStatusStateEnum::ROLLBACK_PAUSED","value":"ServiceUpdateStatusStateEnum::ROLLBACK_PAUSED","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rollback_paused\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159006,"byte_end":159042,"line_start":4323,"line_end":4323,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11323},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159112,"byte_end":159130,"line_start":4326,"line_end":4326,"column_start":5,"column_end":23},"name":"ROLLBACK_COMPLETED","qualname":"::models::ServiceUpdateStatusStateEnum::ROLLBACK_COMPLETED","value":"ServiceUpdateStatusStateEnum::ROLLBACK_COMPLETED","parent":{"krate":0,"index":11310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rollback_completed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159068,"byte_end":159107,"line_start":4325,"line_end":4325,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":11310},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158727,"byte_end":158755,"line_start":4312,"line_end":4312,"column_start":10,"column_end":38},"name":"ServiceUpdateStatusStateEnum","qualname":"::models::ServiceUpdateStatusStateEnum","value":"pub enum ServiceUpdateStatusStateEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"updating\")]\n    UPDATING,\n\n    #[serde(rename = \"paused\")]\n    PAUSED,\n\n    #[serde(rename = \"completed\")]\n    COMPLETED,\n\n    #[serde(rename = \"rollback_started\")]\n    ROLLBACK_STARTED,\n\n    #[serde(rename = \"rollback_paused\")]\n    ROLLBACK_PAUSED,\n\n    #[serde(rename = \"rollback_completed\")]\n    ROLLBACK_COMPLETED,\n}","parent":null,"children":[{"krate":0,"index":11311},{"krate":0,"index":11313},{"krate":0,"index":11315},{"krate":0,"index":11317},{"krate":0,"index":11319},{"krate":0,"index":11321},{"krate":0,"index":11323}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":158601,"byte_end":158631,"line_start":4310,"line_end":4310,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11395},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161450,"byte_end":161459,"line_start":4376,"line_end":4376,"column_start":12,"column_end":21},"name":"SwarmInfo","qualname":"::models::SwarmInfo","value":"SwarmInfo { node_id, node_addr, local_node_state, control_available, error, remote_managers, nodes, managers, cluster }","parent":null,"children":[{"krate":0,"index":11396},{"krate":0,"index":11397},{"krate":0,"index":11398},{"krate":0,"index":11399},{"krate":0,"index":11400},{"krate":0,"index":11401},{"krate":0,"index":11402},{"krate":0,"index":11403},{"krate":0,"index":11404}],"decl_id":null,"docs":" Represents generic information about swarm. \n","sig":null,"attributes":[{"value":"/ Represents generic information about swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161322,"byte_end":161370,"line_start":4374,"line_end":4374,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":11396},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161611,"byte_end":161618,"line_start":4380,"line_end":4380,"column_start":9,"column_end":16},"name":"node_id","qualname":"::models::SwarmInfo::node_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":" Unique identifier of for this node in the swarm.\n","sig":null,"attributes":[{"value":"/ Unique identifier of for this node in the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161466,"byte_end":161518,"line_start":4377,"line_end":4377,"column_start":5,"column_end":57}},{"value":"serde(rename = \"NodeID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161523,"byte_end":161550,"line_start":4378,"line_end":4378,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161555,"byte_end":161602,"line_start":4379,"line_end":4379,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11397},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161814,"byte_end":161823,"line_start":4385,"line_end":4385,"column_start":9,"column_end":18},"name":"node_addr","qualname":"::models::SwarmInfo::node_addr","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":" IP address at which this node can be reached by other nodes in the swarm. \n","sig":null,"attributes":[{"value":"/ IP address at which this node can be reached by other nodes in the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161641,"byte_end":161719,"line_start":4382,"line_end":4382,"column_start":5,"column_end":83}},{"value":"serde(rename = \"NodeAddr\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161724,"byte_end":161753,"line_start":4383,"line_end":4383,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161758,"byte_end":161805,"line_start":4384,"line_end":4384,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11398},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161942,"byte_end":161958,"line_start":4389,"line_end":4389,"column_start":9,"column_end":25},"name":"local_node_state","qualname":"::models::SwarmInfo::local_node_state","value":"std::option::Option<models::LocalNodeState>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LocalNodeState\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161846,"byte_end":161881,"line_start":4387,"line_end":4387,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161886,"byte_end":161933,"line_start":4388,"line_end":4388,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11399},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162087,"byte_end":162104,"line_start":4393,"line_end":4393,"column_start":9,"column_end":26},"name":"control_available","qualname":"::models::SwarmInfo::control_available","value":"std::option::Option<bool>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ControlAvailable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":161989,"byte_end":162026,"line_start":4391,"line_end":4391,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162031,"byte_end":162078,"line_start":4392,"line_end":4392,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11400},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162212,"byte_end":162217,"line_start":4397,"line_end":4397,"column_start":9,"column_end":14},"name":"error","qualname":"::models::SwarmInfo::error","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Error\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162125,"byte_end":162151,"line_start":4395,"line_end":4395,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162156,"byte_end":162203,"line_start":4396,"line_end":4396,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11401},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162404,"byte_end":162419,"line_start":4402,"line_end":4402,"column_start":9,"column_end":24},"name":"remote_managers","qualname":"::models::SwarmInfo::remote_managers","value":"std::option::Option<std::vec::Vec<models::PeerNode>>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":" List of ID's and addresses of other managers in the swarm. \n","sig":null,"attributes":[{"value":"/ List of ID's and addresses of other managers in the swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162240,"byte_end":162303,"line_start":4399,"line_end":4399,"column_start":5,"column_end":68}},{"value":"serde(rename = \"RemoteManagers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162308,"byte_end":162343,"line_start":4400,"line_end":4400,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162348,"byte_end":162395,"line_start":4401,"line_end":4401,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11402},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162580,"byte_end":162585,"line_start":4407,"line_end":4407,"column_start":9,"column_end":14},"name":"nodes","qualname":"::models::SwarmInfo::nodes","value":"std::option::Option<i64>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":" Total number of nodes in the swarm.\n","sig":null,"attributes":[{"value":"/ Total number of nodes in the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162449,"byte_end":162488,"line_start":4404,"line_end":4404,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Nodes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162493,"byte_end":162519,"line_start":4405,"line_end":4405,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162524,"byte_end":162571,"line_start":4406,"line_end":4406,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11403},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162742,"byte_end":162750,"line_start":4412,"line_end":4412,"column_start":9,"column_end":17},"name":"managers","qualname":"::models::SwarmInfo::managers","value":"std::option::Option<i64>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":" Total number of managers in the swarm.\n","sig":null,"attributes":[{"value":"/ Total number of managers in the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162605,"byte_end":162647,"line_start":4409,"line_end":4409,"column_start":5,"column_end":47}},{"value":"serde(rename = \"Managers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162652,"byte_end":162681,"line_start":4410,"line_end":4410,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162686,"byte_end":162733,"line_start":4411,"line_end":4411,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11404},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162859,"byte_end":162866,"line_start":4416,"line_end":4416,"column_start":9,"column_end":16},"name":"cluster","qualname":"::models::SwarmInfo::cluster","value":"std::option::Option<models::ClusterInfo>","parent":{"krate":0,"index":11395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Cluster\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162770,"byte_end":162798,"line_start":4414,"line_end":4414,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162803,"byte_end":162850,"line_start":4415,"line_end":4415,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11478},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163013,"byte_end":163022,"line_start":4422,"line_end":4422,"column_start":12,"column_end":21},"name":"SwarmSpec","qualname":"::models::SwarmSpec","value":"SwarmSpec { name, labels, orchestration, raft, dispatcher, ca_config, encryption_config, task_defaults }","parent":null,"children":[{"krate":0,"index":11479},{"krate":0,"index":11480},{"krate":0,"index":11481},{"krate":0,"index":11482},{"krate":0,"index":11483},{"krate":0,"index":11484},{"krate":0,"index":11485},{"krate":0,"index":11486}],"decl_id":null,"docs":" User modifiable swarm configuration.\n","sig":null,"attributes":[{"value":"/ User modifiable swarm configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":162893,"byte_end":162933,"line_start":4420,"line_end":4420,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":11479},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163142,"byte_end":163146,"line_start":4426,"line_end":4426,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SwarmSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":" Name of the swarm.\n","sig":null,"attributes":[{"value":"/ Name of the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163029,"byte_end":163051,"line_start":4423,"line_end":4423,"column_start":5,"column_end":27}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163056,"byte_end":163081,"line_start":4424,"line_end":4424,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163086,"byte_end":163133,"line_start":4425,"line_end":4425,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11480},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163298,"byte_end":163304,"line_start":4431,"line_end":4431,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::SwarmSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163169,"byte_end":163205,"line_start":4428,"line_end":4428,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163210,"byte_end":163237,"line_start":4429,"line_end":4429,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163242,"byte_end":163289,"line_start":4430,"line_end":4430,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11481},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163439,"byte_end":163452,"line_start":4435,"line_end":4435,"column_start":9,"column_end":22},"name":"orchestration","qualname":"::models::SwarmSpec::orchestration","value":"std::option::Option<models::SwarmSpecOrchestration>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Orchestration\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163344,"byte_end":163378,"line_start":4433,"line_end":4433,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163383,"byte_end":163430,"line_start":4434,"line_end":4434,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11482},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163577,"byte_end":163581,"line_start":4439,"line_end":4439,"column_start":9,"column_end":13},"name":"raft","qualname":"::models::SwarmSpec::raft","value":"std::option::Option<models::SwarmSpecRaft>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Raft\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163491,"byte_end":163516,"line_start":4437,"line_end":4437,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163521,"byte_end":163568,"line_start":4438,"line_end":4438,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11483},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163703,"byte_end":163713,"line_start":4443,"line_end":4443,"column_start":9,"column_end":19},"name":"dispatcher","qualname":"::models::SwarmSpec::dispatcher","value":"std::option::Option<models::SwarmSpecDispatcher>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Dispatcher\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163611,"byte_end":163642,"line_start":4441,"line_end":4441,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163647,"byte_end":163694,"line_start":4442,"line_end":4442,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11484},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163839,"byte_end":163848,"line_start":4447,"line_end":4447,"column_start":9,"column_end":18},"name":"ca_config","qualname":"::models::SwarmSpec::ca_config","value":"std::option::Option<models::SwarmSpecCaConfig>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CAConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163749,"byte_end":163778,"line_start":4445,"line_end":4445,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163783,"byte_end":163830,"line_start":4446,"line_end":4446,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11485},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163980,"byte_end":163997,"line_start":4451,"line_end":4451,"column_start":9,"column_end":26},"name":"encryption_config","qualname":"::models::SwarmSpec::encryption_config","value":"std::option::Option<models::SwarmSpecEncryptionConfig>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"EncryptionConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163882,"byte_end":163919,"line_start":4449,"line_end":4449,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":163924,"byte_end":163971,"line_start":4450,"line_end":4450,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11486},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164133,"byte_end":164146,"line_start":4455,"line_end":4455,"column_start":9,"column_end":22},"name":"task_defaults","qualname":"::models::SwarmSpec::task_defaults","value":"std::option::Option<models::SwarmSpecTaskDefaults>","parent":{"krate":0,"index":11478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TaskDefaults\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164039,"byte_end":164072,"line_start":4453,"line_end":4453,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164077,"byte_end":164124,"line_start":4454,"line_end":4454,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11558},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164284,"byte_end":164301,"line_start":4461,"line_end":4461,"column_start":12,"column_end":29},"name":"SwarmSpecCaConfig","qualname":"::models::SwarmSpecCaConfig","value":"SwarmSpecCaConfig { node_cert_expiry, external_c_as, signing_ca_cert, signing_ca_key, force_rotate }","parent":null,"children":[{"krate":0,"index":11559},{"krate":0,"index":11560},{"krate":0,"index":11561},{"krate":0,"index":11562},{"krate":0,"index":11563}],"decl_id":null,"docs":" CA configuration.\n","sig":null,"attributes":[{"value":"/ CA configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164183,"byte_end":164204,"line_start":4459,"line_end":4459,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":11559},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164459,"byte_end":164475,"line_start":4465,"line_end":4465,"column_start":9,"column_end":25},"name":"node_cert_expiry","qualname":"::models::SwarmSpecCaConfig::node_cert_expiry","value":"std::option::Option<i64>","parent":{"krate":0,"index":11558},"children":[],"decl_id":null,"docs":" The duration node certificates are issued for.\n","sig":null,"attributes":[{"value":"/ The duration node certificates are issued for.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164308,"byte_end":164358,"line_start":4462,"line_end":4462,"column_start":5,"column_end":55}},{"value":"serde(rename = \"NodeCertExpiry\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164363,"byte_end":164398,"line_start":4463,"line_end":4463,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164403,"byte_end":164450,"line_start":4464,"line_end":4464,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11560},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164681,"byte_end":164694,"line_start":4470,"line_end":4470,"column_start":9,"column_end":22},"name":"external_c_as","qualname":"::models::SwarmSpecCaConfig::external_c_as","value":"std::option::Option<std::vec::Vec<models::SwarmSpecCaConfigExternalCAs>>","parent":{"krate":0,"index":11558},"children":[],"decl_id":null,"docs":" Configuration for forwarding signing requests to an external certificate authority. \n","sig":null,"attributes":[{"value":"/ Configuration for forwarding signing requests to an external certificate authority. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164495,"byte_end":164583,"line_start":4467,"line_end":4467,"column_start":5,"column_end":93}},{"value":"serde(rename = \"ExternalCAs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164588,"byte_end":164620,"line_start":4468,"line_end":4468,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164625,"byte_end":164672,"line_start":4469,"line_end":4469,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11561},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164940,"byte_end":164955,"line_start":4475,"line_end":4475,"column_start":9,"column_end":24},"name":"signing_ca_cert","qualname":"::models::SwarmSpecCaConfig::signing_ca_cert","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11558},"children":[],"decl_id":null,"docs":" The desired signing CA certificate for all swarm node TLS leaf certificates, in PEM format. \n","sig":null,"attributes":[{"value":"/ The desired signing CA certificate for all swarm node TLS leaf certificates, in PEM format. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164744,"byte_end":164840,"line_start":4472,"line_end":4472,"column_start":5,"column_end":101}},{"value":"serde(rename = \"SigningCACert\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164845,"byte_end":164879,"line_start":4473,"line_end":4473,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164884,"byte_end":164931,"line_start":4474,"line_end":4474,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11562},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165165,"byte_end":165179,"line_start":4480,"line_end":4480,"column_start":9,"column_end":23},"name":"signing_ca_key","qualname":"::models::SwarmSpecCaConfig::signing_ca_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11558},"children":[],"decl_id":null,"docs":" The desired signing CA key for all swarm node TLS leaf certificates, in PEM format. \n","sig":null,"attributes":[{"value":"/ The desired signing CA key for all swarm node TLS leaf certificates, in PEM format. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":164978,"byte_end":165066,"line_start":4477,"line_end":4477,"column_start":5,"column_end":93}},{"value":"serde(rename = \"SigningCAKey\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165071,"byte_end":165104,"line_start":4478,"line_end":4478,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165109,"byte_end":165156,"line_start":4479,"line_end":4479,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11563},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165463,"byte_end":165475,"line_start":4485,"line_end":4485,"column_start":9,"column_end":21},"name":"force_rotate","qualname":"::models::SwarmSpecCaConfig::force_rotate","value":"std::option::Option<u64>","parent":{"krate":0,"index":11558},"children":[],"decl_id":null,"docs":" An integer whose purpose is to force swarm to generate a new signing CA certificate and key, if none have been specified in `SigningCACert` and `SigningCAKey` \n","sig":null,"attributes":[{"value":"/ An integer whose purpose is to force swarm to generate a new signing CA certificate and key, if none have been specified in `SigningCACert` and `SigningCAKey` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165202,"byte_end":165365,"line_start":4482,"line_end":4482,"column_start":5,"column_end":168}},{"value":"serde(rename = \"ForceRotate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165370,"byte_end":165402,"line_start":4483,"line_end":4483,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165407,"byte_end":165454,"line_start":4484,"line_end":4484,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11629},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165573,"byte_end":165601,"line_start":4490,"line_end":4490,"column_start":12,"column_end":40},"name":"SwarmSpecCaConfigExternalCAs","qualname":"::models::SwarmSpecCaConfigExternalCAs","value":"SwarmSpecCaConfigExternalCAs { protocol, url, options, ca_cert }","parent":null,"children":[{"krate":0,"index":11630},{"krate":0,"index":11631},{"krate":0,"index":11632},{"krate":0,"index":11633}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11630},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165794,"byte_end":165802,"line_start":4494,"line_end":4494,"column_start":9,"column_end":17},"name":"protocol","qualname":"::models::SwarmSpecCaConfigExternalCAs::protocol","value":"std::option::Option<models::SwarmSpecCaConfigExternalCAsProtocolEnum>","parent":{"krate":0,"index":11629},"children":[],"decl_id":null,"docs":" Protocol for communication with the external CA (currently only `cfssl` is supported). \n","sig":null,"attributes":[{"value":"/ Protocol for communication with the external CA (currently only `cfssl` is supported). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165608,"byte_end":165699,"line_start":4491,"line_end":4491,"column_start":5,"column_end":96}},{"value":"serde(rename = \"Protocol\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165704,"byte_end":165733,"line_start":4492,"line_end":4492,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165738,"byte_end":165785,"line_start":4493,"line_end":4493,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11631},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166008,"byte_end":166011,"line_start":4499,"line_end":4499,"column_start":9,"column_end":12},"name":"url","qualname":"::models::SwarmSpecCaConfigExternalCAs::url","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11629},"children":[],"decl_id":null,"docs":" URL where certificate signing requests should be sent. \n","sig":null,"attributes":[{"value":"/ URL where certificate signing requests should be sent. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165859,"byte_end":165918,"line_start":4496,"line_end":4496,"column_start":5,"column_end":64}},{"value":"serde(rename = \"URL\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165923,"byte_end":165947,"line_start":4497,"line_end":4497,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":165952,"byte_end":165999,"line_start":4498,"line_end":4498,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11632},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166241,"byte_end":166248,"line_start":4504,"line_end":4504,"column_start":9,"column_end":16},"name":"options","qualname":"::models::SwarmSpecCaConfigExternalCAs::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":11629},"children":[],"decl_id":null,"docs":" An object with key/value pairs that are interpreted as protocol-specific options for the external CA driver. \n","sig":null,"attributes":[{"value":"/ An object with key/value pairs that are interpreted as protocol-specific options for the external CA driver. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166034,"byte_end":166147,"line_start":4501,"line_end":4501,"column_start":5,"column_end":118}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166152,"byte_end":166180,"line_start":4502,"line_end":4502,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166185,"byte_end":166232,"line_start":4503,"line_end":4503,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11633},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166547,"byte_end":166554,"line_start":4509,"line_end":4509,"column_start":9,"column_end":16},"name":"ca_cert","qualname":"::models::SwarmSpecCaConfigExternalCAs::ca_cert","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":11629},"children":[],"decl_id":null,"docs":" The root CA certificate (in PEM format) this external CA uses to issue TLS certificates (assumed to be to the current swarm root CA certificate if not provided). \n","sig":null,"attributes":[{"value":"/ The root CA certificate (in PEM format) this external CA uses to issue TLS certificates (assumed to be to the current swarm root CA certificate if not provided). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166288,"byte_end":166454,"line_start":4506,"line_end":4506,"column_start":5,"column_end":171}},{"value":"serde(rename = \"CACert\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166459,"byte_end":166486,"line_start":4507,"line_end":4507,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166491,"byte_end":166538,"line_start":4508,"line_end":4508,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11698},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166776,"byte_end":166781,"line_start":4517,"line_end":4517,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::SwarmSpecCaConfigExternalCAsProtocolEnum::EMPTY","value":"SwarmSpecCaConfigExternalCAsProtocolEnum::EMPTY","parent":{"krate":0,"index":11697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166750,"byte_end":166771,"line_start":4516,"line_end":4516,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11700},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166818,"byte_end":166823,"line_start":4519,"line_end":4519,"column_start":5,"column_end":10},"name":"CFSSL","qualname":"::models::SwarmSpecCaConfigExternalCAsProtocolEnum::CFSSL","value":"SwarmSpecCaConfigExternalCAsProtocolEnum::CFSSL","parent":{"krate":0,"index":11697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"cfssl\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166787,"byte_end":166813,"line_start":4518,"line_end":4518,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":11697},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166702,"byte_end":166742,"line_start":4515,"line_end":4515,"column_start":10,"column_end":50},"name":"SwarmSpecCaConfigExternalCAsProtocolEnum","qualname":"::models::SwarmSpecCaConfigExternalCAsProtocolEnum","value":"pub enum SwarmSpecCaConfigExternalCAsProtocolEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"cfssl\")]\n    CFSSL,\n}","parent":null,"children":[{"krate":0,"index":11698},{"krate":0,"index":11700}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166576,"byte_end":166606,"line_start":4513,"line_end":4513,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11762},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167975,"byte_end":167994,"line_start":4554,"line_end":4554,"column_start":12,"column_end":31},"name":"SwarmSpecDispatcher","qualname":"::models::SwarmSpecDispatcher","value":"SwarmSpecDispatcher { heartbeat_period }","parent":null,"children":[{"krate":0,"index":11763}],"decl_id":null,"docs":" Dispatcher configuration.\n","sig":null,"attributes":[{"value":"/ Dispatcher configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167866,"byte_end":167895,"line_start":4552,"line_end":4552,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":11763},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168169,"byte_end":168185,"line_start":4558,"line_end":4558,"column_start":9,"column_end":25},"name":"heartbeat_period","qualname":"::models::SwarmSpecDispatcher::heartbeat_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":11762},"children":[],"decl_id":null,"docs":" The delay for an agent to send a heartbeat to the dispatcher. \n","sig":null,"attributes":[{"value":"/ The delay for an agent to send a heartbeat to the dispatcher. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168001,"byte_end":168067,"line_start":4555,"line_end":4555,"column_start":5,"column_end":71}},{"value":"serde(rename = \"HeartbeatPeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168072,"byte_end":168108,"line_start":4556,"line_end":4556,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168113,"byte_end":168160,"line_start":4557,"line_end":4557,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11821},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168329,"byte_end":168354,"line_start":4564,"line_end":4564,"column_start":12,"column_end":37},"name":"SwarmSpecEncryptionConfig","qualname":"::models::SwarmSpecEncryptionConfig","value":"SwarmSpecEncryptionConfig { auto_lock_managers }","parent":null,"children":[{"krate":0,"index":11822}],"decl_id":null,"docs":" Parameters related to encryption-at-rest.\n","sig":null,"attributes":[{"value":"/ Parameters related to encryption-at-rest.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168204,"byte_end":168249,"line_start":4562,"line_end":4562,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":11822},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168539,"byte_end":168557,"line_start":4568,"line_end":4568,"column_start":9,"column_end":27},"name":"auto_lock_managers","qualname":"::models::SwarmSpecEncryptionConfig::auto_lock_managers","value":"std::option::Option<bool>","parent":{"krate":0,"index":11821},"children":[],"decl_id":null,"docs":" If set, generate a key and use it to lock data stored on the managers. \n","sig":null,"attributes":[{"value":"/ If set, generate a key and use it to lock data stored on the managers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168361,"byte_end":168436,"line_start":4565,"line_end":4565,"column_start":5,"column_end":80}},{"value":"serde(rename = \"AutoLockManagers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168441,"byte_end":168478,"line_start":4566,"line_end":4566,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168483,"byte_end":168530,"line_start":4567,"line_end":4567,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11880},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168689,"byte_end":168711,"line_start":4574,"line_end":4574,"column_start":12,"column_end":34},"name":"SwarmSpecOrchestration","qualname":"::models::SwarmSpecOrchestration","value":"SwarmSpecOrchestration { task_history_retention_limit }","parent":null,"children":[{"krate":0,"index":11881}],"decl_id":null,"docs":" Orchestration configuration.\n","sig":null,"attributes":[{"value":"/ Orchestration configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168577,"byte_end":168609,"line_start":4572,"line_end":4572,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":11881},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168946,"byte_end":168974,"line_start":4578,"line_end":4578,"column_start":9,"column_end":37},"name":"task_history_retention_limit","qualname":"::models::SwarmSpecOrchestration::task_history_retention_limit","value":"std::option::Option<i64>","parent":{"krate":0,"index":11880},"children":[],"decl_id":null,"docs":" The number of historic tasks to keep per instance or node. If negative, never remove completed or failed tasks. \n","sig":null,"attributes":[{"value":"/ The number of historic tasks to keep per instance or node. If negative, never remove completed or failed tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168718,"byte_end":168834,"line_start":4575,"line_end":4575,"column_start":5,"column_end":121}},{"value":"serde(rename = \"TaskHistoryRetentionLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168839,"byte_end":168885,"line_start":4576,"line_end":4576,"column_start":5,"column_end":51}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168890,"byte_end":168937,"line_start":4577,"line_end":4577,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":11939},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169096,"byte_end":169109,"line_start":4584,"line_end":4584,"column_start":12,"column_end":25},"name":"SwarmSpecRaft","qualname":"::models::SwarmSpecRaft","value":"SwarmSpecRaft { snapshot_interval, keep_old_snapshots, log_entries_for_slow_followers, election_tick, heartbeat_tick }","parent":null,"children":[{"krate":0,"index":11940},{"krate":0,"index":11941},{"krate":0,"index":11942},{"krate":0,"index":11943},{"krate":0,"index":11944}],"decl_id":null,"docs":" Raft configuration.\n","sig":null,"attributes":[{"value":"/ Raft configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":168993,"byte_end":169016,"line_start":4582,"line_end":4582,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":11940},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169267,"byte_end":169284,"line_start":4588,"line_end":4588,"column_start":9,"column_end":26},"name":"snapshot_interval","qualname":"::models::SwarmSpecRaft::snapshot_interval","value":"std::option::Option<u64>","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":" The number of log entries between snapshots.\n","sig":null,"attributes":[{"value":"/ The number of log entries between snapshots.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169116,"byte_end":169164,"line_start":4585,"line_end":4585,"column_start":5,"column_end":53}},{"value":"serde(rename = \"SnapshotInterval\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169169,"byte_end":169206,"line_start":4586,"line_end":4586,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169211,"byte_end":169258,"line_start":4587,"line_end":4587,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11941},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169472,"byte_end":169490,"line_start":4593,"line_end":4593,"column_start":9,"column_end":27},"name":"keep_old_snapshots","qualname":"::models::SwarmSpecRaft::keep_old_snapshots","value":"std::option::Option<u64>","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":" The number of snapshots to keep beyond the current snapshot. \n","sig":null,"attributes":[{"value":"/ The number of snapshots to keep beyond the current snapshot. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169304,"byte_end":169369,"line_start":4590,"line_end":4590,"column_start":5,"column_end":70}},{"value":"serde(rename = \"KeepOldSnapshots\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169374,"byte_end":169411,"line_start":4591,"line_end":4591,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169416,"byte_end":169463,"line_start":4592,"line_end":4592,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11942},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169723,"byte_end":169753,"line_start":4598,"line_end":4598,"column_start":9,"column_end":39},"name":"log_entries_for_slow_followers","qualname":"::models::SwarmSpecRaft::log_entries_for_slow_followers","value":"std::option::Option<u64>","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":" The number of log entries to keep around to sync up slow followers after a snapshot is created. \n","sig":null,"attributes":[{"value":"/ The number of log entries to keep around to sync up slow followers after a snapshot is created. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169510,"byte_end":169610,"line_start":4595,"line_end":4595,"column_start":5,"column_end":105}},{"value":"serde(rename = \"LogEntriesForSlowFollowers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169615,"byte_end":169662,"line_start":4596,"line_end":4596,"column_start":5,"column_end":52}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169667,"byte_end":169714,"line_start":4597,"line_end":4597,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11943},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170179,"byte_end":170192,"line_start":4603,"line_end":4603,"column_start":9,"column_end":22},"name":"election_tick","qualname":"::models::SwarmSpecRaft::election_tick","value":"std::option::Option<i64>","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":" The number of ticks that a follower will wait for a message from the leader before becoming a candidate and starting an election. `ElectionTick` must be greater than `HeartbeatTick`.  A tick currently defaults to one second, so these translate directly to seconds currently, but this is NOT guaranteed. \n","sig":null,"attributes":[{"value":"/ The number of ticks that a follower will wait for a message from the leader before becoming a candidate and starting an election. `ElectionTick` must be greater than `HeartbeatTick`.  A tick currently defaults to one second, so these translate directly to seconds currently, but this is NOT guaranteed. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":169773,"byte_end":170080,"line_start":4600,"line_end":4600,"column_start":5,"column_end":312}},{"value":"serde(rename = \"ElectionTick\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170085,"byte_end":170118,"line_start":4601,"line_end":4601,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170123,"byte_end":170170,"line_start":4602,"line_end":4602,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":11944},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170554,"byte_end":170568,"line_start":4608,"line_end":4608,"column_start":9,"column_end":23},"name":"heartbeat_tick","qualname":"::models::SwarmSpecRaft::heartbeat_tick","value":"std::option::Option<i64>","parent":{"krate":0,"index":11939},"children":[],"decl_id":null,"docs":" The number of ticks between heartbeats. Every HeartbeatTick ticks, the leader will send a heartbeat to the followers.  A tick currently defaults to one second, so these translate directly to seconds currently, but this is NOT guaranteed. \n","sig":null,"attributes":[{"value":"/ The number of ticks between heartbeats. Every HeartbeatTick ticks, the leader will send a heartbeat to the followers.  A tick currently defaults to one second, so these translate directly to seconds currently, but this is NOT guaranteed. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170212,"byte_end":170454,"line_start":4605,"line_end":4605,"column_start":5,"column_end":247}},{"value":"serde(rename = \"HeartbeatTick\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170459,"byte_end":170493,"line_start":4606,"line_end":4606,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170498,"byte_end":170545,"line_start":4607,"line_end":4607,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12010},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170715,"byte_end":170736,"line_start":4614,"line_end":4614,"column_start":12,"column_end":33},"name":"SwarmSpecTaskDefaults","qualname":"::models::SwarmSpecTaskDefaults","value":"SwarmSpecTaskDefaults { log_driver }","parent":null,"children":[{"krate":0,"index":12011}],"decl_id":null,"docs":" Defaults for creating tasks in this cluster.\n","sig":null,"attributes":[{"value":"/ Defaults for creating tasks in this cluster.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170587,"byte_end":170635,"line_start":4612,"line_end":4612,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":12011},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170834,"byte_end":170844,"line_start":4617,"line_end":4617,"column_start":9,"column_end":19},"name":"log_driver","qualname":"::models::SwarmSpecTaskDefaults::log_driver","value":"std::option::Option<models::SwarmSpecTaskDefaultsLogDriver>","parent":{"krate":0,"index":12010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LogDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170743,"byte_end":170773,"line_start":4615,"line_end":4615,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170778,"byte_end":170825,"line_start":4616,"line_end":4616,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12069},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171195,"byte_end":171225,"line_start":4623,"line_end":4623,"column_start":12,"column_end":42},"name":"SwarmSpecTaskDefaultsLogDriver","qualname":"::models::SwarmSpecTaskDefaultsLogDriver","value":"SwarmSpecTaskDefaultsLogDriver { name, options }","parent":null,"children":[{"krate":0,"index":12070},{"krate":0,"index":12071}],"decl_id":null,"docs":" The log driver to use for tasks created in the orchestrator if unspecified by a service.  Updating this value only affects new tasks. Existing tasks continue to use their previously configured log driver until recreated. \n","sig":null,"attributes":[{"value":"/ The log driver to use for tasks created in the orchestrator if unspecified by a service.  Updating this value only affects new tasks. Existing tasks continue to use their previously configured log driver until recreated. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":170890,"byte_end":171115,"line_start":4621,"line_end":4621,"column_start":1,"column_end":226}}]},{"kind":"Field","id":{"krate":0,"index":12070},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171377,"byte_end":171381,"line_start":4627,"line_end":4627,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SwarmSpecTaskDefaultsLogDriver::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12069},"children":[],"decl_id":null,"docs":" The log driver to use as a default for new tasks. \n","sig":null,"attributes":[{"value":"/ The log driver to use as a default for new tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171232,"byte_end":171286,"line_start":4624,"line_end":4624,"column_start":5,"column_end":59}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171291,"byte_end":171316,"line_start":4625,"line_end":4625,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171321,"byte_end":171368,"line_start":4626,"line_end":4626,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12071},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171584,"byte_end":171591,"line_start":4632,"line_end":4632,"column_start":9,"column_end":16},"name":"options","qualname":"::models::SwarmSpecTaskDefaultsLogDriver::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":12069},"children":[],"decl_id":null,"docs":" Driver-specific options for the selectd log driver, specified as key/value pairs. \n","sig":null,"attributes":[{"value":"/ Driver-specific options for the selectd log driver, specified as key/value pairs. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171404,"byte_end":171490,"line_start":4629,"line_end":4629,"column_start":5,"column_end":91}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171495,"byte_end":171523,"line_start":4630,"line_end":4630,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171528,"byte_end":171575,"line_start":4631,"line_end":4631,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12131},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171709,"byte_end":171727,"line_start":4637,"line_end":4637,"column_start":12,"column_end":30},"name":"SystemAuthResponse","qualname":"::models::SystemAuthResponse","value":"SystemAuthResponse { status, identity_token }","parent":null,"children":[{"krate":0,"index":12132},{"krate":0,"index":12133}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12132},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171811,"byte_end":171817,"line_start":4640,"line_end":4640,"column_start":9,"column_end":15},"name":"status","qualname":"::models::SystemAuthResponse::status","value":"std::string::String","parent":{"krate":0,"index":12131},"children":[],"decl_id":null,"docs":" The status of the authentication\n","sig":null,"attributes":[{"value":"/ The status of the authentication","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171734,"byte_end":171770,"line_start":4638,"line_end":4638,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171775,"byte_end":171802,"line_start":4639,"line_end":4639,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":12133},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172004,"byte_end":172018,"line_start":4645,"line_end":4645,"column_start":9,"column_end":23},"name":"identity_token","qualname":"::models::SystemAuthResponse::identity_token","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12131},"children":[],"decl_id":null,"docs":" An opaque token used to authenticate a user after a successful login\n","sig":null,"attributes":[{"value":"/ An opaque token used to authenticate a user after a successful login","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171832,"byte_end":171904,"line_start":4642,"line_end":4642,"column_start":5,"column_end":77}},{"value":"serde(rename = \"IdentityToken\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171909,"byte_end":171943,"line_start":4643,"line_end":4643,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":171948,"byte_end":171995,"line_start":4644,"line_end":4644,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12193},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172119,"byte_end":172142,"line_start":4650,"line_end":4650,"column_start":12,"column_end":35},"name":"SystemDataUsageResponse","qualname":"::models::SystemDataUsageResponse","value":"SystemDataUsageResponse { layers_size, images, containers, volumes, build_cache }","parent":null,"children":[{"krate":0,"index":12194},{"krate":0,"index":12195},{"krate":0,"index":12196},{"krate":0,"index":12197},{"krate":0,"index":12198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12194},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172241,"byte_end":172252,"line_start":4653,"line_end":4653,"column_start":9,"column_end":20},"name":"layers_size","qualname":"::models::SystemDataUsageResponse::layers_size","value":"std::option::Option<i64>","parent":{"krate":0,"index":12193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LayersSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172149,"byte_end":172180,"line_start":4651,"line_end":4651,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172185,"byte_end":172232,"line_start":4652,"line_end":4652,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12195},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172360,"byte_end":172366,"line_start":4657,"line_end":4657,"column_start":9,"column_end":15},"name":"images","qualname":"::models::SystemDataUsageResponse::images","value":"std::option::Option<std::vec::Vec<models::ImageSummary>>","parent":{"krate":0,"index":12193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Images\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172272,"byte_end":172299,"line_start":4655,"line_end":4655,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172304,"byte_end":172351,"line_start":4656,"line_end":4656,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12196},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172492,"byte_end":172502,"line_start":4661,"line_end":4661,"column_start":9,"column_end":19},"name":"containers","qualname":"::models::SystemDataUsageResponse::containers","value":"std::option::Option<std::vec::Vec<models::ContainerSummaryInner>>","parent":{"krate":0,"index":12193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Containers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172400,"byte_end":172431,"line_start":4659,"line_end":4659,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172436,"byte_end":172483,"line_start":4660,"line_end":4660,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12197},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172629,"byte_end":172636,"line_start":4665,"line_end":4665,"column_start":9,"column_end":16},"name":"volumes","qualname":"::models::SystemDataUsageResponse::volumes","value":"std::option::Option<std::vec::Vec<models::Volume>>","parent":{"krate":0,"index":12193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Volumes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172540,"byte_end":172568,"line_start":4663,"line_end":4663,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172573,"byte_end":172620,"line_start":4664,"line_end":4664,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12198},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172756,"byte_end":172767,"line_start":4669,"line_end":4669,"column_start":9,"column_end":20},"name":"build_cache","qualname":"::models::SystemDataUsageResponse::build_cache","value":"std::option::Option<std::vec::Vec<models::BuildCache>>","parent":{"krate":0,"index":12193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"BuildCache\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172664,"byte_end":172695,"line_start":4667,"line_end":4667,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172700,"byte_end":172747,"line_start":4668,"line_end":4668,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12264},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172877,"byte_end":172897,"line_start":4674,"line_end":4674,"column_start":12,"column_end":32},"name":"SystemEventsResponse","qualname":"::models::SystemEventsResponse","value":"SystemEventsResponse { typ, action, actor, time, time_nano }","parent":null,"children":[{"krate":0,"index":12265},{"krate":0,"index":12266},{"krate":0,"index":12267},{"krate":0,"index":12268},{"krate":0,"index":12269}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12265},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173036,"byte_end":173039,"line_start":4678,"line_end":4678,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::SystemEventsResponse::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12264},"children":[],"decl_id":null,"docs":" The type of object emitting the event\n","sig":null,"attributes":[{"value":"/ The type of object emitting the event","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172904,"byte_end":172945,"line_start":4675,"line_end":4675,"column_start":5,"column_end":46}},{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172950,"byte_end":172975,"line_start":4676,"line_end":4676,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":172980,"byte_end":173027,"line_start":4677,"line_end":4677,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12266},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173176,"byte_end":173182,"line_start":4683,"line_end":4683,"column_start":9,"column_end":15},"name":"action","qualname":"::models::SystemEventsResponse::action","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12264},"children":[],"decl_id":null,"docs":" The type of event\n","sig":null,"attributes":[{"value":"/ The type of event","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173062,"byte_end":173083,"line_start":4680,"line_end":4680,"column_start":5,"column_end":26}},{"value":"serde(rename = \"Action\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173088,"byte_end":173115,"line_start":4681,"line_end":4681,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173120,"byte_end":173167,"line_start":4682,"line_end":4682,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12267},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173292,"byte_end":173297,"line_start":4687,"line_end":4687,"column_start":9,"column_end":14},"name":"actor","qualname":"::models::SystemEventsResponse::actor","value":"std::option::Option<models::SystemEventsResponseActor>","parent":{"krate":0,"index":12264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Actor\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173205,"byte_end":173231,"line_start":4685,"line_end":4685,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173236,"byte_end":173283,"line_start":4686,"line_end":4686,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12268},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173452,"byte_end":173456,"line_start":4692,"line_end":4692,"column_start":9,"column_end":13},"name":"time","qualname":"::models::SystemEventsResponse::time","value":"std::option::Option<i64>","parent":{"krate":0,"index":12264},"children":[],"decl_id":null,"docs":" Timestamp of event\n","sig":null,"attributes":[{"value":"/ Timestamp of event","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173339,"byte_end":173361,"line_start":4689,"line_end":4689,"column_start":5,"column_end":27}},{"value":"serde(rename = \"time\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173366,"byte_end":173391,"line_start":4690,"line_end":4690,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173396,"byte_end":173443,"line_start":4691,"line_end":4691,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12269},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173619,"byte_end":173628,"line_start":4697,"line_end":4697,"column_start":9,"column_end":18},"name":"time_nano","qualname":"::models::SystemEventsResponse::time_nano","value":"std::option::Option<i64>","parent":{"krate":0,"index":12264},"children":[],"decl_id":null,"docs":" Timestamp of event, with nanosecond accuracy\n","sig":null,"attributes":[{"value":"/ Timestamp of event, with nanosecond accuracy","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173476,"byte_end":173524,"line_start":4694,"line_end":4694,"column_start":5,"column_end":53}},{"value":"serde(rename = \"timeNano\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173529,"byte_end":173558,"line_start":4695,"line_end":4695,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173563,"byte_end":173610,"line_start":4696,"line_end":4696,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12335},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173726,"byte_end":173751,"line_start":4702,"line_end":4702,"column_start":12,"column_end":37},"name":"SystemEventsResponseActor","qualname":"::models::SystemEventsResponseActor","value":"SystemEventsResponseActor { id, attributes }","parent":null,"children":[{"krate":0,"index":12336},{"krate":0,"index":12337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12336},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173890,"byte_end":173892,"line_start":4706,"line_end":4706,"column_start":9,"column_end":11},"name":"id","qualname":"::models::SystemEventsResponseActor::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12335},"children":[],"decl_id":null,"docs":" The ID of the object emitting the event\n","sig":null,"attributes":[{"value":"/ The ID of the object emitting the event","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173758,"byte_end":173801,"line_start":4703,"line_end":4703,"column_start":5,"column_end":48}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173806,"byte_end":173829,"line_start":4704,"line_end":4704,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173834,"byte_end":173881,"line_start":4705,"line_end":4705,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12337},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174081,"byte_end":174091,"line_start":4711,"line_end":4711,"column_start":9,"column_end":19},"name":"attributes","qualname":"::models::SystemEventsResponseActor::attributes","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":12335},"children":[],"decl_id":null,"docs":" Various key/value attributes of the object, depending on its type\n","sig":null,"attributes":[{"value":"/ Various key/value attributes of the object, depending on its type","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173915,"byte_end":173984,"line_start":4708,"line_end":4708,"column_start":5,"column_end":74}},{"value":"serde(rename = \"Attributes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":173989,"byte_end":174020,"line_start":4709,"line_end":4709,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174025,"byte_end":174072,"line_start":4710,"line_end":4710,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12397},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174209,"byte_end":174219,"line_start":4716,"line_end":4716,"column_start":12,"column_end":22},"name":"SystemInfo","qualname":"::models::SystemInfo","value":"SystemInfo { id, containers, containers_running, containers_paused, containers_stopped, images, driver, driver_status, docker_root_dir, system_status, plugins, memory_limit, swap_limit, kernel_memory, cpu_cfs_period, cpu_cfs_quota, cpu_shares, cpu_set, pids_limit, oom_kill_disable, ipv4_forwarding, bridge_nf_iptables, bridge_nf_ip6tables, debug, n_fd, n_goroutines, system_time, logging_driver, cgroup_driver, n_events_listener, kernel_version, operating_system, os_type, architecture, ncpu, mem_total, index_server_address, registry_config, generic_resources, http_proxy, https_proxy, no_proxy, name, labels, experimental_build, server_version, cluster_store, cluster_advertise, runtimes, default_runtime, swarm, live_restore_enabled, isolation, init_binary, containerd_commit, runc_commit, init_commit, security_options, product_license, warnings }","parent":null,"children":[{"krate":0,"index":12398},{"krate":0,"index":12399},{"krate":0,"index":12400},{"krate":0,"index":12401},{"krate":0,"index":12402},{"krate":0,"index":12403},{"krate":0,"index":12404},{"krate":0,"index":12405},{"krate":0,"index":12406},{"krate":0,"index":12407},{"krate":0,"index":12408},{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":12411},{"krate":0,"index":12412},{"krate":0,"index":12413},{"krate":0,"index":12414},{"krate":0,"index":12415},{"krate":0,"index":12416},{"krate":0,"index":12417},{"krate":0,"index":12418},{"krate":0,"index":12419},{"krate":0,"index":12420},{"krate":0,"index":12421},{"krate":0,"index":12422},{"krate":0,"index":12423},{"krate":0,"index":12424},{"krate":0,"index":12425},{"krate":0,"index":12426},{"krate":0,"index":12427},{"krate":0,"index":12428},{"krate":0,"index":12429},{"krate":0,"index":12430},{"krate":0,"index":12431},{"krate":0,"index":12432},{"krate":0,"index":12433},{"krate":0,"index":12434},{"krate":0,"index":12435},{"krate":0,"index":12436},{"krate":0,"index":12437},{"krate":0,"index":12438},{"krate":0,"index":12439},{"krate":0,"index":12440},{"krate":0,"index":12441},{"krate":0,"index":12442},{"krate":0,"index":12443},{"krate":0,"index":12444},{"krate":0,"index":12445},{"krate":0,"index":12446},{"krate":0,"index":12447},{"krate":0,"index":12448},{"krate":0,"index":12449},{"krate":0,"index":12450},{"krate":0,"index":12451},{"krate":0,"index":12452},{"krate":0,"index":12453},{"krate":0,"index":12454},{"krate":0,"index":12455},{"krate":0,"index":12456},{"krate":0,"index":12457}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12398},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174471,"byte_end":174473,"line_start":4720,"line_end":4720,"column_start":9,"column_end":11},"name":"id","qualname":"::models::SystemInfo::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Unique identifier of the daemon.  <p><br /></p>  > **Note**: The format of the ID itself is not part of the API, and > should not be considered stable. \n","sig":null,"attributes":[{"value":"/ Unique identifier of the daemon.  <p><br /></p>  > **Note**: The format of the ID itself is not part of the API, and > should not be considered stable. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174226,"byte_end":174382,"line_start":4717,"line_end":4717,"column_start":5,"column_end":161}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174387,"byte_end":174410,"line_start":4718,"line_end":4718,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174415,"byte_end":174462,"line_start":4719,"line_end":4719,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12399},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174636,"byte_end":174646,"line_start":4725,"line_end":4725,"column_start":9,"column_end":19},"name":"containers","qualname":"::models::SystemInfo::containers","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Total number of containers on the host.\n","sig":null,"attributes":[{"value":"/ Total number of containers on the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174496,"byte_end":174539,"line_start":4722,"line_end":4722,"column_start":5,"column_end":48}},{"value":"serde(rename = \"Containers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174544,"byte_end":174575,"line_start":4723,"line_end":4723,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174580,"byte_end":174627,"line_start":4724,"line_end":4724,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12400},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174822,"byte_end":174840,"line_start":4730,"line_end":4730,"column_start":9,"column_end":27},"name":"containers_running","qualname":"::models::SystemInfo::containers_running","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Number of containers with status `\\\"running\\\"`. \n","sig":null,"attributes":[{"value":"/ Number of containers with status `\\\"running\\\"`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174666,"byte_end":174718,"line_start":4727,"line_end":4727,"column_start":5,"column_end":57}},{"value":"serde(rename = \"ContainersRunning\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174723,"byte_end":174761,"line_start":4728,"line_end":4728,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174766,"byte_end":174813,"line_start":4729,"line_end":4729,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12401},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175014,"byte_end":175031,"line_start":4735,"line_end":4735,"column_start":9,"column_end":26},"name":"containers_paused","qualname":"::models::SystemInfo::containers_paused","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Number of containers with status `\\\"paused\\\"`. \n","sig":null,"attributes":[{"value":"/ Number of containers with status `\\\"paused\\\"`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174860,"byte_end":174911,"line_start":4732,"line_end":4732,"column_start":5,"column_end":56}},{"value":"serde(rename = \"ContainersPaused\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174916,"byte_end":174953,"line_start":4733,"line_end":4733,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":174958,"byte_end":175005,"line_start":4734,"line_end":4734,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12402},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175207,"byte_end":175225,"line_start":4740,"line_end":4740,"column_start":9,"column_end":27},"name":"containers_stopped","qualname":"::models::SystemInfo::containers_stopped","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Number of containers with status `\\\"stopped\\\"`. \n","sig":null,"attributes":[{"value":"/ Number of containers with status `\\\"stopped\\\"`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175051,"byte_end":175103,"line_start":4737,"line_end":4737,"column_start":5,"column_end":57}},{"value":"serde(rename = \"ContainersStopped\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175108,"byte_end":175146,"line_start":4738,"line_end":4738,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175151,"byte_end":175198,"line_start":4739,"line_end":4739,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12403},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175439,"byte_end":175445,"line_start":4745,"line_end":4745,"column_start":9,"column_end":15},"name":"images","qualname":"::models::SystemInfo::images","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Total number of images on the host.  Both _tagged_ and _untagged_ (dangling) images are counted. \n","sig":null,"attributes":[{"value":"/ Total number of images on the host.  Both _tagged_ and _untagged_ (dangling) images are counted. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175245,"byte_end":175346,"line_start":4742,"line_end":4742,"column_start":5,"column_end":106}},{"value":"serde(rename = \"Images\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175351,"byte_end":175378,"line_start":4743,"line_end":4743,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175383,"byte_end":175430,"line_start":4744,"line_end":4744,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12404},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175596,"byte_end":175602,"line_start":4750,"line_end":4750,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::SystemInfo::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Name of the storage driver in use.\n","sig":null,"attributes":[{"value":"/ Name of the storage driver in use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175465,"byte_end":175503,"line_start":4747,"line_end":4747,"column_start":5,"column_end":43}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175508,"byte_end":175535,"line_start":4748,"line_end":4748,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175540,"byte_end":175587,"line_start":4749,"line_end":4749,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12405},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176137,"byte_end":176150,"line_start":4755,"line_end":4755,"column_start":9,"column_end":22},"name":"driver_status","qualname":"::models::SystemInfo::driver_status","value":"std::option::Option<std::vec::Vec<std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Information specific to the storage driver, provided as \\\"label\\\" / \\\"value\\\" pairs.  This information is provided by the storage driver, and formatted in a way consistent with the output of `docker info` on the command line.  <p><br /></p>  > **Note**: The information returned in this field, including the > formatting of values and labels, should not be considered stable, > and may change without notice. \n","sig":null,"attributes":[{"value":"/ Information specific to the storage driver, provided as \\\"label\\\" / \\\"value\\\" pairs.  This information is provided by the storage driver, and formatted in a way consistent with the output of `docker info` on the command line.  <p><br /></p>  > **Note**: The information returned in this field, including the > formatting of values and labels, should not be considered stable, > and may change without notice. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":175625,"byte_end":176038,"line_start":4752,"line_end":4752,"column_start":5,"column_end":418}},{"value":"serde(rename = \"DriverStatus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176043,"byte_end":176076,"line_start":4753,"line_end":4753,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176081,"byte_end":176128,"line_start":4754,"line_end":4754,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12406},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176413,"byte_end":176428,"line_start":4760,"line_end":4760,"column_start":9,"column_end":24},"name":"docker_root_dir","qualname":"::models::SystemInfo::docker_root_dir","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Root directory of persistent Docker state.  Defaults to `/var/lib/docker` on Linux, and `C:\\\\ProgramData\\\\docker` on Windows. \n","sig":null,"attributes":[{"value":"/ Root directory of persistent Docker state.  Defaults to `/var/lib/docker` on Linux, and `C:\\\\ProgramData\\\\docker` on Windows. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176183,"byte_end":176313,"line_start":4757,"line_end":4757,"column_start":5,"column_end":135}},{"value":"serde(rename = \"DockerRootDir\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176318,"byte_end":176352,"line_start":4758,"line_end":4758,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176357,"byte_end":176404,"line_start":4759,"line_end":4759,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12407},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176786,"byte_end":176799,"line_start":4765,"line_end":4765,"column_start":9,"column_end":22},"name":"system_status","qualname":"::models::SystemInfo::system_status","value":"std::option::Option<std::vec::Vec<std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Status information about this node (standalone Swarm API).  <p><br /></p>  > **Note**: The information returned in this field is only propagated > by the Swarm standalone API, and is empty (`null`) when using > built-in swarm mode. \n","sig":null,"attributes":[{"value":"/ Status information about this node (standalone Swarm API).  <p><br /></p>  > **Note**: The information returned in this field is only propagated > by the Swarm standalone API, and is empty (`null`) when using > built-in swarm mode. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176451,"byte_end":176687,"line_start":4762,"line_end":4762,"column_start":5,"column_end":241}},{"value":"serde(rename = \"SystemStatus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176692,"byte_end":176725,"line_start":4763,"line_end":4763,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176730,"byte_end":176777,"line_start":4764,"line_end":4764,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12408},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176921,"byte_end":176928,"line_start":4769,"line_end":4769,"column_start":9,"column_end":16},"name":"plugins","qualname":"::models::SystemInfo::plugins","value":"std::option::Option<models::PluginsInfo>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Plugins\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176832,"byte_end":176860,"line_start":4767,"line_end":4767,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176865,"byte_end":176912,"line_start":4768,"line_end":4768,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12409},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177113,"byte_end":177125,"line_start":4774,"line_end":4774,"column_start":9,"column_end":21},"name":"memory_limit","qualname":"::models::SystemInfo::memory_limit","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if the host has memory limit support enabled.\n","sig":null,"attributes":[{"value":"/ Indicates if the host has memory limit support enabled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":176956,"byte_end":177015,"line_start":4771,"line_end":4771,"column_start":5,"column_end":64}},{"value":"serde(rename = \"MemoryLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177020,"byte_end":177052,"line_start":4772,"line_end":4772,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177057,"byte_end":177104,"line_start":4773,"line_end":4773,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12410},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177306,"byte_end":177316,"line_start":4779,"line_end":4779,"column_start":9,"column_end":19},"name":"swap_limit","qualname":"::models::SystemInfo::swap_limit","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if the host has memory swap limit support enabled.\n","sig":null,"attributes":[{"value":"/ Indicates if the host has memory swap limit support enabled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177146,"byte_end":177210,"line_start":4776,"line_end":4776,"column_start":5,"column_end":69}},{"value":"serde(rename = \"SwapLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177215,"byte_end":177245,"line_start":4777,"line_end":4777,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177250,"byte_end":177297,"line_start":4778,"line_end":4778,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12411},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177502,"byte_end":177515,"line_start":4784,"line_end":4784,"column_start":9,"column_end":22},"name":"kernel_memory","qualname":"::models::SystemInfo::kernel_memory","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if the host has kernel memory limit support enabled.\n","sig":null,"attributes":[{"value":"/ Indicates if the host has kernel memory limit support enabled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177337,"byte_end":177403,"line_start":4781,"line_end":4781,"column_start":5,"column_end":71}},{"value":"serde(rename = \"KernelMemory\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177408,"byte_end":177441,"line_start":4782,"line_end":4782,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177446,"byte_end":177493,"line_start":4783,"line_end":4783,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12412},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177720,"byte_end":177734,"line_start":4789,"line_end":4789,"column_start":9,"column_end":23},"name":"cpu_cfs_period","qualname":"::models::SystemInfo::cpu_cfs_period","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if CPU CFS(Completely Fair Scheduler) period is supported by the host. \n","sig":null,"attributes":[{"value":"/ Indicates if CPU CFS(Completely Fair Scheduler) period is supported by the host. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177536,"byte_end":177621,"line_start":4786,"line_end":4786,"column_start":5,"column_end":90}},{"value":"serde(rename = \"CpuCfsPeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177626,"byte_end":177659,"line_start":4787,"line_end":4787,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177664,"byte_end":177711,"line_start":4788,"line_end":4788,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12413},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177937,"byte_end":177950,"line_start":4794,"line_end":4794,"column_start":9,"column_end":22},"name":"cpu_cfs_quota","qualname":"::models::SystemInfo::cpu_cfs_quota","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if CPU CFS(Completely Fair Scheduler) quota is supported by the host. \n","sig":null,"attributes":[{"value":"/ Indicates if CPU CFS(Completely Fair Scheduler) quota is supported by the host. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177755,"byte_end":177839,"line_start":4791,"line_end":4791,"column_start":5,"column_end":89}},{"value":"serde(rename = \"CpuCfsQuota\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177844,"byte_end":177876,"line_start":4792,"line_end":4792,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177881,"byte_end":177928,"line_start":4793,"line_end":4793,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12414},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178130,"byte_end":178140,"line_start":4799,"line_end":4799,"column_start":9,"column_end":19},"name":"cpu_shares","qualname":"::models::SystemInfo::cpu_shares","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if CPU Shares limiting is supported by the host. \n","sig":null,"attributes":[{"value":"/ Indicates if CPU Shares limiting is supported by the host. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":177971,"byte_end":178034,"line_start":4796,"line_end":4796,"column_start":5,"column_end":68}},{"value":"serde(rename = \"CPUShares\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178039,"byte_end":178069,"line_start":4797,"line_end":4797,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178074,"byte_end":178121,"line_start":4798,"line_end":4798,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12415},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178414,"byte_end":178421,"line_start":4804,"line_end":4804,"column_start":9,"column_end":16},"name":"cpu_set","qualname":"::models::SystemInfo::cpu_set","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if CPUsets (cpuset.cpus, cpuset.mems) are supported by the host.  See [cpuset(7)](https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt) \n","sig":null,"attributes":[{"value":"/ Indicates if CPUsets (cpuset.cpus, cpuset.mems) are supported by the host.  See [cpuset(7)](https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178161,"byte_end":178321,"line_start":4801,"line_end":4801,"column_start":5,"column_end":165}},{"value":"serde(rename = \"CPUSet\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178326,"byte_end":178353,"line_start":4802,"line_end":4802,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178358,"byte_end":178405,"line_start":4803,"line_end":4803,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12416},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178601,"byte_end":178611,"line_start":4809,"line_end":4809,"column_start":9,"column_end":19},"name":"pids_limit","qualname":"::models::SystemInfo::pids_limit","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if the host kernel has PID limit support enabled.\n","sig":null,"attributes":[{"value":"/ Indicates if the host kernel has PID limit support enabled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178442,"byte_end":178505,"line_start":4806,"line_end":4806,"column_start":5,"column_end":68}},{"value":"serde(rename = \"PidsLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178510,"byte_end":178540,"line_start":4807,"line_end":4807,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178545,"byte_end":178592,"line_start":4808,"line_end":4808,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12417},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178794,"byte_end":178810,"line_start":4814,"line_end":4814,"column_start":9,"column_end":25},"name":"oom_kill_disable","qualname":"::models::SystemInfo::oom_kill_disable","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if OOM killer disable is supported on the host.\n","sig":null,"attributes":[{"value":"/ Indicates if OOM killer disable is supported on the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178632,"byte_end":178693,"line_start":4811,"line_end":4811,"column_start":5,"column_end":66}},{"value":"serde(rename = \"OomKillDisable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178698,"byte_end":178733,"line_start":4812,"line_end":4812,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178738,"byte_end":178785,"line_start":4813,"line_end":4813,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12418},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178973,"byte_end":178988,"line_start":4819,"line_end":4819,"column_start":9,"column_end":24},"name":"ipv4_forwarding","qualname":"::models::SystemInfo::ipv4_forwarding","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates IPv4 forwarding is enabled.\n","sig":null,"attributes":[{"value":"/ Indicates IPv4 forwarding is enabled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178831,"byte_end":178872,"line_start":4816,"line_end":4816,"column_start":5,"column_end":46}},{"value":"serde(rename = \"IPv4Forwarding\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178877,"byte_end":178912,"line_start":4817,"line_end":4817,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":178917,"byte_end":178964,"line_start":4818,"line_end":4818,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12419},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179180,"byte_end":179198,"line_start":4824,"line_end":4824,"column_start":9,"column_end":27},"name":"bridge_nf_iptables","qualname":"::models::SystemInfo::bridge_nf_iptables","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if `bridge-nf-call-iptables` is available on the host.\n","sig":null,"attributes":[{"value":"/ Indicates if `bridge-nf-call-iptables` is available on the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179009,"byte_end":179077,"line_start":4821,"line_end":4821,"column_start":5,"column_end":73}},{"value":"serde(rename = \"BridgeNfIptables\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179082,"byte_end":179119,"line_start":4822,"line_end":4822,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179124,"byte_end":179171,"line_start":4823,"line_end":4823,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12420},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179392,"byte_end":179411,"line_start":4829,"line_end":4829,"column_start":9,"column_end":28},"name":"bridge_nf_ip6tables","qualname":"::models::SystemInfo::bridge_nf_ip6tables","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if `bridge-nf-call-ip6tables` is available on the host.\n","sig":null,"attributes":[{"value":"/ Indicates if `bridge-nf-call-ip6tables` is available on the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179219,"byte_end":179288,"line_start":4826,"line_end":4826,"column_start":5,"column_end":74}},{"value":"serde(rename = \"BridgeNfIp6tables\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179293,"byte_end":179331,"line_start":4827,"line_end":4827,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179336,"byte_end":179383,"line_start":4828,"line_end":4828,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12421},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179613,"byte_end":179618,"line_start":4834,"line_end":4834,"column_start":9,"column_end":14},"name":"debug","qualname":"::models::SystemInfo::debug","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if the daemon is running in debug-mode / with debug-level logging enabled. \n","sig":null,"attributes":[{"value":"/ Indicates if the daemon is running in debug-mode / with debug-level logging enabled. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179432,"byte_end":179521,"line_start":4831,"line_end":4831,"column_start":5,"column_end":94}},{"value":"serde(rename = \"Debug\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179526,"byte_end":179552,"line_start":4832,"line_end":4832,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179557,"byte_end":179604,"line_start":4833,"line_end":4833,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12422},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179861,"byte_end":179865,"line_start":4839,"line_end":4839,"column_start":9,"column_end":13},"name":"n_fd","qualname":"::models::SystemInfo::n_fd","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The total number of file Descriptors in use by the daemon process.  This information is only returned if debug-mode is enabled. \n","sig":null,"attributes":[{"value":"/ The total number of file Descriptors in use by the daemon process.  This information is only returned if debug-mode is enabled. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179639,"byte_end":179771,"line_start":4836,"line_end":4836,"column_start":5,"column_end":137}},{"value":"serde(rename = \"NFd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179776,"byte_end":179800,"line_start":4837,"line_end":4837,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179805,"byte_end":179852,"line_start":4838,"line_end":4838,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12423},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180096,"byte_end":180108,"line_start":4844,"line_end":4844,"column_start":9,"column_end":21},"name":"n_goroutines","qualname":"::models::SystemInfo::n_goroutines","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The  number of goroutines that currently exist.  This information is only returned if debug-mode is enabled. \n","sig":null,"attributes":[{"value":"/ The  number of goroutines that currently exist.  This information is only returned if debug-mode is enabled. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":179885,"byte_end":179998,"line_start":4841,"line_end":4841,"column_start":5,"column_end":118}},{"value":"serde(rename = \"NGoroutines\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180003,"byte_end":180035,"line_start":4842,"line_end":4842,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180040,"byte_end":180087,"line_start":4843,"line_end":4843,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12424},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180327,"byte_end":180338,"line_start":4849,"line_end":4849,"column_start":9,"column_end":20},"name":"system_time","qualname":"::models::SystemInfo::system_time","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Current system-time in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Current system-time in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180128,"byte_end":180230,"line_start":4846,"line_end":4846,"column_start":5,"column_end":107}},{"value":"serde(rename = \"SystemTime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180235,"byte_end":180266,"line_start":4847,"line_end":4847,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180271,"byte_end":180318,"line_start":4848,"line_end":4848,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12425},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180524,"byte_end":180538,"line_start":4854,"line_end":4854,"column_start":9,"column_end":23},"name":"logging_driver","qualname":"::models::SystemInfo::logging_driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The logging driver to use as a default for new containers. \n","sig":null,"attributes":[{"value":"/ The logging driver to use as a default for new containers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180361,"byte_end":180424,"line_start":4851,"line_end":4851,"column_start":5,"column_end":68}},{"value":"serde(rename = \"LoggingDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180429,"byte_end":180463,"line_start":4852,"line_end":4852,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180468,"byte_end":180515,"line_start":4853,"line_end":4853,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12426},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180704,"byte_end":180717,"line_start":4859,"line_end":4859,"column_start":9,"column_end":22},"name":"cgroup_driver","qualname":"::models::SystemInfo::cgroup_driver","value":"std::option::Option<models::SystemInfoCgroupDriverEnum>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The driver to use for managing cgroups. \n","sig":null,"attributes":[{"value":"/ The driver to use for managing cgroups. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180561,"byte_end":180605,"line_start":4856,"line_end":4856,"column_start":5,"column_end":49}},{"value":"serde(rename = \"CgroupDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180610,"byte_end":180643,"line_start":4857,"line_end":4857,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180648,"byte_end":180695,"line_start":4858,"line_end":4858,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12427},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180903,"byte_end":180920,"line_start":4864,"line_end":4864,"column_start":9,"column_end":26},"name":"n_events_listener","qualname":"::models::SystemInfo::n_events_listener","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Number of event listeners subscribed.\n","sig":null,"attributes":[{"value":"/ Number of event listeners subscribed.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180760,"byte_end":180801,"line_start":4861,"line_end":4861,"column_start":5,"column_end":46}},{"value":"serde(rename = \"NEventsListener\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180806,"byte_end":180842,"line_start":4862,"line_end":4862,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180847,"byte_end":180894,"line_start":4863,"line_end":4863,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12428},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181358,"byte_end":181372,"line_start":4869,"line_end":4869,"column_start":9,"column_end":23},"name":"kernel_version","qualname":"::models::SystemInfo::kernel_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Kernel version of the host.  On Linux, this information obtained from `uname`. On Windows this information is queried from the <kbd>HKEY_LOCAL_MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\</kbd> registry value, for example _\\\"10.0 14393 (14393.1198.amd64fre.rs1_release_sec.170427-1353)\\\"_. \n","sig":null,"attributes":[{"value":"/ Kernel version of the host.  On Linux, this information obtained from `uname`. On Windows this information is queried from the <kbd>HKEY_LOCAL_MACHINE\\\\\\\\SOFTWARE\\\\\\\\Microsoft\\\\\\\\Windows NT\\\\\\\\CurrentVersion\\\\\\\\</kbd> registry value, for example _\\\"10.0 14393 (14393.1198.amd64fre.rs1_release_sec.170427-1353)\\\"_. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":180940,"byte_end":181258,"line_start":4866,"line_end":4866,"column_start":5,"column_end":323}},{"value":"serde(rename = \"KernelVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181263,"byte_end":181297,"line_start":4867,"line_end":4867,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181302,"byte_end":181349,"line_start":4868,"line_end":4868,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12429},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181612,"byte_end":181628,"line_start":4874,"line_end":4874,"column_start":9,"column_end":25},"name":"operating_system","qualname":"::models::SystemInfo::operating_system","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Name of the host's operating system, for example: \\\"Ubuntu 16.04.2 LTS\\\" or \\\"Windows Server 2016 Datacenter\\\" \n","sig":null,"attributes":[{"value":"/ Name of the host's operating system, for example: \\\"Ubuntu 16.04.2 LTS\\\" or \\\"Windows Server 2016 Datacenter\\\" ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181395,"byte_end":181510,"line_start":4871,"line_end":4871,"column_start":5,"column_end":120}},{"value":"serde(rename = \"OperatingSystem\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181515,"byte_end":181551,"line_start":4872,"line_end":4872,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181556,"byte_end":181603,"line_start":4873,"line_end":4873,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12430},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182018,"byte_end":182025,"line_start":4879,"line_end":4879,"column_start":9,"column_end":16},"name":"os_type","qualname":"::models::SystemInfo::os_type","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Generic type of the operating system of the host, as returned by the Go runtime (`GOOS`).  Currently returned values are \\\"linux\\\" and \\\"windows\\\". A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment). \n","sig":null,"attributes":[{"value":"/ Generic type of the operating system of the host, as returned by the Go runtime (`GOOS`).  Currently returned values are \\\"linux\\\" and \\\"windows\\\". A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181651,"byte_end":181925,"line_start":4876,"line_end":4876,"column_start":5,"column_end":279}},{"value":"serde(rename = \"OSType\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181930,"byte_end":181957,"line_start":4877,"line_end":4877,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":181962,"byte_end":182009,"line_start":4878,"line_end":4878,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12431},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182351,"byte_end":182363,"line_start":4884,"line_end":4884,"column_start":9,"column_end":21},"name":"architecture","qualname":"::models::SystemInfo::architecture","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Hardware architecture of the host, as returned by the Go runtime (`GOARCH`).  A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment). \n","sig":null,"attributes":[{"value":"/ Hardware architecture of the host, as returned by the Go runtime (`GOARCH`).  A full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182048,"byte_end":182252,"line_start":4881,"line_end":4881,"column_start":5,"column_end":209}},{"value":"serde(rename = \"Architecture\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182257,"byte_end":182290,"line_start":4882,"line_end":4882,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182295,"byte_end":182342,"line_start":4883,"line_end":4883,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12432},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182718,"byte_end":182722,"line_start":4889,"line_end":4889,"column_start":9,"column_end":13},"name":"ncpu","qualname":"::models::SystemInfo::ncpu","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The number of logical CPUs usable by the daemon.  The number of available CPUs is checked by querying the operating system when the daemon starts. Changes to operating system CPU allocation after the daemon is started are not reflected. \n","sig":null,"attributes":[{"value":"/ The number of logical CPUs usable by the daemon.  The number of available CPUs is checked by querying the operating system when the daemon starts. Changes to operating system CPU allocation after the daemon is started are not reflected. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182386,"byte_end":182627,"line_start":4886,"line_end":4886,"column_start":5,"column_end":246}},{"value":"serde(rename = \"NCPU\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182632,"byte_end":182657,"line_start":4887,"line_end":4887,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182662,"byte_end":182709,"line_start":4888,"line_end":4888,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12433},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182915,"byte_end":182924,"line_start":4894,"line_end":4894,"column_start":9,"column_end":18},"name":"mem_total","qualname":"::models::SystemInfo::mem_total","value":"std::option::Option<i64>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Total amount of physical memory available on the host, in kilobytes (kB). \n","sig":null,"attributes":[{"value":"/ Total amount of physical memory available on the host, in kilobytes (kB). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182742,"byte_end":182820,"line_start":4891,"line_end":4891,"column_start":5,"column_end":83}},{"value":"serde(rename = \"MemTotal\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182825,"byte_end":182854,"line_start":4892,"line_end":4892,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182859,"byte_end":182906,"line_start":4893,"line_end":4893,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12434},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183192,"byte_end":183212,"line_start":4899,"line_end":4899,"column_start":9,"column_end":29},"name":"index_server_address","qualname":"::models::SystemInfo::index_server_address","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Address / URL of the index server that is used for image search, and as a default for user authentication for Docker Hub and Docker Cloud. \n","sig":null,"attributes":[{"value":"/ Address / URL of the index server that is used for image search, and as a default for user authentication for Docker Hub and Docker Cloud. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":182944,"byte_end":183087,"line_start":4896,"line_end":4896,"column_start":5,"column_end":148}},{"value":"serde(rename = \"IndexServerAddress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183092,"byte_end":183131,"line_start":4897,"line_end":4897,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183136,"byte_end":183183,"line_start":4898,"line_end":4898,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12435},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183331,"byte_end":183346,"line_start":4903,"line_end":4903,"column_start":9,"column_end":24},"name":"registry_config","qualname":"::models::SystemInfo::registry_config","value":"std::option::Option<models::RegistryServiceConfig>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RegistryConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183235,"byte_end":183270,"line_start":4901,"line_end":4901,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183275,"byte_end":183322,"line_start":4902,"line_end":4902,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12436},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183482,"byte_end":183499,"line_start":4907,"line_end":4907,"column_start":9,"column_end":26},"name":"generic_resources","qualname":"::models::SystemInfo::generic_resources","value":"std::option::Option<models::GenericResourcesInner>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"GenericResources\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183384,"byte_end":183421,"line_start":4905,"line_end":4905,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183426,"byte_end":183473,"line_start":4906,"line_end":4906,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12437},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184001,"byte_end":184011,"line_start":4912,"line_end":4912,"column_start":9,"column_end":19},"name":"http_proxy","qualname":"::models::SystemInfo::http_proxy","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" HTTP-proxy configured for the daemon. This value is obtained from the [`HTTP_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration. \n","sig":null,"attributes":[{"value":"/ HTTP-proxy configured for the daemon. This value is obtained from the [`HTTP_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183532,"byte_end":183905,"line_start":4909,"line_end":4909,"column_start":5,"column_end":378}},{"value":"serde(rename = \"HttpProxy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183910,"byte_end":183940,"line_start":4910,"line_end":4910,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":183945,"byte_end":183992,"line_start":4911,"line_end":4911,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12438},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184506,"byte_end":184517,"line_start":4917,"line_end":4917,"column_start":9,"column_end":20},"name":"https_proxy","qualname":"::models::SystemInfo::https_proxy","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" HTTPS-proxy configured for the daemon. This value is obtained from the [`HTTPS_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration. \n","sig":null,"attributes":[{"value":"/ HTTPS-proxy configured for the daemon. This value is obtained from the [`HTTPS_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable. Credentials ([user info component](https://tools.ietf.org/html/rfc3986#section-3.2.1)) in the proxy URL are masked in the API response.  Containers do not automatically inherit this configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184034,"byte_end":184409,"line_start":4914,"line_end":4914,"column_start":5,"column_end":380}},{"value":"serde(rename = \"HttpsProxy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184414,"byte_end":184445,"line_start":4915,"line_end":4915,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184450,"byte_end":184497,"line_start":4916,"line_end":4916,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12439},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184908,"byte_end":184916,"line_start":4922,"line_end":4922,"column_start":9,"column_end":17},"name":"no_proxy","qualname":"::models::SystemInfo::no_proxy","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Comma-separated list of domain extensions for which no proxy should be used. This value is obtained from the [`NO_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable.  Containers do not automatically inherit this configuration. \n","sig":null,"attributes":[{"value":"/ Comma-separated list of domain extensions for which no proxy should be used. This value is obtained from the [`NO_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable.  Containers do not automatically inherit this configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184540,"byte_end":184814,"line_start":4919,"line_end":4919,"column_start":5,"column_end":279}},{"value":"serde(rename = \"NoProxy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184819,"byte_end":184847,"line_start":4920,"line_end":4920,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184852,"byte_end":184899,"line_start":4921,"line_end":4921,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12440},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185055,"byte_end":185059,"line_start":4927,"line_end":4927,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SystemInfo::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Hostname of the host.\n","sig":null,"attributes":[{"value":"/ Hostname of the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184939,"byte_end":184964,"line_start":4924,"line_end":4924,"column_start":5,"column_end":30}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184969,"byte_end":184994,"line_start":4925,"line_end":4925,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":184999,"byte_end":185046,"line_start":4926,"line_end":4926,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12441},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185570,"byte_end":185576,"line_start":4932,"line_end":4932,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::SystemInfo::labels","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" User-defined labels (key/value metadata) as set on the daemon.  <p><br /></p>  > **Note**: When part of a Swarm, nodes can both have _daemon_ labels, > set through the daemon configuration, and _node_ labels, set from a > manager node in the Swarm. Node labels are not included in this > field. Node labels can be retrieved using the `/nodes/(id)` endpoint > on a manager node in the Swarm. \n","sig":null,"attributes":[{"value":"/ User-defined labels (key/value metadata) as set on the daemon.  <p><br /></p>  > **Note**: When part of a Swarm, nodes can both have _daemon_ labels, > set through the daemon configuration, and _node_ labels, set from a > manager node in the Swarm. Node labels are not included in this > field. Node labels can be retrieved using the `/nodes/(id)` endpoint > on a manager node in the Swarm. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185082,"byte_end":185477,"line_start":4929,"line_end":4929,"column_start":5,"column_end":400}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185482,"byte_end":185509,"line_start":4930,"line_end":4930,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185514,"byte_end":185561,"line_start":4931,"line_end":4931,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12442},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185774,"byte_end":185792,"line_start":4937,"line_end":4937,"column_start":9,"column_end":27},"name":"experimental_build","qualname":"::models::SystemInfo::experimental_build","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if experimental features are enabled on the daemon. \n","sig":null,"attributes":[{"value":"/ Indicates if experimental features are enabled on the daemon. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185604,"byte_end":185670,"line_start":4934,"line_end":4934,"column_start":5,"column_end":71}},{"value":"serde(rename = \"ExperimentalBuild\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185675,"byte_end":185713,"line_start":4935,"line_end":4935,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185718,"byte_end":185765,"line_start":4936,"line_end":4936,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12443},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186118,"byte_end":186132,"line_start":4942,"line_end":4942,"column_start":9,"column_end":23},"name":"server_version","qualname":"::models::SystemInfo::server_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Version string of the daemon.  > **Note**: the [standalone Swarm API](https://docs.docker.com/swarm/swarm-api/) > returns the Swarm version instead of the daemon  version, for example > `swarm/1.2.8`. \n","sig":null,"attributes":[{"value":"/ Version string of the daemon.  > **Note**: the [standalone Swarm API](https://docs.docker.com/swarm/swarm-api/) > returns the Swarm version instead of the daemon  version, for example > `swarm/1.2.8`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":185813,"byte_end":186018,"line_start":4939,"line_end":4939,"column_start":5,"column_end":210}},{"value":"serde(rename = \"ServerVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186023,"byte_end":186057,"line_start":4940,"line_end":4940,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186062,"byte_end":186109,"line_start":4941,"line_end":4941,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12444},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186684,"byte_end":186697,"line_start":4947,"line_end":4947,"column_start":9,"column_end":22},"name":"cluster_store","qualname":"::models::SystemInfo::cluster_store","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" URL of the distributed storage backend.   The storage backend is used for multihost networking (to store network and endpoint information) and by the node discovery mechanism.  <p><br /></p>  > **Note**: This field is only propagated when using standalone Swarm > mode, and overlay networking using an external k/v store. Overlay > networks with Swarm mode enabled use the built-in raft store, and > this field will be empty. \n","sig":null,"attributes":[{"value":"/ URL of the distributed storage backend.   The storage backend is used for multihost networking (to store network and endpoint information) and by the node discovery mechanism.  <p><br /></p>  > **Note**: This field is only propagated when using standalone Swarm > mode, and overlay networking using an external k/v store. Overlay > networks with Swarm mode enabled use the built-in raft store, and > this field will be empty. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186155,"byte_end":186585,"line_start":4944,"line_end":4944,"column_start":5,"column_end":435}},{"value":"serde(rename = \"ClusterStore\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186590,"byte_end":186623,"line_start":4945,"line_end":4945,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186628,"byte_end":186675,"line_start":4946,"line_end":4946,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12445},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187255,"byte_end":187272,"line_start":4952,"line_end":4952,"column_start":9,"column_end":26},"name":"cluster_advertise","qualname":"::models::SystemInfo::cluster_advertise","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" The network endpoint that the Engine advertises for the purpose of node discovery. ClusterAdvertise is a `host:port` combination on which the daemon is reachable by other hosts.  <p><br /></p>  > **Note**: This field is only propagated when using standalone Swarm > mode, and overlay networking using an external k/v store. Overlay > networks with Swarm mode enabled use the built-in raft store, and > this field will be empty. \n","sig":null,"attributes":[{"value":"/ The network endpoint that the Engine advertises for the purpose of node discovery. ClusterAdvertise is a `host:port` combination on which the daemon is reachable by other hosts.  <p><br /></p>  > **Note**: This field is only propagated when using standalone Swarm > mode, and overlay networking using an external k/v store. Overlay > networks with Swarm mode enabled use the built-in raft store, and > this field will be empty. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":186720,"byte_end":187152,"line_start":4949,"line_end":4949,"column_start":5,"column_end":437}},{"value":"serde(rename = \"ClusterAdvertise\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187157,"byte_end":187194,"line_start":4950,"line_end":4950,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187199,"byte_end":187246,"line_start":4951,"line_end":4951,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12446},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187855,"byte_end":187863,"line_start":4957,"line_end":4957,"column_start":9,"column_end":17},"name":"runtimes","qualname":"::models::SystemInfo::runtimes","value":"std::option::Option<std::collections::HashMap<std::string::String, models::Runtime>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" List of [OCI compliant](https://github.com/opencontainers/runtime-spec) runtimes configured on the daemon. Keys hold the \\\"name\\\" used to reference the runtime.  The Docker daemon relies on an OCI compliant runtime (invoked via the `containerd` daemon) as its interface to the Linux kernel namespaces, cgroups, and SELinux.  The default runtime is `runc`, and automatically configured. Additional runtimes can be configured by the user and will be listed here. \n","sig":null,"attributes":[{"value":"/ List of [OCI compliant](https://github.com/opencontainers/runtime-spec) runtimes configured on the daemon. Keys hold the \\\"name\\\" used to reference the runtime.  The Docker daemon relies on an OCI compliant runtime (invoked via the `containerd` daemon) as its interface to the Linux kernel namespaces, cgroups, and SELinux.  The default runtime is `runc`, and automatically configured. Additional runtimes can be configured by the user and will be listed here. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187295,"byte_end":187760,"line_start":4954,"line_end":4954,"column_start":5,"column_end":470}},{"value":"serde(rename = \"Runtimes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187765,"byte_end":187794,"line_start":4955,"line_end":4955,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187799,"byte_end":187846,"line_start":4956,"line_end":4956,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12447},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188141,"byte_end":188156,"line_start":4962,"line_end":4962,"column_start":9,"column_end":24},"name":"default_runtime","qualname":"::models::SystemInfo::default_runtime","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Name of the default OCI runtime that is used when starting containers.  The default can be overridden per-container at create time. \n","sig":null,"attributes":[{"value":"/ Name of the default OCI runtime that is used when starting containers.  The default can be overridden per-container at create time. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":187904,"byte_end":188040,"line_start":4959,"line_end":4959,"column_start":5,"column_end":141}},{"value":"serde(rename = \"DefaultRuntime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188045,"byte_end":188080,"line_start":4960,"line_end":4960,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188085,"byte_end":188132,"line_start":4961,"line_end":4961,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12448},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188266,"byte_end":188271,"line_start":4966,"line_end":4966,"column_start":9,"column_end":14},"name":"swarm","qualname":"::models::SystemInfo::swarm","value":"std::option::Option<models::SwarmInfo>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Swarm\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188179,"byte_end":188205,"line_start":4964,"line_end":4964,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188210,"byte_end":188257,"line_start":4965,"line_end":4965,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12449},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188570,"byte_end":188590,"line_start":4971,"line_end":4971,"column_start":9,"column_end":29},"name":"live_restore_enabled","qualname":"::models::SystemInfo::live_restore_enabled","value":"std::option::Option<bool>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Indicates if live restore is enabled.  If enabled, containers are kept running when the daemon is shutdown or upon daemon start if running containers are detected. \n","sig":null,"attributes":[{"value":"/ Indicates if live restore is enabled.  If enabled, containers are kept running when the daemon is shutdown or upon daemon start if running containers are detected. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188297,"byte_end":188465,"line_start":4968,"line_end":4968,"column_start":5,"column_end":173}},{"value":"serde(rename = \"LiveRestoreEnabled\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188470,"byte_end":188509,"line_start":4969,"line_end":4969,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188514,"byte_end":188561,"line_start":4970,"line_end":4970,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12450},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189028,"byte_end":189037,"line_start":4976,"line_end":4976,"column_start":9,"column_end":18},"name":"isolation","qualname":"::models::SystemInfo::isolation","value":"std::option::Option<models::SystemInfoIsolationEnum>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Represents the isolation technology to use as a default for containers. The supported values are platform-specific.  If no isolation value is specified on daemon start, on Windows client, the default is `hyperv`, and on Windows server, the default is `process`.  This option is currently not used on other platforms. \n","sig":null,"attributes":[{"value":"/ Represents the isolation technology to use as a default for containers. The supported values are platform-specific.  If no isolation value is specified on daemon start, on Windows client, the default is `hyperv`, and on Windows server, the default is `process`.  This option is currently not used on other platforms. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188611,"byte_end":188932,"line_start":4973,"line_end":4973,"column_start":5,"column_end":326}},{"value":"serde(rename = \"Isolation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188937,"byte_end":188967,"line_start":4974,"line_end":4974,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":188972,"byte_end":189019,"line_start":4975,"line_end":4975,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12451},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189338,"byte_end":189349,"line_start":4981,"line_end":4981,"column_start":9,"column_end":20},"name":"init_binary","qualname":"::models::SystemInfo::init_binary","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Name and, optional, path of the `docker-init` binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result. \n","sig":null,"attributes":[{"value":"/ Name and, optional, path of the `docker-init` binary.  If the path is omitted, the daemon searches the host's `$PATH` for the binary and uses the first result. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189077,"byte_end":189241,"line_start":4978,"line_end":4978,"column_start":5,"column_end":169}},{"value":"serde(rename = \"InitBinary\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189246,"byte_end":189277,"line_start":4979,"line_end":4979,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189282,"byte_end":189329,"line_start":4980,"line_end":4980,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12452},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189470,"byte_end":189487,"line_start":4985,"line_end":4985,"column_start":9,"column_end":26},"name":"containerd_commit","qualname":"::models::SystemInfo::containerd_commit","value":"std::option::Option<models::Commit>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerdCommit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189372,"byte_end":189409,"line_start":4983,"line_end":4983,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189414,"byte_end":189461,"line_start":4984,"line_end":4984,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12453},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189602,"byte_end":189613,"line_start":4989,"line_end":4989,"column_start":9,"column_end":20},"name":"runc_commit","qualname":"::models::SystemInfo::runc_commit","value":"std::option::Option<models::Commit>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RuncCommit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189510,"byte_end":189541,"line_start":4987,"line_end":4987,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189546,"byte_end":189593,"line_start":4988,"line_end":4988,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12454},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189728,"byte_end":189739,"line_start":4993,"line_end":4993,"column_start":9,"column_end":20},"name":"init_commit","qualname":"::models::SystemInfo::init_commit","value":"std::option::Option<models::Commit>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"InitCommit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189636,"byte_end":189667,"line_start":4991,"line_end":4991,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189672,"byte_end":189719,"line_start":4992,"line_end":4992,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12455},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190141,"byte_end":190157,"line_start":4998,"line_end":4998,"column_start":9,"column_end":25},"name":"security_options","qualname":"::models::SystemInfo::security_options","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" List of security features that are enabled on the daemon, such as apparmor, seccomp, SELinux, user-namespaces (userns), and rootless.  Additional configuration options for each security feature may be present, and are included as a comma-separated list of key/value pairs. \n","sig":null,"attributes":[{"value":"/ List of security features that are enabled on the daemon, such as apparmor, seccomp, SELinux, user-namespaces (userns), and rootless.  Additional configuration options for each security feature may be present, and are included as a comma-separated list of key/value pairs. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":189762,"byte_end":190039,"line_start":4995,"line_end":4995,"column_start":5,"column_end":282}},{"value":"serde(rename = \"SecurityOptions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190044,"byte_end":190080,"line_start":4996,"line_end":4996,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190085,"byte_end":190132,"line_start":4997,"line_end":4997,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12456},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190469,"byte_end":190484,"line_start":5003,"line_end":5003,"column_start":9,"column_end":24},"name":"product_license","qualname":"::models::SystemInfo::product_license","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" Reports a summary of the product license on the daemon.  If a commercial license has been applied to the daemon, information such as number of nodes, and expiration are included. \n","sig":null,"attributes":[{"value":"/ Reports a summary of the product license on the daemon.  If a commercial license has been applied to the daemon, information such as number of nodes, and expiration are included. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190185,"byte_end":190368,"line_start":5000,"line_end":5000,"column_start":5,"column_end":188}},{"value":"serde(rename = \"ProductLicense\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190373,"byte_end":190408,"line_start":5001,"line_end":5001,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190413,"byte_end":190460,"line_start":5002,"line_end":5002,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12457},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190792,"byte_end":190800,"line_start":5008,"line_end":5008,"column_start":9,"column_end":17},"name":"warnings","qualname":"::models::SystemInfo::warnings","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":12397},"children":[],"decl_id":null,"docs":" List of warnings / informational messages about missing features, or issues related to the daemon configuration.  These messages can be printed by the client as information to the user. \n","sig":null,"attributes":[{"value":"/ List of warnings / informational messages about missing features, or issues related to the daemon configuration.  These messages can be printed by the client as information to the user. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190507,"byte_end":190697,"line_start":5005,"line_end":5005,"column_start":5,"column_end":195}},{"value":"serde(rename = \"Warnings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190702,"byte_end":190731,"line_start":5006,"line_end":5006,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190736,"byte_end":190783,"line_start":5007,"line_end":5007,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12634},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191013,"byte_end":191018,"line_start":5016,"line_end":5016,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::SystemInfoCgroupDriverEnum::EMPTY","value":"SystemInfoCgroupDriverEnum::EMPTY","parent":{"krate":0,"index":12633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190987,"byte_end":191008,"line_start":5015,"line_end":5015,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12636},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191058,"byte_end":191066,"line_start":5018,"line_end":5018,"column_start":5,"column_end":13},"name":"CGROUPFS","qualname":"::models::SystemInfoCgroupDriverEnum::CGROUPFS","value":"SystemInfoCgroupDriverEnum::CGROUPFS","parent":{"krate":0,"index":12633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"cgroupfs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191024,"byte_end":191053,"line_start":5017,"line_end":5017,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12638},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191105,"byte_end":191112,"line_start":5020,"line_end":5020,"column_start":5,"column_end":12},"name":"SYSTEMD","qualname":"::models::SystemInfoCgroupDriverEnum::SYSTEMD","value":"SystemInfoCgroupDriverEnum::SYSTEMD","parent":{"krate":0,"index":12633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"systemd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191072,"byte_end":191100,"line_start":5019,"line_end":5019,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12640},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191148,"byte_end":191152,"line_start":5022,"line_end":5022,"column_start":5,"column_end":9},"name":"NONE","qualname":"::models::SystemInfoCgroupDriverEnum::NONE","value":"SystemInfoCgroupDriverEnum::NONE","parent":{"krate":0,"index":12633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191118,"byte_end":191143,"line_start":5021,"line_end":5021,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":12633},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190953,"byte_end":190979,"line_start":5014,"line_end":5014,"column_start":10,"column_end":36},"name":"SystemInfoCgroupDriverEnum","qualname":"::models::SystemInfoCgroupDriverEnum","value":"pub enum SystemInfoCgroupDriverEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"cgroupfs\")]\n    CGROUPFS,\n\n    #[serde(rename = \"systemd\")]\n    SYSTEMD,\n\n    #[serde(rename = \"none\")]\n    NONE,\n}","parent":null,"children":[{"krate":0,"index":12634},{"krate":0,"index":12636},{"krate":0,"index":12638},{"krate":0,"index":12640}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":190827,"byte_end":190857,"line_start":5012,"line_end":5012,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12707},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192666,"byte_end":192671,"line_start":5065,"line_end":5065,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::SystemInfoIsolationEnum::EMPTY","value":"SystemInfoIsolationEnum::EMPTY","parent":{"krate":0,"index":12706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192640,"byte_end":192661,"line_start":5064,"line_end":5064,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12709},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192710,"byte_end":192717,"line_start":5067,"line_end":5067,"column_start":5,"column_end":12},"name":"DEFAULT","qualname":"::models::SystemInfoIsolationEnum::DEFAULT","value":"SystemInfoIsolationEnum::DEFAULT","parent":{"krate":0,"index":12706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"default\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192677,"byte_end":192705,"line_start":5066,"line_end":5066,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12711},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192755,"byte_end":192761,"line_start":5069,"line_end":5069,"column_start":5,"column_end":11},"name":"HYPERV","qualname":"::models::SystemInfoIsolationEnum::HYPERV","value":"SystemInfoIsolationEnum::HYPERV","parent":{"krate":0,"index":12706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"hyperv\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192723,"byte_end":192750,"line_start":5068,"line_end":5068,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12713},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192800,"byte_end":192807,"line_start":5071,"line_end":5071,"column_start":5,"column_end":12},"name":"PROCESS","qualname":"::models::SystemInfoIsolationEnum::PROCESS","value":"SystemInfoIsolationEnum::PROCESS","parent":{"krate":0,"index":12706},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"process\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192767,"byte_end":192795,"line_start":5070,"line_end":5070,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":12706},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192609,"byte_end":192632,"line_start":5063,"line_end":5063,"column_start":10,"column_end":33},"name":"SystemInfoIsolationEnum","qualname":"::models::SystemInfoIsolationEnum","value":"pub enum SystemInfoIsolationEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"default\")]\n    DEFAULT,\n\n    #[serde(rename = \"hyperv\")]\n    HYPERV,\n\n    #[serde(rename = \"process\")]\n    PROCESS,\n}","parent":null,"children":[{"krate":0,"index":12707},{"krate":0,"index":12709},{"krate":0,"index":12711},{"krate":0,"index":12713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192483,"byte_end":192513,"line_start":5061,"line_end":5061,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":12779},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194224,"byte_end":194237,"line_start":5112,"line_end":5112,"column_start":12,"column_end":25},"name":"SystemVersion","qualname":"::models::SystemVersion","value":"SystemVersion { platform, components, version, api_version, min_api_version, git_commit, go_version, os, arch, kernel_version, experimental, build_time }","parent":null,"children":[{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12782},{"krate":0,"index":12783},{"krate":0,"index":12784},{"krate":0,"index":12785},{"krate":0,"index":12786},{"krate":0,"index":12787},{"krate":0,"index":12788},{"krate":0,"index":12789},{"krate":0,"index":12790},{"krate":0,"index":12791}],"decl_id":null,"docs":" Response of Engine API: GET \\\"/version\\\" \n","sig":null,"attributes":[{"value":"/ Response of Engine API: GET \\\"/version\\\" ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194099,"byte_end":194144,"line_start":5110,"line_end":5110,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":12780},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194334,"byte_end":194342,"line_start":5115,"line_end":5115,"column_start":9,"column_end":17},"name":"platform","qualname":"::models::SystemVersion::platform","value":"std::option::Option<models::SystemVersionPlatform>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Platform\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194244,"byte_end":194273,"line_start":5113,"line_end":5113,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194278,"byte_end":194325,"line_start":5114,"line_end":5114,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12781},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194517,"byte_end":194527,"line_start":5120,"line_end":5120,"column_start":9,"column_end":19},"name":"components","qualname":"::models::SystemVersion::components","value":"std::option::Option<std::vec::Vec<models::SystemVersionComponents>>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" Information about system components \n","sig":null,"attributes":[{"value":"/ Information about system components ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194380,"byte_end":194420,"line_start":5117,"line_end":5117,"column_start":5,"column_end":45}},{"value":"serde(rename = \"Components\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194425,"byte_end":194456,"line_start":5118,"line_end":5118,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194461,"byte_end":194508,"line_start":5119,"line_end":5119,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12782},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194695,"byte_end":194702,"line_start":5125,"line_end":5125,"column_start":9,"column_end":16},"name":"version","qualname":"::models::SystemVersion::version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The version of the daemon\n","sig":null,"attributes":[{"value":"/ The version of the daemon","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194572,"byte_end":194601,"line_start":5122,"line_end":5122,"column_start":5,"column_end":34}},{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194606,"byte_end":194634,"line_start":5123,"line_end":5123,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194639,"byte_end":194686,"line_start":5124,"line_end":5124,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12783},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194896,"byte_end":194907,"line_start":5130,"line_end":5130,"column_start":9,"column_end":20},"name":"api_version","qualname":"::models::SystemVersion::api_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The default (and highest) API version that is supported by the daemon \n","sig":null,"attributes":[{"value":"/ The default (and highest) API version that is supported by the daemon ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194725,"byte_end":194799,"line_start":5127,"line_end":5127,"column_start":5,"column_end":79}},{"value":"serde(rename = \"ApiVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194804,"byte_end":194835,"line_start":5128,"line_end":5128,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194840,"byte_end":194887,"line_start":5129,"line_end":5129,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12784},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195090,"byte_end":195105,"line_start":5135,"line_end":5135,"column_start":9,"column_end":24},"name":"min_api_version","qualname":"::models::SystemVersion::min_api_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The minimum API version that is supported by the daemon \n","sig":null,"attributes":[{"value":"/ The minimum API version that is supported by the daemon ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194930,"byte_end":194990,"line_start":5132,"line_end":5132,"column_start":5,"column_end":65}},{"value":"serde(rename = \"MinAPIVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":194995,"byte_end":195029,"line_start":5133,"line_end":5133,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195034,"byte_end":195081,"line_start":5134,"line_end":5134,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12785},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195296,"byte_end":195306,"line_start":5140,"line_end":5140,"column_start":9,"column_end":19},"name":"git_commit","qualname":"::models::SystemVersion::git_commit","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The Git commit of the source code that was used to build the daemon \n","sig":null,"attributes":[{"value":"/ The Git commit of the source code that was used to build the daemon ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195128,"byte_end":195200,"line_start":5137,"line_end":5137,"column_start":5,"column_end":77}},{"value":"serde(rename = \"GitCommit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195205,"byte_end":195235,"line_start":5138,"line_end":5138,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195240,"byte_end":195287,"line_start":5139,"line_end":5139,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12786},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195514,"byte_end":195524,"line_start":5145,"line_end":5145,"column_start":9,"column_end":19},"name":"go_version","qualname":"::models::SystemVersion::go_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The version Go used to compile the daemon, and the version of the Go runtime in use. \n","sig":null,"attributes":[{"value":"/ The version Go used to compile the daemon, and the version of the Go runtime in use. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195329,"byte_end":195418,"line_start":5142,"line_end":5142,"column_start":5,"column_end":94}},{"value":"serde(rename = \"GoVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195423,"byte_end":195453,"line_start":5143,"line_end":5143,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195458,"byte_end":195505,"line_start":5144,"line_end":5144,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12787},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195718,"byte_end":195720,"line_start":5150,"line_end":5150,"column_start":9,"column_end":11},"name":"os","qualname":"::models::SystemVersion::os","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The operating system that the daemon is running on (\\\"linux\\\" or \\\"windows\\\") \n","sig":null,"attributes":[{"value":"/ The operating system that the daemon is running on (\\\"linux\\\" or \\\"windows\\\") ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195547,"byte_end":195629,"line_start":5147,"line_end":5147,"column_start":5,"column_end":87}},{"value":"serde(rename = \"Os\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195634,"byte_end":195657,"line_start":5148,"line_end":5148,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195662,"byte_end":195709,"line_start":5149,"line_end":5149,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12788},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195885,"byte_end":195889,"line_start":5155,"line_end":5155,"column_start":9,"column_end":13},"name":"arch","qualname":"::models::SystemVersion::arch","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The architecture that the daemon is running on \n","sig":null,"attributes":[{"value":"/ The architecture that the daemon is running on ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195743,"byte_end":195794,"line_start":5152,"line_end":5152,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Arch\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195799,"byte_end":195824,"line_start":5153,"line_end":5153,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195829,"byte_end":195876,"line_start":5154,"line_end":5154,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12789},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196114,"byte_end":196128,"line_start":5160,"line_end":5160,"column_start":9,"column_end":23},"name":"kernel_version","qualname":"::models::SystemVersion::kernel_version","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The kernel version (`uname -r`) that the daemon is running on.  This field is omitted when empty. \n","sig":null,"attributes":[{"value":"/ The kernel version (`uname -r`) that the daemon is running on.  This field is omitted when empty. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":195912,"byte_end":196014,"line_start":5157,"line_end":5157,"column_start":5,"column_end":107}},{"value":"serde(rename = \"KernelVersion\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196019,"byte_end":196053,"line_start":5158,"line_end":5158,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196058,"byte_end":196105,"line_start":5159,"line_end":5159,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12790},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196368,"byte_end":196380,"line_start":5165,"line_end":5165,"column_start":9,"column_end":21},"name":"experimental","qualname":"::models::SystemVersion::experimental","value":"std::option::Option<bool>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" Indicates if the daemon is started with experimental features enabled.  This field is omitted when empty / false. \n","sig":null,"attributes":[{"value":"/ Indicates if the daemon is started with experimental features enabled.  This field is omitted when empty / false. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196151,"byte_end":196269,"line_start":5162,"line_end":5162,"column_start":5,"column_end":123}},{"value":"serde(rename = \"Experimental\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196274,"byte_end":196307,"line_start":5163,"line_end":5163,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196312,"byte_end":196359,"line_start":5164,"line_end":5164,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12791},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196549,"byte_end":196559,"line_start":5170,"line_end":5170,"column_start":9,"column_end":19},"name":"build_time","qualname":"::models::SystemVersion::build_time","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12779},"children":[],"decl_id":null,"docs":" The date and time that the daemon was compiled. \n","sig":null,"attributes":[{"value":"/ The date and time that the daemon was compiled. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196401,"byte_end":196453,"line_start":5167,"line_end":5167,"column_start":5,"column_end":57}},{"value":"serde(rename = \"BuildTime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196458,"byte_end":196488,"line_start":5168,"line_end":5168,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196493,"byte_end":196540,"line_start":5169,"line_end":5169,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12871},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196660,"byte_end":196683,"line_start":5175,"line_end":5175,"column_start":12,"column_end":35},"name":"SystemVersionComponents","qualname":"::models::SystemVersionComponents","value":"SystemVersionComponents { name, version, details }","parent":null,"children":[{"krate":0,"index":12872},{"krate":0,"index":12873},{"krate":0,"index":12874}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12872},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196755,"byte_end":196759,"line_start":5178,"line_end":5178,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SystemVersionComponents::name","value":"std::string::String","parent":{"krate":0,"index":12871},"children":[],"decl_id":null,"docs":" Name of the component \n","sig":null,"attributes":[{"value":"/ Name of the component ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196690,"byte_end":196716,"line_start":5176,"line_end":5176,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196721,"byte_end":196746,"line_start":5177,"line_end":5177,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":12873},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196845,"byte_end":196852,"line_start":5182,"line_end":5182,"column_start":9,"column_end":16},"name":"version","qualname":"::models::SystemVersionComponents::version","value":"std::string::String","parent":{"krate":0,"index":12871},"children":[],"decl_id":null,"docs":" Version of the component \n","sig":null,"attributes":[{"value":"/ Version of the component ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196774,"byte_end":196803,"line_start":5180,"line_end":5180,"column_start":5,"column_end":34}},{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196808,"byte_end":196836,"line_start":5181,"line_end":5181,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":12874},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197246,"byte_end":197253,"line_start":5187,"line_end":5187,"column_start":9,"column_end":16},"name":"details","qualname":"::models::SystemVersionComponents::details","value":"std::option::Option<std::collections::HashMap<(), ()>>","parent":{"krate":0,"index":12871},"children":[],"decl_id":null,"docs":" Key/value pairs of strings with additional information about the component. These values are intended for informational purposes only, and their content is not defined, and not part of the API specification.  These messages can be printed by the client as information to the user. \n","sig":null,"attributes":[{"value":"/ Key/value pairs of strings with additional information about the component. These values are intended for informational purposes only, and their content is not defined, and not part of the API specification.  These messages can be printed by the client as information to the user. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":196867,"byte_end":197152,"line_start":5184,"line_end":5184,"column_start":5,"column_end":290}},{"value":"serde(rename = \"Details\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197157,"byte_end":197185,"line_start":5185,"line_end":5185,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197190,"byte_end":197237,"line_start":5186,"line_end":5186,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":12936},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197363,"byte_end":197384,"line_start":5192,"line_end":5192,"column_start":12,"column_end":33},"name":"SystemVersionPlatform","qualname":"::models::SystemVersionPlatform","value":"SystemVersionPlatform { name }","parent":null,"children":[{"krate":0,"index":12937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12937},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197425,"byte_end":197429,"line_start":5194,"line_end":5194,"column_start":9,"column_end":13},"name":"name","qualname":"::models::SystemVersionPlatform::name","value":"std::string::String","parent":{"krate":0,"index":12936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197391,"byte_end":197416,"line_start":5193,"line_end":5193,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":12995},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197522,"byte_end":197526,"line_start":5199,"line_end":5199,"column_start":12,"column_end":16},"name":"Task","qualname":"::models::Task","value":"Task { id, version, created_at, updated_at, name, labels, spec, service_id, slot, node_id, assigned_generic_resources, status, desired_state }","parent":null,"children":[{"krate":0,"index":12996},{"krate":0,"index":12997},{"krate":0,"index":12998},{"krate":0,"index":12999},{"krate":0,"index":13000},{"krate":0,"index":13001},{"krate":0,"index":13002},{"krate":0,"index":13003},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13007},{"krate":0,"index":13008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12996},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197645,"byte_end":197647,"line_start":5203,"line_end":5203,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Task::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":" The ID of the task.\n","sig":null,"attributes":[{"value":"/ The ID of the task.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197533,"byte_end":197556,"line_start":5200,"line_end":5200,"column_start":5,"column_end":28}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197561,"byte_end":197584,"line_start":5201,"line_end":5201,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197589,"byte_end":197636,"line_start":5202,"line_end":5202,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12997},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197759,"byte_end":197766,"line_start":5207,"line_end":5207,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Task::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197670,"byte_end":197698,"line_start":5205,"line_end":5205,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197703,"byte_end":197750,"line_start":5206,"line_end":5206,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12998},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197887,"byte_end":197897,"line_start":5211,"line_end":5211,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Task::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197796,"byte_end":197826,"line_start":5209,"line_end":5209,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197831,"byte_end":197878,"line_start":5210,"line_end":5210,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":12999},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198018,"byte_end":198028,"line_start":5215,"line_end":5215,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Task::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197927,"byte_end":197957,"line_start":5213,"line_end":5213,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":197962,"byte_end":198009,"line_start":5214,"line_end":5214,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13000},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198170,"byte_end":198174,"line_start":5220,"line_end":5220,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Task::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":" Name of the task.\n","sig":null,"attributes":[{"value":"/ Name of the task.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198058,"byte_end":198079,"line_start":5217,"line_end":5217,"column_start":5,"column_end":26}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198084,"byte_end":198109,"line_start":5218,"line_end":5218,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198114,"byte_end":198161,"line_start":5219,"line_end":5219,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13001},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198326,"byte_end":198332,"line_start":5225,"line_end":5225,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::Task::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198197,"byte_end":198233,"line_start":5222,"line_end":5222,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198238,"byte_end":198265,"line_start":5223,"line_end":5223,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198270,"byte_end":198317,"line_start":5224,"line_end":5224,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13002},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198458,"byte_end":198462,"line_start":5229,"line_end":5229,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Task::spec","value":"std::option::Option<models::TaskSpec>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198372,"byte_end":198397,"line_start":5227,"line_end":5227,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198402,"byte_end":198449,"line_start":5228,"line_end":5228,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13003},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198630,"byte_end":198640,"line_start":5234,"line_end":5234,"column_start":9,"column_end":19},"name":"service_id","qualname":"::models::Task::service_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":" The ID of the service this task is part of.\n","sig":null,"attributes":[{"value":"/ The ID of the service this task is part of.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198487,"byte_end":198534,"line_start":5231,"line_end":5231,"column_start":5,"column_end":52}},{"value":"serde(rename = \"ServiceID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198539,"byte_end":198569,"line_start":5232,"line_end":5232,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198574,"byte_end":198621,"line_start":5233,"line_end":5233,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13004},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198749,"byte_end":198753,"line_start":5238,"line_end":5238,"column_start":9,"column_end":13},"name":"slot","qualname":"::models::Task::slot","value":"std::option::Option<i64>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Slot\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198663,"byte_end":198688,"line_start":5236,"line_end":5236,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198693,"byte_end":198740,"line_start":5237,"line_end":5237,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13005},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198910,"byte_end":198917,"line_start":5243,"line_end":5243,"column_start":9,"column_end":16},"name":"node_id","qualname":"::models::Task::node_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":" The ID of the node that this task is on.\n","sig":null,"attributes":[{"value":"/ The ID of the node that this task is on.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198773,"byte_end":198817,"line_start":5240,"line_end":5240,"column_start":5,"column_end":49}},{"value":"serde(rename = \"NodeID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198822,"byte_end":198849,"line_start":5241,"line_end":5241,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198854,"byte_end":198901,"line_start":5242,"line_end":5242,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13006},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199046,"byte_end":199072,"line_start":5247,"line_end":5247,"column_start":9,"column_end":35},"name":"assigned_generic_resources","qualname":"::models::Task::assigned_generic_resources","value":"std::option::Option<models::GenericResourcesInner>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"AssignedGenericResources\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198940,"byte_end":198985,"line_start":5245,"line_end":5245,"column_start":5,"column_end":50}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":198990,"byte_end":199037,"line_start":5246,"line_end":5246,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13007},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199193,"byte_end":199199,"line_start":5251,"line_end":5251,"column_start":9,"column_end":15},"name":"status","qualname":"::models::Task::status","value":"std::option::Option<models::TaskStatus>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199105,"byte_end":199132,"line_start":5249,"line_end":5249,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199137,"byte_end":199184,"line_start":5250,"line_end":5250,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13008},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199320,"byte_end":199333,"line_start":5255,"line_end":5255,"column_start":9,"column_end":22},"name":"desired_state","qualname":"::models::Task::desired_state","value":"std::option::Option<models::TaskState>","parent":{"krate":0,"index":12995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DesiredState\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199226,"byte_end":199259,"line_start":5253,"line_end":5253,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199264,"byte_end":199311,"line_start":5254,"line_end":5254,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13090},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199477,"byte_end":199485,"line_start":5261,"line_end":5261,"column_start":12,"column_end":20},"name":"TaskSpec","qualname":"::models::TaskSpec","value":"TaskSpec { plugin_spec, container_spec, network_attachment_spec, resources, restart_policy, placement, force_update, runtime, networks, log_driver }","parent":null,"children":[{"krate":0,"index":13091},{"krate":0,"index":13092},{"krate":0,"index":13093},{"krate":0,"index":13094},{"krate":0,"index":13095},{"krate":0,"index":13096},{"krate":0,"index":13097},{"krate":0,"index":13098},{"krate":0,"index":13099},{"krate":0,"index":13100}],"decl_id":null,"docs":" User modifiable task configuration.\n","sig":null,"attributes":[{"value":"/ User modifiable task configuration.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199358,"byte_end":199397,"line_start":5259,"line_end":5259,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":13091},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199584,"byte_end":199595,"line_start":5264,"line_end":5264,"column_start":9,"column_end":20},"name":"plugin_spec","qualname":"::models::TaskSpec::plugin_spec","value":"std::option::Option<models::TaskSpecPluginSpec>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PluginSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199492,"byte_end":199523,"line_start":5262,"line_end":5262,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199528,"byte_end":199575,"line_start":5263,"line_end":5263,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13092},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199725,"byte_end":199739,"line_start":5268,"line_end":5268,"column_start":9,"column_end":23},"name":"container_spec","qualname":"::models::TaskSpec::container_spec","value":"std::option::Option<models::TaskSpecContainerSpec>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199630,"byte_end":199664,"line_start":5266,"line_end":5266,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199669,"byte_end":199716,"line_start":5267,"line_end":5267,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13093},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199880,"byte_end":199903,"line_start":5272,"line_end":5272,"column_start":9,"column_end":32},"name":"network_attachment_spec","qualname":"::models::TaskSpec::network_attachment_spec","value":"std::option::Option<models::TaskSpecNetworkAttachmentSpec>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"NetworkAttachmentSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199777,"byte_end":199819,"line_start":5270,"line_end":5270,"column_start":5,"column_end":47}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199824,"byte_end":199871,"line_start":5271,"line_end":5271,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13094},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200040,"byte_end":200049,"line_start":5276,"line_end":5276,"column_start":9,"column_end":18},"name":"resources","qualname":"::models::TaskSpec::resources","value":"std::option::Option<models::TaskSpecResources>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Resources\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199949,"byte_end":199979,"line_start":5274,"line_end":5274,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":199984,"byte_end":200031,"line_start":5275,"line_end":5275,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13095},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200178,"byte_end":200192,"line_start":5280,"line_end":5280,"column_start":9,"column_end":23},"name":"restart_policy","qualname":"::models::TaskSpec::restart_policy","value":"std::option::Option<models::TaskSpecRestartPolicy>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RestartPolicy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200083,"byte_end":200117,"line_start":5278,"line_end":5278,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200122,"byte_end":200169,"line_start":5279,"line_end":5279,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13096},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200321,"byte_end":200330,"line_start":5284,"line_end":5284,"column_start":9,"column_end":18},"name":"placement","qualname":"::models::TaskSpec::placement","value":"std::option::Option<models::TaskSpecPlacement>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Placement\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200230,"byte_end":200260,"line_start":5282,"line_end":5282,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200265,"byte_end":200312,"line_start":5283,"line_end":5283,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13097},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200550,"byte_end":200562,"line_start":5289,"line_end":5289,"column_start":9,"column_end":21},"name":"force_update","qualname":"::models::TaskSpec::force_update","value":"std::option::Option<i64>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":" A counter that triggers an update even if no relevant parameters have been changed. \n","sig":null,"attributes":[{"value":"/ A counter that triggers an update even if no relevant parameters have been changed. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200364,"byte_end":200452,"line_start":5286,"line_end":5286,"column_start":5,"column_end":93}},{"value":"serde(rename = \"ForceUpdate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200457,"byte_end":200489,"line_start":5287,"line_end":5287,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200494,"byte_end":200541,"line_start":5288,"line_end":5288,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13098},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200744,"byte_end":200751,"line_start":5294,"line_end":5294,"column_start":9,"column_end":16},"name":"runtime","qualname":"::models::TaskSpec::runtime","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":" Runtime is the type of runtime specified for the task executor. \n","sig":null,"attributes":[{"value":"/ Runtime is the type of runtime specified for the task executor. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200582,"byte_end":200650,"line_start":5291,"line_end":5291,"column_start":5,"column_end":73}},{"value":"serde(rename = \"Runtime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200655,"byte_end":200683,"line_start":5292,"line_end":5292,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200688,"byte_end":200735,"line_start":5293,"line_end":5293,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13099},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200927,"byte_end":200935,"line_start":5299,"line_end":5299,"column_start":9,"column_end":17},"name":"networks","qualname":"::models::TaskSpec::networks","value":"std::option::Option<std::vec::Vec<models::NetworkAttachmentConfig>>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":" Specifies which networks the service should attach to.\n","sig":null,"attributes":[{"value":"/ Specifies which networks the service should attach to.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200774,"byte_end":200832,"line_start":5296,"line_end":5296,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Networks\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200837,"byte_end":200866,"line_start":5297,"line_end":5297,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200871,"byte_end":200918,"line_start":5298,"line_end":5298,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13100},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201071,"byte_end":201081,"line_start":5303,"line_end":5303,"column_start":9,"column_end":19},"name":"log_driver","qualname":"::models::TaskSpec::log_driver","value":"std::option::Option<models::TaskSpecLogDriver>","parent":{"krate":0,"index":13090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LogDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":200980,"byte_end":201010,"line_start":5301,"line_end":5301,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201015,"byte_end":201062,"line_start":5302,"line_end":5302,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13176},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201485,"byte_end":201506,"line_start":5309,"line_end":5309,"column_start":12,"column_end":33},"name":"TaskSpecContainerSpec","qualname":"::models::TaskSpecContainerSpec","value":"TaskSpecContainerSpec { image, labels, command, args, hostname, env, dir, user, groups, privileges, tty, open_stdin, read_only, mounts, stop_signal, stop_grace_period, health_check, hosts, dns_config, secrets, configs, isolation, init, sysctls }","parent":null,"children":[{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":13179},{"krate":0,"index":13180},{"krate":0,"index":13181},{"krate":0,"index":13182},{"krate":0,"index":13183},{"krate":0,"index":13184},{"krate":0,"index":13185},{"krate":0,"index":13186},{"krate":0,"index":13187},{"krate":0,"index":13188},{"krate":0,"index":13189},{"krate":0,"index":13190},{"krate":0,"index":13191},{"krate":0,"index":13192},{"krate":0,"index":13193},{"krate":0,"index":13194},{"krate":0,"index":13195},{"krate":0,"index":13196},{"krate":0,"index":13197},{"krate":0,"index":13198},{"krate":0,"index":13199},{"krate":0,"index":13200}],"decl_id":null,"docs":" Container spec for the service.  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. \n","sig":null,"attributes":[{"value":"/ Container spec for the service.  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201114,"byte_end":201405,"line_start":5307,"line_end":5307,"column_start":1,"column_end":292}}]},{"kind":"Field","id":{"krate":0,"index":13177},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201648,"byte_end":201653,"line_start":5313,"line_end":5313,"column_start":9,"column_end":14},"name":"image","qualname":"::models::TaskSpecContainerSpec::image","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" The image name to use for the container\n","sig":null,"attributes":[{"value":"/ The image name to use for the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201513,"byte_end":201556,"line_start":5310,"line_end":5310,"column_start":5,"column_end":48}},{"value":"serde(rename = \"Image\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201561,"byte_end":201587,"line_start":5311,"line_end":5311,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201592,"byte_end":201639,"line_start":5312,"line_end":5312,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13178},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201801,"byte_end":201807,"line_start":5318,"line_end":5318,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::TaskSpecContainerSpec::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" User-defined key/value data.\n","sig":null,"attributes":[{"value":"/ User-defined key/value data.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201676,"byte_end":201708,"line_start":5315,"line_end":5315,"column_start":5,"column_end":37}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201713,"byte_end":201740,"line_start":5316,"line_end":5316,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201745,"byte_end":201792,"line_start":5317,"line_end":5317,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13179},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201980,"byte_end":201987,"line_start":5323,"line_end":5323,"column_start":9,"column_end":16},"name":"command","qualname":"::models::TaskSpecContainerSpec::command","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" The command to be run in the image.\n","sig":null,"attributes":[{"value":"/ The command to be run in the image.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201847,"byte_end":201886,"line_start":5320,"line_end":5320,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Command\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201891,"byte_end":201919,"line_start":5321,"line_end":5321,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":201924,"byte_end":201971,"line_start":5322,"line_end":5322,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13180},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202135,"byte_end":202139,"line_start":5328,"line_end":5328,"column_start":9,"column_end":13},"name":"args","qualname":"::models::TaskSpecContainerSpec::args","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Arguments to the command.\n","sig":null,"attributes":[{"value":"/ Arguments to the command.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202015,"byte_end":202044,"line_start":5325,"line_end":5325,"column_start":5,"column_end":34}},{"value":"serde(rename = \"Args\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202049,"byte_end":202074,"line_start":5326,"line_end":5326,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202079,"byte_end":202126,"line_start":5327,"line_end":5327,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13181},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202374,"byte_end":202382,"line_start":5333,"line_end":5333,"column_start":9,"column_end":17},"name":"hostname","qualname":"::models::TaskSpecContainerSpec::hostname","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" The hostname to use for the container, as a valid [RFC 1123](https://tools.ietf.org/html/rfc1123) hostname. \n","sig":null,"attributes":[{"value":"/ The hostname to use for the container, as a valid [RFC 1123](https://tools.ietf.org/html/rfc1123) hostname. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202167,"byte_end":202279,"line_start":5330,"line_end":5330,"column_start":5,"column_end":117}},{"value":"serde(rename = \"Hostname\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202284,"byte_end":202313,"line_start":5331,"line_end":5331,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202318,"byte_end":202365,"line_start":5332,"line_end":5332,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13182},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202556,"byte_end":202559,"line_start":5338,"line_end":5338,"column_start":9,"column_end":12},"name":"env","qualname":"::models::TaskSpecContainerSpec::env","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" A list of environment variables in the form `VAR=value`. \n","sig":null,"attributes":[{"value":"/ A list of environment variables in the form `VAR=value`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202405,"byte_end":202466,"line_start":5335,"line_end":5335,"column_start":5,"column_end":66}},{"value":"serde(rename = \"Env\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202471,"byte_end":202495,"line_start":5336,"line_end":5336,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202500,"byte_end":202547,"line_start":5337,"line_end":5337,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13183},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202726,"byte_end":202729,"line_start":5343,"line_end":5343,"column_start":9,"column_end":12},"name":"dir","qualname":"::models::TaskSpecContainerSpec::dir","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" The working directory for commands to run in.\n","sig":null,"attributes":[{"value":"/ The working directory for commands to run in.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202587,"byte_end":202636,"line_start":5340,"line_end":5340,"column_start":5,"column_end":54}},{"value":"serde(rename = \"Dir\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202641,"byte_end":202665,"line_start":5341,"line_end":5341,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202670,"byte_end":202717,"line_start":5342,"line_end":5342,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13184},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202877,"byte_end":202881,"line_start":5348,"line_end":5348,"column_start":9,"column_end":13},"name":"user","qualname":"::models::TaskSpecContainerSpec::user","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" The user inside the container.\n","sig":null,"attributes":[{"value":"/ The user inside the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202752,"byte_end":202786,"line_start":5345,"line_end":5345,"column_start":5,"column_end":39}},{"value":"serde(rename = \"User\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202791,"byte_end":202816,"line_start":5346,"line_end":5346,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202821,"byte_end":202868,"line_start":5347,"line_end":5347,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13185},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203069,"byte_end":203075,"line_start":5353,"line_end":5353,"column_start":9,"column_end":15},"name":"groups","qualname":"::models::TaskSpecContainerSpec::groups","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" A list of additional groups that the container process will run as. \n","sig":null,"attributes":[{"value":"/ A list of additional groups that the container process will run as. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202904,"byte_end":202976,"line_start":5350,"line_end":5350,"column_start":5,"column_end":77}},{"value":"serde(rename = \"Groups\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":202981,"byte_end":203008,"line_start":5351,"line_end":5351,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203013,"byte_end":203060,"line_start":5352,"line_end":5352,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13186},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203195,"byte_end":203205,"line_start":5357,"line_end":5357,"column_start":9,"column_end":19},"name":"privileges","qualname":"::models::TaskSpecContainerSpec::privileges","value":"std::option::Option<models::TaskSpecContainerSpecPrivileges>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Privileges\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203103,"byte_end":203134,"line_start":5355,"line_end":5355,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203139,"byte_end":203186,"line_start":5356,"line_end":5356,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13187},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203388,"byte_end":203391,"line_start":5362,"line_end":5362,"column_start":9,"column_end":12},"name":"tty","qualname":"::models::TaskSpecContainerSpec::tty","value":"std::option::Option<bool>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Whether a pseudo-TTY should be allocated.\n","sig":null,"attributes":[{"value":"/ Whether a pseudo-TTY should be allocated.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203253,"byte_end":203298,"line_start":5359,"line_end":5359,"column_start":5,"column_end":50}},{"value":"serde(rename = \"TTY\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203303,"byte_end":203327,"line_start":5360,"line_end":5360,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203332,"byte_end":203379,"line_start":5361,"line_end":5361,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13188},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203524,"byte_end":203534,"line_start":5367,"line_end":5367,"column_start":9,"column_end":19},"name":"open_stdin","qualname":"::models::TaskSpecContainerSpec::open_stdin","value":"std::option::Option<bool>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Open `stdin`\n","sig":null,"attributes":[{"value":"/ Open `stdin`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203412,"byte_end":203428,"line_start":5364,"line_end":5364,"column_start":5,"column_end":21}},{"value":"serde(rename = \"OpenStdin\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203433,"byte_end":203463,"line_start":5365,"line_end":5365,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203468,"byte_end":203515,"line_start":5366,"line_end":5366,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13189},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203705,"byte_end":203714,"line_start":5372,"line_end":5372,"column_start":9,"column_end":18},"name":"read_only","qualname":"::models::TaskSpecContainerSpec::read_only","value":"std::option::Option<bool>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Mount the container's root filesystem as read only.\n","sig":null,"attributes":[{"value":"/ Mount the container's root filesystem as read only.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203555,"byte_end":203610,"line_start":5369,"line_end":5369,"column_start":5,"column_end":60}},{"value":"serde(rename = \"ReadOnly\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203615,"byte_end":203644,"line_start":5370,"line_end":5370,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203649,"byte_end":203696,"line_start":5371,"line_end":5371,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13190},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203915,"byte_end":203921,"line_start":5377,"line_end":5377,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::TaskSpecContainerSpec::mounts","value":"std::option::Option<std::vec::Vec<models::Mount>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Specification for mounts to be added to containers created as part of the service. \n","sig":null,"attributes":[{"value":"/ Specification for mounts to be added to containers created as part of the service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203735,"byte_end":203822,"line_start":5374,"line_end":5374,"column_start":5,"column_end":92}},{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203827,"byte_end":203854,"line_start":5375,"line_end":5375,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203859,"byte_end":203906,"line_start":5376,"line_end":5376,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13191},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204078,"byte_end":204089,"line_start":5382,"line_end":5382,"column_start":9,"column_end":20},"name":"stop_signal","qualname":"::models::TaskSpecContainerSpec::stop_signal","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Signal to stop the container.\n","sig":null,"attributes":[{"value":"/ Signal to stop the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203948,"byte_end":203981,"line_start":5379,"line_end":5379,"column_start":5,"column_end":38}},{"value":"serde(rename = \"StopSignal\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":203986,"byte_end":204017,"line_start":5380,"line_end":5380,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204022,"byte_end":204069,"line_start":5381,"line_end":5381,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13192},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204302,"byte_end":204319,"line_start":5387,"line_end":5387,"column_start":9,"column_end":26},"name":"stop_grace_period","qualname":"::models::TaskSpecContainerSpec::stop_grace_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Amount of time to wait for the container to terminate before forcefully killing it. \n","sig":null,"attributes":[{"value":"/ Amount of time to wait for the container to terminate before forcefully killing it. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204112,"byte_end":204200,"line_start":5384,"line_end":5384,"column_start":5,"column_end":93}},{"value":"serde(rename = \"StopGracePeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204205,"byte_end":204241,"line_start":5385,"line_end":5385,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204246,"byte_end":204293,"line_start":5386,"line_end":5386,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13193},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204432,"byte_end":204444,"line_start":5391,"line_end":5391,"column_start":9,"column_end":21},"name":"health_check","qualname":"::models::TaskSpecContainerSpec::health_check","value":"std::option::Option<models::HealthConfig>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"HealthCheck\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204339,"byte_end":204371,"line_start":5389,"line_end":5389,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204376,"byte_end":204423,"line_start":5390,"line_end":5390,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13194},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204806,"byte_end":204811,"line_start":5396,"line_end":5396,"column_start":9,"column_end":14},"name":"hosts","qualname":"::models::TaskSpecContainerSpec::hosts","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" A list of hostname/IP mappings to add to the container's `hosts` file. The format of extra hosts is specified in the [hosts(5)](http://man7.org/linux/man-pages/man5/hosts.5.html) man page:      IP_address canonical_hostname [aliases...] \n","sig":null,"attributes":[{"value":"/ A list of hostname/IP mappings to add to the container's `hosts` file. The format of extra hosts is specified in the [hosts(5)](http://man7.org/linux/man-pages/man5/hosts.5.html) man page:      IP_address canonical_hostname [aliases...] ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204473,"byte_end":204714,"line_start":5393,"line_end":5393,"column_start":5,"column_end":246}},{"value":"serde(rename = \"Hosts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204719,"byte_end":204745,"line_start":5394,"line_end":5394,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204750,"byte_end":204797,"line_start":5395,"line_end":5395,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13195},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204930,"byte_end":204940,"line_start":5400,"line_end":5400,"column_start":9,"column_end":19},"name":"dns_config","qualname":"::models::TaskSpecContainerSpec::dns_config","value":"std::option::Option<models::TaskSpecContainerSpecDnsConfig>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"DNSConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204839,"byte_end":204869,"line_start":5398,"line_end":5398,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204874,"byte_end":204921,"line_start":5399,"line_end":5399,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13196},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205174,"byte_end":205181,"line_start":5405,"line_end":5405,"column_start":9,"column_end":16},"name":"secrets","qualname":"::models::TaskSpecContainerSpec::secrets","value":"std::option::Option<std::vec::Vec<models::TaskSpecContainerSpecSecrets>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Secrets contains references to zero or more secrets that will be exposed to the service. \n","sig":null,"attributes":[{"value":"/ Secrets contains references to zero or more secrets that will be exposed to the service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":204987,"byte_end":205080,"line_start":5402,"line_end":5402,"column_start":5,"column_end":98}},{"value":"serde(rename = \"Secrets\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205085,"byte_end":205113,"line_start":5403,"line_end":5403,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205118,"byte_end":205165,"line_start":5404,"line_end":5404,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13197},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205418,"byte_end":205425,"line_start":5410,"line_end":5410,"column_start":9,"column_end":16},"name":"configs","qualname":"::models::TaskSpecContainerSpec::configs","value":"std::option::Option<std::vec::Vec<models::TaskSpecContainerSpecConfigs>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Configs contains references to zero or more configs that will be exposed to the service. \n","sig":null,"attributes":[{"value":"/ Configs contains references to zero or more configs that will be exposed to the service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205231,"byte_end":205324,"line_start":5407,"line_end":5407,"column_start":5,"column_end":98}},{"value":"serde(rename = \"Configs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205329,"byte_end":205357,"line_start":5408,"line_end":5408,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205362,"byte_end":205409,"line_start":5409,"line_end":5409,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13198},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205650,"byte_end":205659,"line_start":5415,"line_end":5415,"column_start":9,"column_end":18},"name":"isolation","qualname":"::models::TaskSpecContainerSpec::isolation","value":"std::option::Option<models::TaskSpecContainerSpecIsolationEnum>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Isolation technology of the containers running the service. (Windows only) \n","sig":null,"attributes":[{"value":"/ Isolation technology of the containers running the service. (Windows only) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205475,"byte_end":205554,"line_start":5412,"line_end":5412,"column_start":5,"column_end":84}},{"value":"serde(rename = \"Isolation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205559,"byte_end":205589,"line_start":5413,"line_end":5413,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205594,"byte_end":205641,"line_start":5414,"line_end":5414,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13199},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205968,"byte_end":205972,"line_start":5420,"line_end":5420,"column_start":9,"column_end":13},"name":"init","qualname":"::models::TaskSpecContainerSpec::init","value":"std::option::Option<bool>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. \n","sig":null,"attributes":[{"value":"/ Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205710,"byte_end":205877,"line_start":5417,"line_end":5417,"column_start":5,"column_end":172}},{"value":"serde(rename = \"Init\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205882,"byte_end":205907,"line_start":5418,"line_end":5418,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205912,"byte_end":205959,"line_start":5419,"line_end":5419,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13200},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206472,"byte_end":206479,"line_start":5425,"line_end":5425,"column_start":9,"column_end":16},"name":"sysctls","qualname":"::models::TaskSpecContainerSpec::sysctls","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":13176},"children":[],"decl_id":null,"docs":" Set kernel namedspaced parameters (sysctls) in the container. The Sysctls option on services accepts the same sysctls as the are supported on containers. Note that while the same sysctls are supported, no guarantees or checks are made about their suitability for a clustered environment, and it's up to the user to determine whether a given sysctl will work properly in a Service. \n","sig":null,"attributes":[{"value":"/ Set kernel namedspaced parameters (sysctls) in the container. The Sysctls option on services accepts the same sysctls as the are supported on containers. Note that while the same sysctls are supported, no guarantees or checks are made about their suitability for a clustered environment, and it's up to the user to determine whether a given sysctl will work properly in a Service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":205993,"byte_end":206378,"line_start":5422,"line_end":5422,"column_start":5,"column_end":390}},{"value":"serde(rename = \"Sysctls\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206383,"byte_end":206411,"line_start":5423,"line_end":5423,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206416,"byte_end":206463,"line_start":5424,"line_end":5424,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13305},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206712,"byte_end":206717,"line_start":5433,"line_end":5433,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::TaskSpecContainerSpecIsolationEnum::EMPTY","value":"TaskSpecContainerSpecIsolationEnum::EMPTY","parent":{"krate":0,"index":13304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206686,"byte_end":206707,"line_start":5432,"line_end":5432,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13307},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206756,"byte_end":206763,"line_start":5435,"line_end":5435,"column_start":5,"column_end":12},"name":"DEFAULT","qualname":"::models::TaskSpecContainerSpecIsolationEnum::DEFAULT","value":"TaskSpecContainerSpecIsolationEnum::DEFAULT","parent":{"krate":0,"index":13304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"default\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206723,"byte_end":206751,"line_start":5434,"line_end":5434,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13309},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206802,"byte_end":206809,"line_start":5437,"line_end":5437,"column_start":5,"column_end":12},"name":"PROCESS","qualname":"::models::TaskSpecContainerSpecIsolationEnum::PROCESS","value":"TaskSpecContainerSpecIsolationEnum::PROCESS","parent":{"krate":0,"index":13304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"process\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206769,"byte_end":206797,"line_start":5436,"line_end":5436,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":13311},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206847,"byte_end":206853,"line_start":5439,"line_end":5439,"column_start":5,"column_end":11},"name":"HYPERV","qualname":"::models::TaskSpecContainerSpecIsolationEnum::HYPERV","value":"TaskSpecContainerSpecIsolationEnum::HYPERV","parent":{"krate":0,"index":13304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"hyperv\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206815,"byte_end":206842,"line_start":5438,"line_end":5438,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":13304},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206644,"byte_end":206678,"line_start":5431,"line_end":5431,"column_start":10,"column_end":44},"name":"TaskSpecContainerSpecIsolationEnum","qualname":"::models::TaskSpecContainerSpecIsolationEnum","value":"pub enum TaskSpecContainerSpecIsolationEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"default\")]\n    DEFAULT,\n\n    #[serde(rename = \"process\")]\n    PROCESS,\n\n    #[serde(rename = \"hyperv\")]\n    HYPERV,\n}","parent":null,"children":[{"krate":0,"index":13305},{"krate":0,"index":13307},{"krate":0,"index":13309},{"krate":0,"index":13311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206518,"byte_end":206548,"line_start":5429,"line_end":5429,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":13377},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208389,"byte_end":208417,"line_start":5479,"line_end":5479,"column_start":12,"column_end":40},"name":"TaskSpecContainerSpecConfigs","qualname":"::models::TaskSpecContainerSpecConfigs","value":"TaskSpecContainerSpecConfigs { file, runtime, config_id, config_name }","parent":null,"children":[{"krate":0,"index":13378},{"krate":0,"index":13379},{"krate":0,"index":13380},{"krate":0,"index":13381}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13378},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208510,"byte_end":208514,"line_start":5482,"line_end":5482,"column_start":9,"column_end":13},"name":"file","qualname":"::models::TaskSpecContainerSpecConfigs::file","value":"std::option::Option<models::TaskSpecContainerSpecFile1>","parent":{"krate":0,"index":13377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"File\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208424,"byte_end":208449,"line_start":5480,"line_end":5480,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208454,"byte_end":208501,"line_start":5481,"line_end":5481,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13379},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208835,"byte_end":208842,"line_start":5487,"line_end":5487,"column_start":9,"column_end":16},"name":"runtime","qualname":"::models::TaskSpecContainerSpecConfigs::runtime","value":"std::option::Option<std::collections::HashMap<(), ()>>","parent":{"krate":0,"index":13377},"children":[],"decl_id":null,"docs":" Runtime represents a target that is not mounted into the container but is used by the task  <p><br /><p>  > **Note**: `Configs.File` and `Configs.Runtime` are mutually > exclusive \n","sig":null,"attributes":[{"value":"/ Runtime represents a target that is not mounted into the container but is used by the task  <p><br /><p>  > **Note**: `Configs.File` and `Configs.Runtime` are mutually > exclusive ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208557,"byte_end":208741,"line_start":5484,"line_end":5484,"column_start":5,"column_end":189}},{"value":"serde(rename = \"Runtime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208746,"byte_end":208774,"line_start":5485,"line_end":5485,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208779,"byte_end":208826,"line_start":5486,"line_end":5486,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13380},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209047,"byte_end":209056,"line_start":5492,"line_end":5492,"column_start":9,"column_end":18},"name":"config_id","qualname":"::models::TaskSpecContainerSpecConfigs::config_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13377},"children":[],"decl_id":null,"docs":" ConfigID represents the ID of the specific config that we're referencing. \n","sig":null,"attributes":[{"value":"/ ConfigID represents the ID of the specific config that we're referencing. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208874,"byte_end":208952,"line_start":5489,"line_end":5489,"column_start":5,"column_end":83}},{"value":"serde(rename = \"ConfigID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208957,"byte_end":208986,"line_start":5490,"line_end":5490,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":208991,"byte_end":209038,"line_start":5491,"line_end":5491,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13381},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209352,"byte_end":209363,"line_start":5497,"line_end":5497,"column_start":9,"column_end":20},"name":"config_name","qualname":"::models::TaskSpecContainerSpecConfigs::config_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13377},"children":[],"decl_id":null,"docs":" ConfigName is the name of the config that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID. \n","sig":null,"attributes":[{"value":"/ ConfigName is the name of the config that this references, but this is just provided for lookup/display purposes. The config in the reference will be identified by its ID. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209079,"byte_end":209255,"line_start":5494,"line_end":5494,"column_start":5,"column_end":181}},{"value":"serde(rename = \"ConfigName\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209260,"byte_end":209291,"line_start":5495,"line_end":5495,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209296,"byte_end":209343,"line_start":5496,"line_end":5496,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13445},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209562,"byte_end":209592,"line_start":5503,"line_end":5503,"column_start":12,"column_end":42},"name":"TaskSpecContainerSpecDnsConfig","qualname":"::models::TaskSpecContainerSpecDnsConfig","value":"TaskSpecContainerSpecDnsConfig { nameservers, search, options }","parent":null,"children":[{"krate":0,"index":13446},{"krate":0,"index":13447},{"krate":0,"index":13448}],"decl_id":null,"docs":" Specification for DNS related configurations in resolver configuration file (`resolv.conf`). \n","sig":null,"attributes":[{"value":"/ Specification for DNS related configurations in resolver configuration file (`resolv.conf`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209385,"byte_end":209482,"line_start":5501,"line_end":5501,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":13446},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209738,"byte_end":209749,"line_start":5507,"line_end":5507,"column_start":9,"column_end":20},"name":"nameservers","qualname":"::models::TaskSpecContainerSpecDnsConfig::nameservers","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13445},"children":[],"decl_id":null,"docs":" The IP addresses of the name servers.\n","sig":null,"attributes":[{"value":"/ The IP addresses of the name servers.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209599,"byte_end":209640,"line_start":5504,"line_end":5504,"column_start":5,"column_end":46}},{"value":"serde(rename = \"Nameservers\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209645,"byte_end":209677,"line_start":5505,"line_end":5505,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209682,"byte_end":209729,"line_start":5506,"line_end":5506,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13447},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209909,"byte_end":209915,"line_start":5512,"line_end":5512,"column_start":9,"column_end":15},"name":"search","qualname":"::models::TaskSpecContainerSpecDnsConfig::search","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13445},"children":[],"decl_id":null,"docs":" A search list for host-name lookup.\n","sig":null,"attributes":[{"value":"/ A search list for host-name lookup.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209777,"byte_end":209816,"line_start":5509,"line_end":5509,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Search\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209821,"byte_end":209848,"line_start":5510,"line_end":5510,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209853,"byte_end":209900,"line_start":5511,"line_end":5511,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13448},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210128,"byte_end":210135,"line_start":5517,"line_end":5517,"column_start":9,"column_end":16},"name":"options","qualname":"::models::TaskSpecContainerSpecDnsConfig::options","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":13445},"children":[],"decl_id":null,"docs":" A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.). \n","sig":null,"attributes":[{"value":"/ A list of internal resolver variables to be modified (e.g., `debug`, `ndots:3`, etc.). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":209943,"byte_end":210034,"line_start":5514,"line_end":5514,"column_start":5,"column_end":96}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210039,"byte_end":210067,"line_start":5515,"line_end":5515,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210072,"byte_end":210119,"line_start":5516,"line_end":5516,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13510},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210306,"byte_end":210331,"line_start":5523,"line_end":5523,"column_start":12,"column_end":37},"name":"TaskSpecContainerSpecFile","qualname":"::models::TaskSpecContainerSpecFile","value":"TaskSpecContainerSpecFile { name, uid, gid, mode }","parent":null,"children":[{"krate":0,"index":13511},{"krate":0,"index":13512},{"krate":0,"index":13513},{"krate":0,"index":13514}],"decl_id":null,"docs":" File represents a specific target that is backed by a file. \n","sig":null,"attributes":[{"value":"/ File represents a specific target that is backed by a file. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210162,"byte_end":210226,"line_start":5521,"line_end":5521,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":13511},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210487,"byte_end":210491,"line_start":5527,"line_end":5527,"column_start":9,"column_end":13},"name":"name","qualname":"::models::TaskSpecContainerSpecFile::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13510},"children":[],"decl_id":null,"docs":" Name represents the final filename in the filesystem. \n","sig":null,"attributes":[{"value":"/ Name represents the final filename in the filesystem. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210338,"byte_end":210396,"line_start":5524,"line_end":5524,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210401,"byte_end":210426,"line_start":5525,"line_end":5525,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210431,"byte_end":210478,"line_start":5526,"line_end":5526,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13512},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210636,"byte_end":210639,"line_start":5532,"line_end":5532,"column_start":9,"column_end":12},"name":"uid","qualname":"::models::TaskSpecContainerSpecFile::uid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13510},"children":[],"decl_id":null,"docs":" UID represents the file UID.\n","sig":null,"attributes":[{"value":"/ UID represents the file UID.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210514,"byte_end":210546,"line_start":5529,"line_end":5529,"column_start":5,"column_end":37}},{"value":"serde(rename = \"UID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210551,"byte_end":210575,"line_start":5530,"line_end":5530,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210580,"byte_end":210627,"line_start":5531,"line_end":5531,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13513},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210784,"byte_end":210787,"line_start":5537,"line_end":5537,"column_start":9,"column_end":12},"name":"gid","qualname":"::models::TaskSpecContainerSpecFile::gid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13510},"children":[],"decl_id":null,"docs":" GID represents the file GID.\n","sig":null,"attributes":[{"value":"/ GID represents the file GID.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210662,"byte_end":210694,"line_start":5534,"line_end":5534,"column_start":5,"column_end":37}},{"value":"serde(rename = \"GID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210699,"byte_end":210723,"line_start":5535,"line_end":5535,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210728,"byte_end":210775,"line_start":5536,"line_end":5536,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13514},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210946,"byte_end":210950,"line_start":5542,"line_end":5542,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::TaskSpecContainerSpecFile::mode","value":"std::option::Option<u32>","parent":{"krate":0,"index":13510},"children":[],"decl_id":null,"docs":" Mode represents the FileMode of the file.\n","sig":null,"attributes":[{"value":"/ Mode represents the FileMode of the file.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210810,"byte_end":210855,"line_start":5539,"line_end":5539,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210860,"byte_end":210885,"line_start":5540,"line_end":5540,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210890,"byte_end":210937,"line_start":5541,"line_end":5541,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13578},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211200,"byte_end":211226,"line_start":5548,"line_end":5548,"column_start":12,"column_end":38},"name":"TaskSpecContainerSpecFile1","qualname":"::models::TaskSpecContainerSpecFile1","value":"TaskSpecContainerSpecFile1 { name, uid, gid, mode }","parent":null,"children":[{"krate":0,"index":13579},{"krate":0,"index":13580},{"krate":0,"index":13581},{"krate":0,"index":13582}],"decl_id":null,"docs":" File represents a specific target that is backed by a file.  <p><br /><p>  > **Note**: `Configs.File` and `Configs.Runtime` are mutually exclusive \n","sig":null,"attributes":[{"value":"/ File represents a specific target that is backed by a file.  <p><br /><p>  > **Note**: `Configs.File` and `Configs.Runtime` are mutually exclusive ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":210969,"byte_end":211120,"line_start":5546,"line_end":5546,"column_start":1,"column_end":152}}]},{"kind":"Field","id":{"krate":0,"index":13579},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211382,"byte_end":211386,"line_start":5552,"line_end":5552,"column_start":9,"column_end":13},"name":"name","qualname":"::models::TaskSpecContainerSpecFile1::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13578},"children":[],"decl_id":null,"docs":" Name represents the final filename in the filesystem. \n","sig":null,"attributes":[{"value":"/ Name represents the final filename in the filesystem. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211233,"byte_end":211291,"line_start":5549,"line_end":5549,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211296,"byte_end":211321,"line_start":5550,"line_end":5550,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211326,"byte_end":211373,"line_start":5551,"line_end":5551,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13580},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211531,"byte_end":211534,"line_start":5557,"line_end":5557,"column_start":9,"column_end":12},"name":"uid","qualname":"::models::TaskSpecContainerSpecFile1::uid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13578},"children":[],"decl_id":null,"docs":" UID represents the file UID.\n","sig":null,"attributes":[{"value":"/ UID represents the file UID.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211409,"byte_end":211441,"line_start":5554,"line_end":5554,"column_start":5,"column_end":37}},{"value":"serde(rename = \"UID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211446,"byte_end":211470,"line_start":5555,"line_end":5555,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211475,"byte_end":211522,"line_start":5556,"line_end":5556,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13581},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211679,"byte_end":211682,"line_start":5562,"line_end":5562,"column_start":9,"column_end":12},"name":"gid","qualname":"::models::TaskSpecContainerSpecFile1::gid","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13578},"children":[],"decl_id":null,"docs":" GID represents the file GID.\n","sig":null,"attributes":[{"value":"/ GID represents the file GID.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211557,"byte_end":211589,"line_start":5559,"line_end":5559,"column_start":5,"column_end":37}},{"value":"serde(rename = \"GID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211594,"byte_end":211618,"line_start":5560,"line_end":5560,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211623,"byte_end":211670,"line_start":5561,"line_end":5561,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13582},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211841,"byte_end":211845,"line_start":5567,"line_end":5567,"column_start":9,"column_end":13},"name":"mode","qualname":"::models::TaskSpecContainerSpecFile1::mode","value":"std::option::Option<u32>","parent":{"krate":0,"index":13578},"children":[],"decl_id":null,"docs":" Mode represents the FileMode of the file.\n","sig":null,"attributes":[{"value":"/ Mode represents the FileMode of the file.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211705,"byte_end":211750,"line_start":5564,"line_end":5564,"column_start":5,"column_end":50}},{"value":"serde(rename = \"Mode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211755,"byte_end":211780,"line_start":5565,"line_end":5565,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211785,"byte_end":211832,"line_start":5566,"line_end":5566,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13646},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211982,"byte_end":212013,"line_start":5573,"line_end":5573,"column_start":12,"column_end":43},"name":"TaskSpecContainerSpecPrivileges","qualname":"::models::TaskSpecContainerSpecPrivileges","value":"TaskSpecContainerSpecPrivileges { credential_spec, se_linux_context }","parent":null,"children":[{"krate":0,"index":13647},{"krate":0,"index":13648}],"decl_id":null,"docs":" Security options for the container\n","sig":null,"attributes":[{"value":"/ Security options for the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":211864,"byte_end":211902,"line_start":5571,"line_end":5571,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":13647},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212116,"byte_end":212131,"line_start":5576,"line_end":5576,"column_start":9,"column_end":24},"name":"credential_spec","qualname":"::models::TaskSpecContainerSpecPrivileges::credential_spec","value":"std::option::Option<models::TaskSpecContainerSpecPrivilegesCredentialSpec>","parent":{"krate":0,"index":13646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"CredentialSpec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212020,"byte_end":212055,"line_start":5574,"line_end":5574,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212060,"byte_end":212107,"line_start":5575,"line_end":5575,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13648},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212289,"byte_end":212305,"line_start":5580,"line_end":5580,"column_start":9,"column_end":25},"name":"se_linux_context","qualname":"::models::TaskSpecContainerSpecPrivileges::se_linux_context","value":"std::option::Option<models::TaskSpecContainerSpecPrivilegesSeLinuxContext>","parent":{"krate":0,"index":13646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"SELinuxContext\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212193,"byte_end":212228,"line_start":5578,"line_end":5578,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212233,"byte_end":212280,"line_start":5579,"line_end":5579,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13708},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212507,"byte_end":212552,"line_start":5586,"line_end":5586,"column_start":12,"column_end":57},"name":"TaskSpecContainerSpecPrivilegesCredentialSpec","qualname":"::models::TaskSpecContainerSpecPrivilegesCredentialSpec","value":"TaskSpecContainerSpecPrivilegesCredentialSpec { config, file, registry }","parent":null,"children":[{"krate":0,"index":13709},{"krate":0,"index":13710},{"krate":0,"index":13711}],"decl_id":null,"docs":" CredentialSpec for managed service account (Windows only)\n","sig":null,"attributes":[{"value":"/ CredentialSpec for managed service account (Windows only)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212366,"byte_end":212427,"line_start":5584,"line_end":5584,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":13709},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212943,"byte_end":212949,"line_start":5590,"line_end":5590,"column_start":9,"column_end":15},"name":"config","qualname":"::models::TaskSpecContainerSpecPrivilegesCredentialSpec::config","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13708},"children":[],"decl_id":null,"docs":" Load credential spec from a Swarm Config with the given ID. The specified config must also be present in the Configs field with the Runtime property set.  <p><br /></p>   > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. \n","sig":null,"attributes":[{"value":"/ Load credential spec from a Swarm Config with the given ID. The specified config must also be present in the Configs field with the Runtime property set.  <p><br /></p>   > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212559,"byte_end":212850,"line_start":5587,"line_end":5587,"column_start":5,"column_end":296}},{"value":"serde(rename = \"Config\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212855,"byte_end":212882,"line_start":5588,"line_end":5588,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212887,"byte_end":212934,"line_start":5589,"line_end":5589,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13710},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213512,"byte_end":213516,"line_start":5595,"line_end":5595,"column_start":9,"column_end":13},"name":"file","qualname":"::models::TaskSpecContainerSpecPrivilegesCredentialSpec::file","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13708},"children":[],"decl_id":null,"docs":" Load credential spec from this file. The file is read by the daemon, and must be present in the `CredentialSpecs` subdirectory in the docker data directory, which defaults to `C:\\\\ProgramData\\\\Docker\\\\` on Windows.  For example, specifying `spec.json` loads `C:\\\\ProgramData\\\\Docker\\\\CredentialSpecs\\\\spec.json`.  <p><br /></p>  > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. \n","sig":null,"attributes":[{"value":"/ Load credential spec from this file. The file is read by the daemon, and must be present in the `CredentialSpecs` subdirectory in the docker data directory, which defaults to `C:\\\\ProgramData\\\\Docker\\\\` on Windows.  For example, specifying `spec.json` loads `C:\\\\ProgramData\\\\Docker\\\\CredentialSpecs\\\\spec.json`.  <p><br /></p>  > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":212972,"byte_end":213421,"line_start":5592,"line_end":5592,"column_start":5,"column_end":454}},{"value":"serde(rename = \"File\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213426,"byte_end":213451,"line_start":5593,"line_end":5593,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213456,"byte_end":213503,"line_start":5594,"line_end":5594,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13711},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213984,"byte_end":213992,"line_start":5600,"line_end":5600,"column_start":9,"column_end":17},"name":"registry","qualname":"::models::TaskSpecContainerSpecPrivilegesCredentialSpec::registry","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13708},"children":[],"decl_id":null,"docs":" Load credential spec from this value in the Windows registry. The specified registry value must be located in:  `HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Virtualization\\\\Containers\\\\CredentialSpecs`  <p><br /></p>   > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. \n","sig":null,"attributes":[{"value":"/ Load credential spec from this value in the Windows registry. The specified registry value must be located in:  `HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Virtualization\\\\Containers\\\\CredentialSpecs`  <p><br /></p>   > **Note**: `CredentialSpec.File`, `CredentialSpec.Registry`, > and `CredentialSpec.Config` are mutually exclusive. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213539,"byte_end":213889,"line_start":5597,"line_end":5597,"column_start":5,"column_end":355}},{"value":"serde(rename = \"Registry\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213894,"byte_end":213923,"line_start":5598,"line_end":5598,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":213928,"byte_end":213975,"line_start":5599,"line_end":5599,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13773},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214129,"byte_end":214174,"line_start":5606,"line_end":5606,"column_start":12,"column_end":57},"name":"TaskSpecContainerSpecPrivilegesSeLinuxContext","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext","value":"TaskSpecContainerSpecPrivilegesSeLinuxContext { disable, user, role, typ, level }","parent":null,"children":[{"krate":0,"index":13774},{"krate":0,"index":13775},{"krate":0,"index":13776},{"krate":0,"index":13777},{"krate":0,"index":13778}],"decl_id":null,"docs":" SELinux labels of the container\n","sig":null,"attributes":[{"value":"/ SELinux labels of the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214014,"byte_end":214049,"line_start":5604,"line_end":5604,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":13774},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214294,"byte_end":214301,"line_start":5610,"line_end":5610,"column_start":9,"column_end":16},"name":"disable","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext::disable","value":"std::option::Option<bool>","parent":{"krate":0,"index":13773},"children":[],"decl_id":null,"docs":" Disable SELinux\n","sig":null,"attributes":[{"value":"/ Disable SELinux","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214181,"byte_end":214200,"line_start":5607,"line_end":5607,"column_start":5,"column_end":24}},{"value":"serde(rename = \"Disable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214205,"byte_end":214233,"line_start":5608,"line_end":5608,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214238,"byte_end":214285,"line_start":5609,"line_end":5609,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13775},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214435,"byte_end":214439,"line_start":5615,"line_end":5615,"column_start":9,"column_end":13},"name":"user","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext::user","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13773},"children":[],"decl_id":null,"docs":" SELinux user label\n","sig":null,"attributes":[{"value":"/ SELinux user label","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214322,"byte_end":214344,"line_start":5612,"line_end":5612,"column_start":5,"column_end":27}},{"value":"serde(rename = \"User\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214349,"byte_end":214374,"line_start":5613,"line_end":5613,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214379,"byte_end":214426,"line_start":5614,"line_end":5614,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13776},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214575,"byte_end":214579,"line_start":5620,"line_end":5620,"column_start":9,"column_end":13},"name":"role","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext::role","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13773},"children":[],"decl_id":null,"docs":" SELinux role label\n","sig":null,"attributes":[{"value":"/ SELinux role label","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214462,"byte_end":214484,"line_start":5617,"line_end":5617,"column_start":5,"column_end":27}},{"value":"serde(rename = \"Role\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214489,"byte_end":214514,"line_start":5618,"line_end":5618,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214519,"byte_end":214566,"line_start":5619,"line_end":5619,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13777},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214715,"byte_end":214718,"line_start":5625,"line_end":5625,"column_start":9,"column_end":12},"name":"typ","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext::typ","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13773},"children":[],"decl_id":null,"docs":" SELinux type label\n","sig":null,"attributes":[{"value":"/ SELinux type label","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214602,"byte_end":214624,"line_start":5622,"line_end":5622,"column_start":5,"column_end":27}},{"value":"serde(rename = \"Type\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214629,"byte_end":214654,"line_start":5623,"line_end":5623,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214659,"byte_end":214706,"line_start":5624,"line_end":5624,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13778},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214856,"byte_end":214861,"line_start":5630,"line_end":5630,"column_start":9,"column_end":14},"name":"level","qualname":"::models::TaskSpecContainerSpecPrivilegesSeLinuxContext::level","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13773},"children":[],"decl_id":null,"docs":" SELinux level label\n","sig":null,"attributes":[{"value":"/ SELinux level label","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214741,"byte_end":214764,"line_start":5627,"line_end":5627,"column_start":5,"column_end":28}},{"value":"serde(rename = \"Level\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214769,"byte_end":214795,"line_start":5628,"line_end":5628,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214800,"byte_end":214847,"line_start":5629,"line_end":5629,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13844},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214962,"byte_end":214990,"line_start":5635,"line_end":5635,"column_start":12,"column_end":40},"name":"TaskSpecContainerSpecSecrets","qualname":"::models::TaskSpecContainerSpecSecrets","value":"TaskSpecContainerSpecSecrets { file, secret_id, secret_name }","parent":null,"children":[{"krate":0,"index":13845},{"krate":0,"index":13846},{"krate":0,"index":13847}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13845},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215083,"byte_end":215087,"line_start":5638,"line_end":5638,"column_start":9,"column_end":13},"name":"file","qualname":"::models::TaskSpecContainerSpecSecrets::file","value":"std::option::Option<models::TaskSpecContainerSpecFile>","parent":{"krate":0,"index":13844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"File\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":214997,"byte_end":215022,"line_start":5636,"line_end":5636,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215027,"byte_end":215074,"line_start":5637,"line_end":5637,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13846},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215302,"byte_end":215311,"line_start":5643,"line_end":5643,"column_start":9,"column_end":18},"name":"secret_id","qualname":"::models::TaskSpecContainerSpecSecrets::secret_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13844},"children":[],"decl_id":null,"docs":" SecretID represents the ID of the specific secret that we're referencing. \n","sig":null,"attributes":[{"value":"/ SecretID represents the ID of the specific secret that we're referencing. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215129,"byte_end":215207,"line_start":5640,"line_end":5640,"column_start":5,"column_end":83}},{"value":"serde(rename = \"SecretID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215212,"byte_end":215241,"line_start":5641,"line_end":5641,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215246,"byte_end":215293,"line_start":5642,"line_end":5642,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13847},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215607,"byte_end":215618,"line_start":5648,"line_end":5648,"column_start":9,"column_end":20},"name":"secret_name","qualname":"::models::TaskSpecContainerSpecSecrets::secret_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13844},"children":[],"decl_id":null,"docs":" SecretName is the name of the secret that this references, but this is just provided for lookup/display purposes. The secret in the reference will be identified by its ID. \n","sig":null,"attributes":[{"value":"/ SecretName is the name of the secret that this references, but this is just provided for lookup/display purposes. The secret in the reference will be identified by its ID. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215334,"byte_end":215510,"line_start":5645,"line_end":5645,"column_start":5,"column_end":181}},{"value":"serde(rename = \"SecretName\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215515,"byte_end":215546,"line_start":5646,"line_end":5646,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215551,"byte_end":215598,"line_start":5647,"line_end":5647,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13909},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215911,"byte_end":215928,"line_start":5654,"line_end":5654,"column_start":12,"column_end":29},"name":"TaskSpecLogDriver","qualname":"::models::TaskSpecLogDriver","value":"TaskSpecLogDriver { name, options }","parent":null,"children":[{"krate":0,"index":13910},{"krate":0,"index":13911}],"decl_id":null,"docs":" Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified. \n","sig":null,"attributes":[{"value":"/ Specifies the log driver to use for tasks created from this spec. If not present, the default one for the swarm will be used, finally falling back to the engine default if not specified. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215640,"byte_end":215831,"line_start":5652,"line_end":5652,"column_start":1,"column_end":192}}]},{"kind":"Field","id":{"krate":0,"index":13910},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216021,"byte_end":216025,"line_start":5657,"line_end":5657,"column_start":9,"column_end":13},"name":"name","qualname":"::models::TaskSpecLogDriver::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215935,"byte_end":215960,"line_start":5655,"line_end":5655,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":215965,"byte_end":216012,"line_start":5656,"line_end":5656,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":13911},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216137,"byte_end":216144,"line_start":5661,"line_end":5661,"column_start":9,"column_end":16},"name":"options","qualname":"::models::TaskSpecLogDriver::options","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":13909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216048,"byte_end":216076,"line_start":5659,"line_end":5659,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216081,"byte_end":216128,"line_start":5660,"line_end":5660,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":13971},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216603,"byte_end":216632,"line_start":5667,"line_end":5667,"column_start":12,"column_end":41},"name":"TaskSpecNetworkAttachmentSpec","qualname":"::models::TaskSpecNetworkAttachmentSpec","value":"TaskSpecNetworkAttachmentSpec { container_id }","parent":null,"children":[{"krate":0,"index":13972}],"decl_id":null,"docs":" Read-only spec type for non-swarm containers attached to swarm overlay networks.  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. \n","sig":null,"attributes":[{"value":"/ Read-only spec type for non-swarm containers attached to swarm overlay networks.  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216183,"byte_end":216523,"line_start":5665,"line_end":5665,"column_start":1,"column_end":341}}]},{"kind":"Field","id":{"krate":0,"index":13972},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216785,"byte_end":216797,"line_start":5671,"line_end":5671,"column_start":9,"column_end":21},"name":"container_id","qualname":"::models::TaskSpecNetworkAttachmentSpec::container_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":13971},"children":[],"decl_id":null,"docs":" ID of the container represented by this task\n","sig":null,"attributes":[{"value":"/ ID of the container represented by this task","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216639,"byte_end":216687,"line_start":5668,"line_end":5668,"column_start":5,"column_end":53}},{"value":"serde(rename = \"ContainerID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216692,"byte_end":216724,"line_start":5669,"line_end":5669,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216729,"byte_end":216776,"line_start":5670,"line_end":5670,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14030},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216898,"byte_end":216915,"line_start":5676,"line_end":5676,"column_start":12,"column_end":29},"name":"TaskSpecPlacement","qualname":"::models::TaskSpecPlacement","value":"TaskSpecPlacement { constraints, preferences, max_replicas, platforms }","parent":null,"children":[{"krate":0,"index":14031},{"krate":0,"index":14032},{"krate":0,"index":14033},{"krate":0,"index":14034}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14031},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218307,"byte_end":218318,"line_start":5680,"line_end":5680,"column_start":9,"column_end":20},"name":"constraints","qualname":"::models::TaskSpecPlacement::constraints","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":14030},"children":[],"decl_id":null,"docs":" An array of constraint expressions to limit the set of nodes where a task can be scheduled. Constraint expressions can either use a _match_ (`==`) or _exclude_ (`!=`) rule. Multiple constraints find nodes that satisfy every expression (AND match). Constraints can match node or Docker Engine labels as follows:  node attribute       | matches                        | example ---------------------|--------------------------------|----------------------------------------------- `node.id`            | Node ID                        | `node.id==2ivku8v2gvtg4` `node.hostname`      | Node hostname                  | `node.hostname!=node-2` `node.role`          | Node role (`manager`/`worker`) | `node.role==manager` `node.platform.os`   | Node operating system          | `node.platform.os==windows` `node.platform.arch` | Node architecture              | `node.platform.arch==x86_64` `node.labels`        | User-defined node labels       | `node.labels.security==high` `engine.labels`      | Docker Engine's labels         | `engine.labels.operatingsystem==ubuntu-14.04`  `engine.labels` apply to Docker Engine labels like operating system, drivers, etc. Swarm administrators add `node.labels` for operational purposes by using the [`node update endpoint`](#operation/NodeUpdate). \n","sig":null,"attributes":[{"value":"/ An array of constraint expressions to limit the set of nodes where a task can be scheduled. Constraint expressions can either use a _match_ (`==`) or _exclude_ (`!=`) rule. Multiple constraints find nodes that satisfy every expression (AND match). Constraints can match node or Docker Engine labels as follows:  node attribute       | matches                        | example ---------------------|--------------------------------|----------------------------------------------- `node.id`            | Node ID                        | `node.id==2ivku8v2gvtg4` `node.hostname`      | Node hostname                  | `node.hostname!=node-2` `node.role`          | Node role (`manager`/`worker`) | `node.role==manager` `node.platform.os`   | Node operating system          | `node.platform.os==windows` `node.platform.arch` | Node architecture              | `node.platform.arch==x86_64` `node.labels`        | User-defined node labels       | `node.labels.security==high` `engine.labels`      | Docker Engine's labels         | `engine.labels.operatingsystem==ubuntu-14.04`  `engine.labels` apply to Docker Engine labels like operating system, drivers, etc. Swarm administrators add `node.labels` for operational purposes by using the [`node update endpoint`](#operation/NodeUpdate). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":216922,"byte_end":218209,"line_start":5677,"line_end":5677,"column_start":5,"column_end":1292}},{"value":"serde(rename = \"Constraints\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218214,"byte_end":218246,"line_start":5678,"line_end":5678,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218251,"byte_end":218298,"line_start":5679,"line_end":5679,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14032},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218593,"byte_end":218604,"line_start":5685,"line_end":5685,"column_start":9,"column_end":20},"name":"preferences","qualname":"::models::TaskSpecPlacement::preferences","value":"std::option::Option<std::vec::Vec<models::TaskSpecPlacementPreferences>>","parent":{"krate":0,"index":14030},"children":[],"decl_id":null,"docs":" Preferences provide a way to make the scheduler aware of factors such as topology. They are provided in order from highest to lowest precedence. \n","sig":null,"attributes":[{"value":"/ Preferences provide a way to make the scheduler aware of factors such as topology. They are provided in order from highest to lowest precedence. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218346,"byte_end":218495,"line_start":5682,"line_end":5682,"column_start":5,"column_end":154}},{"value":"serde(rename = \"Preferences\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218500,"byte_end":218532,"line_start":5683,"line_end":5683,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218537,"byte_end":218584,"line_start":5684,"line_end":5684,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14033},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218837,"byte_end":218849,"line_start":5690,"line_end":5690,"column_start":9,"column_end":21},"name":"max_replicas","qualname":"::models::TaskSpecPlacement::max_replicas","value":"std::option::Option<i64>","parent":{"krate":0,"index":14030},"children":[],"decl_id":null,"docs":" Maximum number of replicas for per node (default value is 0, which is unlimited) \n","sig":null,"attributes":[{"value":"/ Maximum number of replicas for per node (default value is 0, which is unlimited) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218654,"byte_end":218739,"line_start":5687,"line_end":5687,"column_start":5,"column_end":90}},{"value":"serde(rename = \"MaxReplicas\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218744,"byte_end":218776,"line_start":5688,"line_end":5688,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218781,"byte_end":218828,"line_start":5689,"line_end":5689,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14034},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219188,"byte_end":219197,"line_start":5695,"line_end":5695,"column_start":9,"column_end":18},"name":"platforms","qualname":"::models::TaskSpecPlacement::platforms","value":"std::option::Option<std::vec::Vec<models::Platform>>","parent":{"krate":0,"index":14030},"children":[],"decl_id":null,"docs":" Platforms stores all the platforms that the service's image can run on. This field is used in the platform filter for scheduling. If empty, then the platform filter is off, meaning there are no scheduling restrictions. \n","sig":null,"attributes":[{"value":"/ Platforms stores all the platforms that the service's image can run on. This field is used in the platform filter for scheduling. If empty, then the platform filter is off, meaning there are no scheduling restrictions. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":218869,"byte_end":219092,"line_start":5692,"line_end":5692,"column_start":5,"column_end":228}},{"value":"serde(rename = \"Platforms\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219097,"byte_end":219127,"line_start":5693,"line_end":5693,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219132,"byte_end":219179,"line_start":5694,"line_end":5694,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14098},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219305,"byte_end":219333,"line_start":5700,"line_end":5700,"column_start":12,"column_end":40},"name":"TaskSpecPlacementPreferences","qualname":"::models::TaskSpecPlacementPreferences","value":"TaskSpecPlacementPreferences { spread }","parent":null,"children":[{"krate":0,"index":14099}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14099},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219428,"byte_end":219434,"line_start":5703,"line_end":5703,"column_start":9,"column_end":15},"name":"spread","qualname":"::models::TaskSpecPlacementPreferences::spread","value":"std::option::Option<models::TaskSpecPlacementSpread>","parent":{"krate":0,"index":14098},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spread\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219340,"byte_end":219367,"line_start":5701,"line_end":5701,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219372,"byte_end":219419,"line_start":5702,"line_end":5702,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14157},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219552,"byte_end":219575,"line_start":5708,"line_end":5708,"column_start":12,"column_end":35},"name":"TaskSpecPlacementSpread","qualname":"::models::TaskSpecPlacementSpread","value":"TaskSpecPlacementSpread { spread_descriptor }","parent":null,"children":[{"krate":0,"index":14158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14158},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219735,"byte_end":219752,"line_start":5712,"line_end":5712,"column_start":9,"column_end":26},"name":"spread_descriptor","qualname":"::models::TaskSpecPlacementSpread::spread_descriptor","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14157},"children":[],"decl_id":null,"docs":" label descriptor, such as `engine.labels.az`. \n","sig":null,"attributes":[{"value":"/ label descriptor, such as `engine.labels.az`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219582,"byte_end":219632,"line_start":5709,"line_end":5709,"column_start":5,"column_end":55}},{"value":"serde(rename = \"SpreadDescriptor\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219637,"byte_end":219674,"line_start":5710,"line_end":5710,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219679,"byte_end":219726,"line_start":5711,"line_end":5711,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14216},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220174,"byte_end":220192,"line_start":5718,"line_end":5718,"column_start":12,"column_end":30},"name":"TaskSpecPluginSpec","qualname":"::models::TaskSpecPluginSpec","value":"TaskSpecPluginSpec { name, remote, disabled, plugin_privilege }","parent":null,"children":[{"krate":0,"index":14217},{"krate":0,"index":14218},{"krate":0,"index":14219},{"krate":0,"index":14220}],"decl_id":null,"docs":" Plugin spec for the service.  *(Experimental release only.)*  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. \n","sig":null,"attributes":[{"value":"/ Plugin spec for the service.  *(Experimental release only.)*  <p><br /></p>  > **Note**: ContainerSpec, NetworkAttachmentSpec, and PluginSpec are > mutually exclusive. PluginSpec is only used when the Runtime field > is set to `plugin`. NetworkAttachmentSpec is used when the Runtime > field is set to `attachment`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":219774,"byte_end":220094,"line_start":5716,"line_end":5716,"column_start":1,"column_end":321}}]},{"kind":"Field","id":{"krate":0,"index":14217},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220336,"byte_end":220340,"line_start":5722,"line_end":5722,"column_start":9,"column_end":13},"name":"name","qualname":"::models::TaskSpecPluginSpec::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14216},"children":[],"decl_id":null,"docs":" The name or 'alias' to use for the plugin.\n","sig":null,"attributes":[{"value":"/ The name or 'alias' to use for the plugin.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220199,"byte_end":220245,"line_start":5719,"line_end":5719,"column_start":5,"column_end":51}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220250,"byte_end":220275,"line_start":5720,"line_end":5720,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220280,"byte_end":220327,"line_start":5721,"line_end":5721,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14218},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220494,"byte_end":220500,"line_start":5727,"line_end":5727,"column_start":9,"column_end":15},"name":"remote","qualname":"::models::TaskSpecPluginSpec::remote","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14216},"children":[],"decl_id":null,"docs":" The plugin image reference to use.\n","sig":null,"attributes":[{"value":"/ The plugin image reference to use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220363,"byte_end":220401,"line_start":5724,"line_end":5724,"column_start":5,"column_end":43}},{"value":"serde(rename = \"Remote\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220406,"byte_end":220433,"line_start":5725,"line_end":5725,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220438,"byte_end":220485,"line_start":5726,"line_end":5726,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14219},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220656,"byte_end":220664,"line_start":5732,"line_end":5732,"column_start":9,"column_end":17},"name":"disabled","qualname":"::models::TaskSpecPluginSpec::disabled","value":"std::option::Option<bool>","parent":{"krate":0,"index":14216},"children":[],"decl_id":null,"docs":" Disable the plugin once scheduled.\n","sig":null,"attributes":[{"value":"/ Disable the plugin once scheduled.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220523,"byte_end":220561,"line_start":5729,"line_end":5729,"column_start":5,"column_end":43}},{"value":"serde(rename = \"Disabled\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220566,"byte_end":220595,"line_start":5730,"line_end":5730,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220600,"byte_end":220647,"line_start":5731,"line_end":5731,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14220},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220782,"byte_end":220798,"line_start":5736,"line_end":5736,"column_start":9,"column_end":25},"name":"plugin_privilege","qualname":"::models::TaskSpecPluginSpec::plugin_privilege","value":"std::option::Option<std::vec::Vec<models::Body>>","parent":{"krate":0,"index":14216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PluginPrivilege\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220685,"byte_end":220721,"line_start":5734,"line_end":5734,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220726,"byte_end":220773,"line_start":5735,"line_end":5735,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14284},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221002,"byte_end":221019,"line_start":5742,"line_end":5742,"column_start":12,"column_end":29},"name":"TaskSpecResources","qualname":"::models::TaskSpecResources","value":"TaskSpecResources { limits, reservation }","parent":null,"children":[{"krate":0,"index":14285},{"krate":0,"index":14286}],"decl_id":null,"docs":" Resource requirements which apply to each individual container created as part of the service. \n","sig":null,"attributes":[{"value":"/ Resource requirements which apply to each individual container created as part of the service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":220823,"byte_end":220922,"line_start":5740,"line_end":5740,"column_start":1,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":14285},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221147,"byte_end":221153,"line_start":5746,"line_end":5746,"column_start":9,"column_end":15},"name":"limits","qualname":"::models::TaskSpecResources::limits","value":"std::option::Option<models::ResourceObject>","parent":{"krate":0,"index":14284},"children":[],"decl_id":null,"docs":" Define resources limits.\n","sig":null,"attributes":[{"value":"/ Define resources limits.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221026,"byte_end":221054,"line_start":5743,"line_end":5743,"column_start":5,"column_end":33}},{"value":"serde(rename = \"Limits\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221059,"byte_end":221086,"line_start":5744,"line_end":5744,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221091,"byte_end":221138,"line_start":5745,"line_end":5745,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14286},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221315,"byte_end":221326,"line_start":5751,"line_end":5751,"column_start":9,"column_end":20},"name":"reservation","qualname":"::models::TaskSpecResources::reservation","value":"std::option::Option<models::ResourceObject>","parent":{"krate":0,"index":14284},"children":[],"decl_id":null,"docs":" Define resources reservation.\n","sig":null,"attributes":[{"value":"/ Define resources reservation.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221184,"byte_end":221217,"line_start":5748,"line_end":5748,"column_start":5,"column_end":38}},{"value":"serde(rename = \"Reservation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221222,"byte_end":221254,"line_start":5749,"line_end":5749,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221259,"byte_end":221306,"line_start":5750,"line_end":5750,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14346},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221538,"byte_end":221559,"line_start":5757,"line_end":5757,"column_start":12,"column_end":33},"name":"TaskSpecRestartPolicy","qualname":"::models::TaskSpecRestartPolicy","value":"TaskSpecRestartPolicy { condition, delay, max_attempts, window }","parent":null,"children":[{"krate":0,"index":14347},{"krate":0,"index":14348},{"krate":0,"index":14349},{"krate":0,"index":14350}],"decl_id":null,"docs":" Specification for the restart policy which applies to containers created as part of this service. \n","sig":null,"attributes":[{"value":"/ Specification for the restart policy which applies to containers created as part of this service. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221356,"byte_end":221458,"line_start":5755,"line_end":5755,"column_start":1,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":14347},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221688,"byte_end":221697,"line_start":5761,"line_end":5761,"column_start":9,"column_end":18},"name":"condition","qualname":"::models::TaskSpecRestartPolicy::condition","value":"std::option::Option<models::TaskSpecRestartPolicyConditionEnum>","parent":{"krate":0,"index":14346},"children":[],"decl_id":null,"docs":" Condition for restart.\n","sig":null,"attributes":[{"value":"/ Condition for restart.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221566,"byte_end":221592,"line_start":5758,"line_end":5758,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Condition\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221597,"byte_end":221627,"line_start":5759,"line_end":5759,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221632,"byte_end":221679,"line_start":5760,"line_end":5760,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14348},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221875,"byte_end":221880,"line_start":5766,"line_end":5766,"column_start":9,"column_end":14},"name":"delay","qualname":"::models::TaskSpecRestartPolicy::delay","value":"std::option::Option<i64>","parent":{"krate":0,"index":14346},"children":[],"decl_id":null,"docs":" Delay between restart attempts.\n","sig":null,"attributes":[{"value":"/ Delay between restart attempts.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221748,"byte_end":221783,"line_start":5763,"line_end":5763,"column_start":5,"column_end":40}},{"value":"serde(rename = \"Delay\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221788,"byte_end":221814,"line_start":5764,"line_end":5764,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221819,"byte_end":221866,"line_start":5765,"line_end":5765,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14349},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222105,"byte_end":222117,"line_start":5771,"line_end":5771,"column_start":9,"column_end":21},"name":"max_attempts","qualname":"::models::TaskSpecRestartPolicy::max_attempts","value":"std::option::Option<i64>","parent":{"krate":0,"index":14346},"children":[],"decl_id":null,"docs":" Maximum attempts to restart a given container before giving up (default value is 0, which is ignored). \n","sig":null,"attributes":[{"value":"/ Maximum attempts to restart a given container before giving up (default value is 0, which is ignored). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":221900,"byte_end":222007,"line_start":5768,"line_end":5768,"column_start":5,"column_end":112}},{"value":"serde(rename = \"MaxAttempts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222012,"byte_end":222044,"line_start":5769,"line_end":5769,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222049,"byte_end":222096,"line_start":5770,"line_end":5770,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14350},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222339,"byte_end":222345,"line_start":5776,"line_end":5776,"column_start":9,"column_end":15},"name":"window","qualname":"::models::TaskSpecRestartPolicy::window","value":"std::option::Option<i64>","parent":{"krate":0,"index":14346},"children":[],"decl_id":null,"docs":" Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded). \n","sig":null,"attributes":[{"value":"/ Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222137,"byte_end":222246,"line_start":5773,"line_end":5773,"column_start":5,"column_end":114}},{"value":"serde(rename = \"Window\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222251,"byte_end":222278,"line_start":5774,"line_end":5774,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222283,"byte_end":222330,"line_start":5775,"line_end":5775,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14415},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222558,"byte_end":222563,"line_start":5784,"line_end":5784,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::TaskSpecRestartPolicyConditionEnum::EMPTY","value":"TaskSpecRestartPolicyConditionEnum::EMPTY","parent":{"krate":0,"index":14414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222532,"byte_end":222553,"line_start":5783,"line_end":5783,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14417},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222599,"byte_end":222603,"line_start":5786,"line_end":5786,"column_start":5,"column_end":9},"name":"NONE","qualname":"::models::TaskSpecRestartPolicyConditionEnum::NONE","value":"TaskSpecRestartPolicyConditionEnum::NONE","parent":{"krate":0,"index":14414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222569,"byte_end":222594,"line_start":5785,"line_end":5785,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14419},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222645,"byte_end":222655,"line_start":5788,"line_end":5788,"column_start":5,"column_end":15},"name":"ON_FAILURE","qualname":"::models::TaskSpecRestartPolicyConditionEnum::ON_FAILURE","value":"TaskSpecRestartPolicyConditionEnum::ON_FAILURE","parent":{"krate":0,"index":14414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"on-failure\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222609,"byte_end":222640,"line_start":5787,"line_end":5787,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14421},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222690,"byte_end":222693,"line_start":5790,"line_end":5790,"column_start":5,"column_end":8},"name":"ANY","qualname":"::models::TaskSpecRestartPolicyConditionEnum::ANY","value":"TaskSpecRestartPolicyConditionEnum::ANY","parent":{"krate":0,"index":14414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"any\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222661,"byte_end":222685,"line_start":5789,"line_end":5789,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":14414},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222490,"byte_end":222524,"line_start":5782,"line_end":5782,"column_start":10,"column_end":44},"name":"TaskSpecRestartPolicyConditionEnum","qualname":"::models::TaskSpecRestartPolicyConditionEnum","value":"pub enum TaskSpecRestartPolicyConditionEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"none\")]\n    NONE,\n\n    #[serde(rename = \"on-failure\")]\n    ON_FAILURE,\n\n    #[serde(rename = \"any\")]\n    ANY,\n}","parent":null,"children":[{"krate":0,"index":14415},{"krate":0,"index":14417},{"krate":0,"index":14419},{"krate":0,"index":14421}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222364,"byte_end":222394,"line_start":5780,"line_end":5780,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14488},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224464,"byte_end":224467,"line_start":5837,"line_end":5837,"column_start":5,"column_end":8},"name":"NEW","qualname":"::models::TaskState::NEW","value":"TaskState::NEW","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"new\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224435,"byte_end":224459,"line_start":5836,"line_end":5836,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14490},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224508,"byte_end":224517,"line_start":5839,"line_end":5839,"column_start":5,"column_end":14},"name":"ALLOCATED","qualname":"::models::TaskState::ALLOCATED","value":"TaskState::ALLOCATED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"allocated\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224473,"byte_end":224503,"line_start":5838,"line_end":5838,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14492},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224556,"byte_end":224563,"line_start":5841,"line_end":5841,"column_start":5,"column_end":12},"name":"PENDING","qualname":"::models::TaskState::PENDING","value":"TaskState::PENDING","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"pending\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224523,"byte_end":224551,"line_start":5840,"line_end":5840,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14494},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224603,"byte_end":224611,"line_start":5843,"line_end":5843,"column_start":5,"column_end":13},"name":"ASSIGNED","qualname":"::models::TaskState::ASSIGNED","value":"TaskState::ASSIGNED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"assigned\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224569,"byte_end":224598,"line_start":5842,"line_end":5842,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14496},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224651,"byte_end":224659,"line_start":5845,"line_end":5845,"column_start":5,"column_end":13},"name":"ACCEPTED","qualname":"::models::TaskState::ACCEPTED","value":"TaskState::ACCEPTED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"accepted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224617,"byte_end":224646,"line_start":5844,"line_end":5844,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14498},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224700,"byte_end":224709,"line_start":5847,"line_end":5847,"column_start":5,"column_end":14},"name":"PREPARING","qualname":"::models::TaskState::PREPARING","value":"TaskState::PREPARING","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"preparing\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224665,"byte_end":224695,"line_start":5846,"line_end":5846,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14500},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224746,"byte_end":224751,"line_start":5849,"line_end":5849,"column_start":5,"column_end":10},"name":"READY","qualname":"::models::TaskState::READY","value":"TaskState::READY","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ready\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224715,"byte_end":224741,"line_start":5848,"line_end":5848,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14502},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224791,"byte_end":224799,"line_start":5851,"line_end":5851,"column_start":5,"column_end":13},"name":"STARTING","qualname":"::models::TaskState::STARTING","value":"TaskState::STARTING","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"starting\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224757,"byte_end":224786,"line_start":5850,"line_end":5850,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14504},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224838,"byte_end":224845,"line_start":5853,"line_end":5853,"column_start":5,"column_end":12},"name":"RUNNING","qualname":"::models::TaskState::RUNNING","value":"TaskState::RUNNING","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"running\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224805,"byte_end":224833,"line_start":5852,"line_end":5852,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14506},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224885,"byte_end":224893,"line_start":5855,"line_end":5855,"column_start":5,"column_end":13},"name":"COMPLETE","qualname":"::models::TaskState::COMPLETE","value":"TaskState::COMPLETE","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"complete\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224851,"byte_end":224880,"line_start":5854,"line_end":5854,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14508},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224933,"byte_end":224941,"line_start":5857,"line_end":5857,"column_start":5,"column_end":13},"name":"SHUTDOWN","qualname":"::models::TaskState::SHUTDOWN","value":"TaskState::SHUTDOWN","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"shutdown\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224899,"byte_end":224928,"line_start":5856,"line_end":5856,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14510},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224979,"byte_end":224985,"line_start":5859,"line_end":5859,"column_start":5,"column_end":11},"name":"FAILED","qualname":"::models::TaskState::FAILED","value":"TaskState::FAILED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"failed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224947,"byte_end":224974,"line_start":5858,"line_end":5858,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14512},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225025,"byte_end":225033,"line_start":5861,"line_end":5861,"column_start":5,"column_end":13},"name":"REJECTED","qualname":"::models::TaskState::REJECTED","value":"TaskState::REJECTED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"rejected\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224991,"byte_end":225020,"line_start":5860,"line_end":5860,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14514},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225071,"byte_end":225077,"line_start":5863,"line_end":5863,"column_start":5,"column_end":11},"name":"REMOVE","qualname":"::models::TaskState::REMOVE","value":"TaskState::REMOVE","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"remove\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225039,"byte_end":225066,"line_start":5862,"line_end":5862,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14516},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225117,"byte_end":225125,"line_start":5865,"line_end":5865,"column_start":5,"column_end":13},"name":"ORPHANED","qualname":"::models::TaskState::ORPHANED","value":"TaskState::ORPHANED","parent":{"krate":0,"index":14487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"orphaned\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225083,"byte_end":225112,"line_start":5864,"line_end":5864,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":14487},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224418,"byte_end":224427,"line_start":5835,"line_end":5835,"column_start":10,"column_end":19},"name":"TaskState","qualname":"::models::TaskState","value":"pub enum TaskState {\n\n    #[serde(rename = \"new\")]\n    NEW,\n\n    #[serde(rename = \"allocated\")]\n    ALLOCATED,\n\n    #[serde(rename = \"pending\")]\n    PENDING,\n\n    #[serde(rename = \"assigned\")]\n    ASSIGNED,\n\n    #[serde(rename = \"accepted\")]\n    ACCEPTED,\n\n    #[serde(rename = \"preparing\")]\n    PREPARING,\n\n    #[serde(rename = \"ready\")]\n    READY,\n\n    #[serde(rename = \"starting\")]\n    STARTING,\n\n    #[serde(rename = \"running\")]\n    RUNNING,\n\n    #[serde(rename = \"complete\")]\n    COMPLETE,\n\n    #[serde(rename = \"shutdown\")]\n    SHUTDOWN,\n\n    #[serde(rename = \"failed\")]\n    FAILED,\n\n    #[serde(rename = \"rejected\")]\n    REJECTED,\n\n    #[serde(rename = \"remove\")]\n    REMOVE,\n\n    #[serde(rename = \"orphaned\")]\n    ORPHANED,\n}","parent":null,"children":[{"krate":0,"index":14488},{"krate":0,"index":14490},{"krate":0,"index":14492},{"krate":0,"index":14494},{"krate":0,"index":14496},{"krate":0,"index":14498},{"krate":0,"index":14500},{"krate":0,"index":14502},{"krate":0,"index":14504},{"krate":0,"index":14506},{"krate":0,"index":14508},{"krate":0,"index":14510},{"krate":0,"index":14512},{"krate":0,"index":14514},{"krate":0,"index":14516}],"decl_id":null,"docs":" Enumeration of values.\n Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`\n which helps with FFI.\n","sig":null,"attributes":[{"value":"/ Enumeration of values.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224132,"byte_end":224158,"line_start":5829,"line_end":5829,"column_start":1,"column_end":27}},{"value":"/ Since this enum's variants do not hold data, we can easily define them them as `#[repr(C)]`","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224159,"byte_end":224254,"line_start":5830,"line_end":5830,"column_start":1,"column_end":96}},{"value":"/ which helps with FFI.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224255,"byte_end":224280,"line_start":5831,"line_end":5831,"column_start":1,"column_end":26}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224281,"byte_end":224311,"line_start":5832,"line_end":5832,"column_start":1,"column_end":31}},{"value":"repr(C)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":224312,"byte_end":224322,"line_start":5833,"line_end":5833,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":14604},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227219,"byte_end":227229,"line_start":5915,"line_end":5915,"column_start":12,"column_end":22},"name":"TaskStatus","qualname":"::models::TaskStatus","value":"TaskStatus { timestamp, state, message, err, container_status }","parent":null,"children":[{"krate":0,"index":14605},{"krate":0,"index":14606},{"krate":0,"index":14607},{"krate":0,"index":14608},{"krate":0,"index":14609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14605},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227327,"byte_end":227336,"line_start":5918,"line_end":5918,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::models::TaskStatus::timestamp","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":14604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Timestamp\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227236,"byte_end":227266,"line_start":5916,"line_end":5916,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227271,"byte_end":227318,"line_start":5917,"line_end":5917,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14606},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227453,"byte_end":227458,"line_start":5922,"line_end":5922,"column_start":9,"column_end":14},"name":"state","qualname":"::models::TaskStatus::state","value":"std::option::Option<models::TaskState>","parent":{"krate":0,"index":14604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"State\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227366,"byte_end":227392,"line_start":5920,"line_end":5920,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227397,"byte_end":227444,"line_start":5921,"line_end":5921,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14607},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227573,"byte_end":227580,"line_start":5926,"line_end":5926,"column_start":9,"column_end":16},"name":"message","qualname":"::models::TaskStatus::message","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Message\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227484,"byte_end":227512,"line_start":5924,"line_end":5924,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227517,"byte_end":227564,"line_start":5925,"line_end":5925,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14608},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227688,"byte_end":227691,"line_start":5930,"line_end":5930,"column_start":9,"column_end":12},"name":"err","qualname":"::models::TaskStatus::err","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Err\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227603,"byte_end":227627,"line_start":5928,"line_end":5928,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227632,"byte_end":227679,"line_start":5929,"line_end":5929,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14609},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227811,"byte_end":227827,"line_start":5934,"line_end":5934,"column_start":9,"column_end":25},"name":"container_status","qualname":"::models::TaskStatus::container_status","value":"std::option::Option<models::TaskStatusContainerStatus>","parent":{"krate":0,"index":14604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerStatus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227714,"byte_end":227750,"line_start":5932,"line_end":5932,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227755,"byte_end":227802,"line_start":5933,"line_end":5933,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14675},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227947,"byte_end":227972,"line_start":5939,"line_end":5939,"column_start":12,"column_end":37},"name":"TaskStatusContainerStatus","qualname":"::models::TaskStatusContainerStatus","value":"TaskStatusContainerStatus { container_id, pid, exit_code }","parent":null,"children":[{"krate":0,"index":14676},{"krate":0,"index":14677},{"krate":0,"index":14678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14676},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228072,"byte_end":228084,"line_start":5942,"line_end":5942,"column_start":9,"column_end":21},"name":"container_id","qualname":"::models::TaskStatusContainerStatus::container_id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ContainerID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":227979,"byte_end":228011,"line_start":5940,"line_end":5940,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228016,"byte_end":228063,"line_start":5941,"line_end":5941,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14677},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228192,"byte_end":228195,"line_start":5946,"line_end":5946,"column_start":9,"column_end":12},"name":"pid","qualname":"::models::TaskStatusContainerStatus::pid","value":"std::option::Option<i64>","parent":{"krate":0,"index":14675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228107,"byte_end":228131,"line_start":5944,"line_end":5944,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228136,"byte_end":228183,"line_start":5945,"line_end":5945,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14678},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228305,"byte_end":228314,"line_start":5950,"line_end":5950,"column_start":9,"column_end":18},"name":"exit_code","qualname":"::models::TaskStatusContainerStatus::exit_code","value":"std::option::Option<i64>","parent":{"krate":0,"index":14675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"ExitCode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228215,"byte_end":228244,"line_start":5948,"line_end":5948,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228249,"byte_end":228296,"line_start":5949,"line_end":5949,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14740},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228412,"byte_end":228426,"line_start":5955,"line_end":5955,"column_start":12,"column_end":26},"name":"ThrottleDevice","qualname":"::models::ThrottleDevice","value":"ThrottleDevice { path, rate }","parent":null,"children":[{"krate":0,"index":14741},{"krate":0,"index":14742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14741},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228539,"byte_end":228543,"line_start":5959,"line_end":5959,"column_start":9,"column_end":13},"name":"path","qualname":"::models::ThrottleDevice::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14740},"children":[],"decl_id":null,"docs":" Device path\n","sig":null,"attributes":[{"value":"/ Device path","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228433,"byte_end":228448,"line_start":5956,"line_end":5956,"column_start":5,"column_end":20}},{"value":"serde(rename = \"Path\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228453,"byte_end":228478,"line_start":5957,"line_end":5957,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228483,"byte_end":228530,"line_start":5958,"line_end":5958,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14742},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228665,"byte_end":228669,"line_start":5964,"line_end":5964,"column_start":9,"column_end":13},"name":"rate","qualname":"::models::ThrottleDevice::rate","value":"std::option::Option<i64>","parent":{"krate":0,"index":14740},"children":[],"decl_id":null,"docs":" Rate\n","sig":null,"attributes":[{"value":"/ Rate","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228566,"byte_end":228574,"line_start":5961,"line_end":5961,"column_start":5,"column_end":13}},{"value":"serde(rename = \"Rate\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228579,"byte_end":228604,"line_start":5962,"line_end":5962,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228609,"byte_end":228656,"line_start":5963,"line_end":5963,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14802},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228863,"byte_end":228870,"line_start":5970,"line_end":5970,"column_start":12,"column_end":19},"name":"TlsInfo","qualname":"::models::TlsInfo","value":"TlsInfo { trust_root, cert_issuer_subject, cert_issuer_public_key }","parent":null,"children":[{"krate":0,"index":14803},{"krate":0,"index":14804},{"krate":0,"index":14805}],"decl_id":null,"docs":" Information about the issuer of leaf TLS certificates and the trusted root CA certificate. \n","sig":null,"attributes":[{"value":"/ Information about the issuer of leaf TLS certificates and the trusted root CA certificate. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228688,"byte_end":228783,"line_start":5968,"line_end":5968,"column_start":1,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":14803},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229053,"byte_end":229063,"line_start":5974,"line_end":5974,"column_start":9,"column_end":19},"name":"trust_root","qualname":"::models::TlsInfo::trust_root","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14802},"children":[],"decl_id":null,"docs":" The root CA certificate(s) that are used to validate leaf TLS certificates. \n","sig":null,"attributes":[{"value":"/ The root CA certificate(s) that are used to validate leaf TLS certificates. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228877,"byte_end":228957,"line_start":5971,"line_end":5971,"column_start":5,"column_end":85}},{"value":"serde(rename = \"TrustRoot\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228962,"byte_end":228992,"line_start":5972,"line_end":5972,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":228997,"byte_end":229044,"line_start":5973,"line_end":5973,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14804},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229254,"byte_end":229273,"line_start":5979,"line_end":5979,"column_start":9,"column_end":28},"name":"cert_issuer_subject","qualname":"::models::TlsInfo::cert_issuer_subject","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14802},"children":[],"decl_id":null,"docs":" The base64-url-safe-encoded raw subject bytes of the issuer.\n","sig":null,"attributes":[{"value":"/ The base64-url-safe-encoded raw subject bytes of the issuer.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229086,"byte_end":229150,"line_start":5976,"line_end":5976,"column_start":5,"column_end":69}},{"value":"serde(rename = \"CertIssuerSubject\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229155,"byte_end":229193,"line_start":5977,"line_end":5977,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229198,"byte_end":229245,"line_start":5978,"line_end":5978,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14805},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229470,"byte_end":229492,"line_start":5984,"line_end":5984,"column_start":9,"column_end":31},"name":"cert_issuer_public_key","qualname":"::models::TlsInfo::cert_issuer_public_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14802},"children":[],"decl_id":null,"docs":" The base64-url-safe-encoded raw public key bytes of the issuer. \n","sig":null,"attributes":[{"value":"/ The base64-url-safe-encoded raw public key bytes of the issuer. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229296,"byte_end":229364,"line_start":5981,"line_end":5981,"column_start":5,"column_end":73}},{"value":"serde(rename = \"CertIssuerPublicKey\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229369,"byte_end":229409,"line_start":5982,"line_end":5982,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229414,"byte_end":229461,"line_start":5983,"line_end":5983,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14867},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229593,"byte_end":229610,"line_start":5989,"line_end":5989,"column_start":12,"column_end":29},"name":"UnlockKeyResponse","qualname":"::models::UnlockKeyResponse","value":"UnlockKeyResponse { unlock_key }","parent":null,"children":[{"krate":0,"index":14868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14868},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229740,"byte_end":229750,"line_start":5993,"line_end":5993,"column_start":9,"column_end":19},"name":"unlock_key","qualname":"::models::UnlockKeyResponse::unlock_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":14867},"children":[],"decl_id":null,"docs":" The swarm's unlock key.\n","sig":null,"attributes":[{"value":"/ The swarm's unlock key.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229617,"byte_end":229644,"line_start":5990,"line_end":5990,"column_start":5,"column_end":32}},{"value":"serde(rename = \"UnlockKey\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229649,"byte_end":229679,"line_start":5991,"line_end":5991,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229684,"byte_end":229731,"line_start":5992,"line_end":5992,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":14926},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229851,"byte_end":229857,"line_start":5998,"line_end":5998,"column_start":12,"column_end":18},"name":"Volume","qualname":"::models::Volume","value":"Volume { name, driver, mountpoint, created_at, status, labels, scope, options, usage_data }","parent":null,"children":[{"krate":0,"index":14927},{"krate":0,"index":14928},{"krate":0,"index":14929},{"krate":0,"index":14930},{"krate":0,"index":14931},{"krate":0,"index":14932},{"krate":0,"index":14933},{"krate":0,"index":14934},{"krate":0,"index":14935}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14927},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229926,"byte_end":229930,"line_start":6001,"line_end":6001,"column_start":9,"column_end":13},"name":"name","qualname":"::models::Volume::name","value":"std::string::String","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" Name of the volume.\n","sig":null,"attributes":[{"value":"/ Name of the volume.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229864,"byte_end":229887,"line_start":5999,"line_end":5999,"column_start":5,"column_end":28}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229892,"byte_end":229917,"line_start":6000,"line_end":6000,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":14928},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230035,"byte_end":230041,"line_start":6005,"line_end":6005,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::Volume::driver","value":"std::string::String","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" Name of the volume driver used by the volume.\n","sig":null,"attributes":[{"value":"/ Name of the volume driver used by the volume.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229945,"byte_end":229994,"line_start":6003,"line_end":6003,"column_start":5,"column_end":54}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":229999,"byte_end":230026,"line_start":6004,"line_end":6004,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":14929},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230142,"byte_end":230152,"line_start":6009,"line_end":6009,"column_start":9,"column_end":19},"name":"mountpoint","qualname":"::models::Volume::mountpoint","value":"std::string::String","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" Mount path of the volume on the host.\n","sig":null,"attributes":[{"value":"/ Mount path of the volume on the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230056,"byte_end":230097,"line_start":6007,"line_end":6007,"column_start":5,"column_end":46}},{"value":"serde(rename = \"Mountpoint\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230102,"byte_end":230133,"line_start":6008,"line_end":6008,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":14930},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230300,"byte_end":230310,"line_start":6014,"line_end":6014,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Volume::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" Date/Time the volume was created.\n","sig":null,"attributes":[{"value":"/ Date/Time the volume was created.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230167,"byte_end":230204,"line_start":6011,"line_end":6011,"column_start":5,"column_end":42}},{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230209,"byte_end":230239,"line_start":6012,"line_end":6012,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230244,"byte_end":230291,"line_start":6013,"line_end":6013,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14931},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230699,"byte_end":230705,"line_start":6019,"line_end":6019,"column_start":9,"column_end":15},"name":"status","qualname":"::models::Volume::status","value":"std::option::Option<std::collections::HashMap<std::string::String, std::collections::HashMap<(), ()>>>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" Low-level details about the volume, provided by the volume driver. Details are returned as a map with key/value pairs: `{\\\"key\\\":\\\"value\\\",\\\"key2\\\":\\\"value2\\\"}`.  The `Status` field is optional, and is omitted if the volume driver does not support this feature. \n","sig":null,"attributes":[{"value":"/ Low-level details about the volume, provided by the volume driver. Details are returned as a map with key/value pairs: `{\\\"key\\\":\\\"value\\\",\\\"key2\\\":\\\"value2\\\"}`.  The `Status` field is optional, and is omitted if the volume driver does not support this feature. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230340,"byte_end":230606,"line_start":6016,"line_end":6016,"column_start":5,"column_end":271}},{"value":"serde(rename = \"Status\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230611,"byte_end":230638,"line_start":6017,"line_end":6017,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230643,"byte_end":230690,"line_start":6018,"line_end":6018,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":14932},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230894,"byte_end":230900,"line_start":6024,"line_end":6024,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::Volume::labels","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230754,"byte_end":230790,"line_start":6021,"line_end":6021,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230795,"byte_end":230822,"line_start":6022,"line_end":6022,"column_start":5,"column_end":32}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_map\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230827,"byte_end":230885,"line_start":6023,"line_end":6023,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":14933},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231192,"byte_end":231197,"line_start":6030,"line_end":6030,"column_start":9,"column_end":14},"name":"scope","qualname":"::models::Volume::scope","value":"std::option::Option<models::VolumeScopeEnum>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" The level at which the volume exists. Either `global` for cluster-wide, or `local` for machine level. \n","sig":null,"attributes":[{"value":"/ The level at which the volume exists. Either `global` for cluster-wide, or `local` for machine level. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":230932,"byte_end":231038,"line_start":6026,"line_end":6026,"column_start":5,"column_end":111}},{"value":"serde(rename = \"Scope\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231043,"byte_end":231069,"line_start":6027,"line_end":6027,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231074,"byte_end":231121,"line_start":6028,"line_end":6028,"column_start":5,"column_end":52}},{"value":"serde(with = \"serde_with::rust::string_empty_as_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231126,"byte_end":231183,"line_start":6029,"line_end":6029,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":14934},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231397,"byte_end":231404,"line_start":6035,"line_end":6035,"column_start":9,"column_end":16},"name":"options","qualname":"::models::Volume::options","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":" The driver specific options used when creating the volume. \n","sig":null,"attributes":[{"value":"/ The driver specific options used when creating the volume. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231229,"byte_end":231292,"line_start":6032,"line_end":6032,"column_start":5,"column_end":68}},{"value":"serde(rename = \"Options\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231297,"byte_end":231325,"line_start":6033,"line_end":6033,"column_start":5,"column_end":33}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_map\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231330,"byte_end":231388,"line_start":6034,"line_end":6034,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":14935},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231527,"byte_end":231537,"line_start":6039,"line_end":6039,"column_start":9,"column_end":19},"name":"usage_data","qualname":"::models::Volume::usage_data","value":"std::option::Option<models::VolumeUsageData>","parent":{"krate":0,"index":14926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"UsageData\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231436,"byte_end":231466,"line_start":6037,"line_end":6037,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231471,"byte_end":231518,"line_start":6038,"line_end":6038,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15075},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231743,"byte_end":231748,"line_start":6047,"line_end":6047,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::VolumeScopeEnum::EMPTY","value":"VolumeScopeEnum::EMPTY","parent":{"krate":0,"index":15074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231717,"byte_end":231738,"line_start":6046,"line_end":6046,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15077},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231785,"byte_end":231790,"line_start":6049,"line_end":6049,"column_start":5,"column_end":10},"name":"LOCAL","qualname":"::models::VolumeScopeEnum::LOCAL","value":"VolumeScopeEnum::LOCAL","parent":{"krate":0,"index":15074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"local\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231754,"byte_end":231780,"line_start":6048,"line_end":6048,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15079},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231828,"byte_end":231834,"line_start":6051,"line_end":6051,"column_start":5,"column_end":11},"name":"GLOBAL","qualname":"::models::VolumeScopeEnum::GLOBAL","value":"VolumeScopeEnum::GLOBAL","parent":{"krate":0,"index":15074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"global\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231796,"byte_end":231823,"line_start":6050,"line_end":6050,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":15074},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231694,"byte_end":231709,"line_start":6045,"line_end":6045,"column_start":10,"column_end":25},"name":"VolumeScopeEnum","qualname":"::models::VolumeScopeEnum","value":"pub enum VolumeScopeEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"local\")]\n    LOCAL,\n\n    #[serde(rename = \"global\")]\n    GLOBAL,\n}","parent":null,"children":[{"krate":0,"index":15075},{"krate":0,"index":15077},{"krate":0,"index":15079}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231568,"byte_end":231598,"line_start":6043,"line_end":6043,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":15143},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232924,"byte_end":232936,"line_start":6089,"line_end":6089,"column_start":12,"column_end":24},"name":"VolumeConfig","qualname":"::models::VolumeConfig","value":"VolumeConfig { name, driver, driver_opts, labels }","parent":null,"children":[{"krate":0,"index":15144},{"krate":0,"index":15145},{"krate":0,"index":15146},{"krate":0,"index":15147}],"decl_id":null,"docs":" Volume configuration\n","sig":null,"attributes":[{"value":"/ Volume configuration","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232820,"byte_end":232844,"line_start":6087,"line_end":6087,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":15144},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233104,"byte_end":233108,"line_start":6093,"line_end":6093,"column_start":9,"column_end":13},"name":"name","qualname":"::models::VolumeConfig::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15143},"children":[],"decl_id":null,"docs":" The new volume's name. If not specified, Docker generates a name. \n","sig":null,"attributes":[{"value":"/ The new volume's name. If not specified, Docker generates a name. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232943,"byte_end":233013,"line_start":6090,"line_end":6090,"column_start":5,"column_end":75}},{"value":"serde(rename = \"Name\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233018,"byte_end":233043,"line_start":6091,"line_end":6091,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233048,"byte_end":233095,"line_start":6092,"line_end":6092,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15145},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233261,"byte_end":233267,"line_start":6098,"line_end":6098,"column_start":9,"column_end":15},"name":"driver","qualname":"::models::VolumeConfig::driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15143},"children":[],"decl_id":null,"docs":" Name of the volume driver to use.\n","sig":null,"attributes":[{"value":"/ Name of the volume driver to use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233131,"byte_end":233168,"line_start":6095,"line_end":6095,"column_start":5,"column_end":42}},{"value":"serde(rename = \"Driver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233173,"byte_end":233200,"line_start":6096,"line_end":6096,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233205,"byte_end":233252,"line_start":6097,"line_end":6097,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15146},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233504,"byte_end":233515,"line_start":6103,"line_end":6103,"column_start":9,"column_end":20},"name":"driver_opts","qualname":"::models::VolumeConfig::driver_opts","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":15143},"children":[],"decl_id":null,"docs":" A mapping of driver options and values. These options are passed directly to the driver and are driver specific. \n","sig":null,"attributes":[{"value":"/ A mapping of driver options and values. These options are passed directly to the driver and are driver specific. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233290,"byte_end":233407,"line_start":6100,"line_end":6100,"column_start":5,"column_end":122}},{"value":"serde(rename = \"DriverOpts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233412,"byte_end":233443,"line_start":6101,"line_end":6101,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233448,"byte_end":233495,"line_start":6102,"line_end":6102,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15147},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233684,"byte_end":233690,"line_start":6108,"line_end":6108,"column_start":9,"column_end":15},"name":"labels","qualname":"::models::VolumeConfig::labels","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":15143},"children":[],"decl_id":null,"docs":" User-defined key/value metadata.\n","sig":null,"attributes":[{"value":"/ User-defined key/value metadata.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233555,"byte_end":233591,"line_start":6105,"line_end":6105,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Labels\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233596,"byte_end":233623,"line_start":6106,"line_end":6106,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233628,"byte_end":233675,"line_start":6107,"line_end":6107,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":15211},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233833,"byte_end":233851,"line_start":6114,"line_end":6114,"column_start":12,"column_end":30},"name":"VolumeListResponse","qualname":"::models::VolumeListResponse","value":"VolumeListResponse { volumes, warnings }","parent":null,"children":[{"krate":0,"index":15212},{"krate":0,"index":15213}],"decl_id":null,"docs":" Volume list response\n","sig":null,"attributes":[{"value":"/ Volume list response","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233729,"byte_end":233753,"line_start":6112,"line_end":6112,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":15212},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233982,"byte_end":233989,"line_start":6118,"line_end":6118,"column_start":9,"column_end":16},"name":"volumes","qualname":"::models::VolumeListResponse::volumes","value":"std::vec::Vec<models::Volume>","parent":{"krate":0,"index":15211},"children":[],"decl_id":null,"docs":" List of volumes\n","sig":null,"attributes":[{"value":"/ List of volumes","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233858,"byte_end":233877,"line_start":6115,"line_end":6115,"column_start":5,"column_end":24}},{"value":"serde(rename = \"Volumes\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233882,"byte_end":233910,"line_start":6116,"line_end":6116,"column_start":5,"column_end":33}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":233915,"byte_end":233973,"line_start":6117,"line_end":6117,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":15213},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234177,"byte_end":234185,"line_start":6123,"line_end":6123,"column_start":9,"column_end":17},"name":"warnings","qualname":"::models::VolumeListResponse::warnings","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":15211},"children":[],"decl_id":null,"docs":" Warnings that occurred when fetching the list of volumes. \n","sig":null,"attributes":[{"value":"/ Warnings that occurred when fetching the list of volumes. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234009,"byte_end":234071,"line_start":6120,"line_end":6120,"column_start":5,"column_end":67}},{"value":"serde(rename = \"Warnings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234076,"byte_end":234105,"line_start":6121,"line_end":6121,"column_start":5,"column_end":34}},{"value":"serde(deserialize_with = \"deserialize_nonoptional_vec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234110,"byte_end":234168,"line_start":6122,"line_end":6122,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":15311},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234283,"byte_end":234302,"line_start":6128,"line_end":6128,"column_start":12,"column_end":31},"name":"VolumePruneResponse","qualname":"::models::VolumePruneResponse","value":"VolumePruneResponse { volumes_deleted, space_reclaimed }","parent":null,"children":[{"krate":0,"index":15312},{"krate":0,"index":15313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":15312},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234439,"byte_end":234454,"line_start":6132,"line_end":6132,"column_start":9,"column_end":24},"name":"volumes_deleted","qualname":"::models::VolumePruneResponse::volumes_deleted","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15311},"children":[],"decl_id":null,"docs":" Volumes that were deleted\n","sig":null,"attributes":[{"value":"/ Volumes that were deleted","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234309,"byte_end":234338,"line_start":6129,"line_end":6129,"column_start":5,"column_end":34}},{"value":"serde(rename = \"VolumesDeleted\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234343,"byte_end":234378,"line_start":6130,"line_end":6130,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234383,"byte_end":234430,"line_start":6131,"line_end":6131,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15313},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234616,"byte_end":234631,"line_start":6137,"line_end":6137,"column_start":9,"column_end":24},"name":"space_reclaimed","qualname":"::models::VolumePruneResponse::space_reclaimed","value":"std::option::Option<i64>","parent":{"krate":0,"index":15311},"children":[],"decl_id":null,"docs":" Disk space reclaimed in bytes\n","sig":null,"attributes":[{"value":"/ Disk space reclaimed in bytes","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234482,"byte_end":234515,"line_start":6134,"line_end":6134,"column_start":5,"column_end":38}},{"value":"serde(rename = \"SpaceReclaimed\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234520,"byte_end":234555,"line_start":6135,"line_end":6135,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234560,"byte_end":234607,"line_start":6136,"line_end":6136,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":15373},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234857,"byte_end":234872,"line_start":6143,"line_end":6143,"column_start":12,"column_end":27},"name":"VolumeUsageData","qualname":"::models::VolumeUsageData","value":"VolumeUsageData { size, ref_count }","parent":null,"children":[{"krate":0,"index":15374},{"krate":0,"index":15375}],"decl_id":null,"docs":" Usage details about the volume. This information is used by the `GET /system/df` endpoint, and omitted in other endpoints. \n","sig":null,"attributes":[{"value":"/ Usage details about the volume. This information is used by the `GET /system/df` endpoint, and omitted in other endpoints. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234650,"byte_end":234777,"line_start":6141,"line_end":6141,"column_start":1,"column_end":128}}]},{"kind":"Field","id":{"krate":0,"index":15374},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235158,"byte_end":235162,"line_start":6146,"line_end":6146,"column_start":9,"column_end":13},"name":"size","qualname":"::models::VolumeUsageData::size","value":"i64","parent":{"krate":0,"index":15373},"children":[],"decl_id":null,"docs":" Amount of disk space used by the volume (in bytes). This information is only available for volumes created with the `\\\"local\\\"` volume driver. For volumes created with other volume drivers, this field is set to `-1` (\\\"not available\\\") \n","sig":null,"attributes":[{"value":"/ Amount of disk space used by the volume (in bytes). This information is only available for volumes created with the `\\\"local\\\"` volume driver. For volumes created with other volume drivers, this field is set to `-1` (\\\"not available\\\") ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":234879,"byte_end":235119,"line_start":6144,"line_end":6144,"column_start":5,"column_end":245}},{"value":"serde(rename = \"Size\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235124,"byte_end":235149,"line_start":6145,"line_end":6145,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":15375},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235338,"byte_end":235347,"line_start":6150,"line_end":6150,"column_start":9,"column_end":18},"name":"ref_count","qualname":"::models::VolumeUsageData::ref_count","value":"i64","parent":{"krate":0,"index":15373},"children":[],"decl_id":null,"docs":" The number of containers referencing this volume. This field is set to `-1` if the reference-count is not available. \n","sig":null,"attributes":[{"value":"/ The number of containers referencing this volume. This field is set to `-1` if the reference-count is not available. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235174,"byte_end":235295,"line_start":6148,"line_end":6148,"column_start":5,"column_end":126}},{"value":"serde(rename = \"RefCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235300,"byte_end":235329,"line_start":6149,"line_end":6149,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15435},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235508,"byte_end":235518,"line_start":6156,"line_end":6156,"column_start":12,"column_end":22},"name":"HostConfig","qualname":"::models::HostConfig","value":"HostConfig { cpu_shares, memory, cgroup_parent, blkio_weight, blkio_weight_device, blkio_device_read_bps, blkio_device_write_bps, blkio_device_read_i_ops, blkio_device_write_i_ops, cpu_period, cpu_quota, cpu_realtime_period, cpu_realtime_runtime, cpuset_cpus, cpuset_mems, devices, device_cgroup_rules, device_requests, kernel_memory, kernel_memory_tcp, memory_reservation, memory_swap, memory_swappiness, nano_cp_us, oom_kill_disable, init, pids_limit, ulimits, cpu_count, cpu_percent, io_maximum_i_ops, io_maximum_bandwidth, binds, container_id_file, log_config, network_mode, port_bindings, restart_policy, auto_remove, volume_driver, volumes_from, mounts, capabilities, cap_add, cap_drop, dns, dns_options, dns_search, extra_hosts, group_add, ipc_mode, cgroup, links, oom_score_adj, pid_mode, privileged, publish_all_ports, readonly_rootfs, security_opt, storage_opt, tmpfs, uts_mode, userns_mode, shm_size, sysctls, runtime, console_size, isolation, masked_paths, readonly_paths }","parent":null,"children":[{"krate":0,"index":15436},{"krate":0,"index":15437},{"krate":0,"index":15438},{"krate":0,"index":15439},{"krate":0,"index":15440},{"krate":0,"index":15441},{"krate":0,"index":15442},{"krate":0,"index":15443},{"krate":0,"index":15444},{"krate":0,"index":15445},{"krate":0,"index":15446},{"krate":0,"index":15447},{"krate":0,"index":15448},{"krate":0,"index":15449},{"krate":0,"index":15450},{"krate":0,"index":15451},{"krate":0,"index":15452},{"krate":0,"index":15453},{"krate":0,"index":15454},{"krate":0,"index":15455},{"krate":0,"index":15456},{"krate":0,"index":15457},{"krate":0,"index":15458},{"krate":0,"index":15459},{"krate":0,"index":15460},{"krate":0,"index":15461},{"krate":0,"index":15462},{"krate":0,"index":15463},{"krate":0,"index":15464},{"krate":0,"index":15465},{"krate":0,"index":15466},{"krate":0,"index":15467},{"krate":0,"index":15468},{"krate":0,"index":15469},{"krate":0,"index":15470},{"krate":0,"index":15471},{"krate":0,"index":15472},{"krate":0,"index":15473},{"krate":0,"index":15474},{"krate":0,"index":15475},{"krate":0,"index":15476},{"krate":0,"index":15477},{"krate":0,"index":15478},{"krate":0,"index":15479},{"krate":0,"index":15480},{"krate":0,"index":15481},{"krate":0,"index":15482},{"krate":0,"index":15483},{"krate":0,"index":15484},{"krate":0,"index":15485},{"krate":0,"index":15486},{"krate":0,"index":15487},{"krate":0,"index":15488},{"krate":0,"index":15489},{"krate":0,"index":15490},{"krate":0,"index":15491},{"krate":0,"index":15492},{"krate":0,"index":15493},{"krate":0,"index":15494},{"krate":0,"index":15495},{"krate":0,"index":15496},{"krate":0,"index":15497},{"krate":0,"index":15498},{"krate":0,"index":15499},{"krate":0,"index":15500},{"krate":0,"index":15501},{"krate":0,"index":15502},{"krate":0,"index":15503},{"krate":0,"index":15504},{"krate":0,"index":15505}],"decl_id":null,"docs":" Container configuration that depends on the host we are running on\n","sig":null,"attributes":[{"value":"/ Container configuration that depends on the host we are running on","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235358,"byte_end":235428,"line_start":6154,"line_end":6154,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":15436},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235717,"byte_end":235727,"line_start":6160,"line_end":6160,"column_start":9,"column_end":19},"name":"cpu_shares","qualname":"::models::HostConfig::cpu_shares","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" An integer value representing this container's relative CPU weight versus other containers. \n","sig":null,"attributes":[{"value":"/ An integer value representing this container's relative CPU weight versus other containers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235525,"byte_end":235621,"line_start":6157,"line_end":6157,"column_start":5,"column_end":101}},{"value":"serde(rename = \"CpuShares\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235626,"byte_end":235656,"line_start":6158,"line_end":6158,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235661,"byte_end":235708,"line_start":6159,"line_end":6159,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15437},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235866,"byte_end":235872,"line_start":6165,"line_end":6165,"column_start":9,"column_end":15},"name":"memory","qualname":"::models::HostConfig::memory","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Memory limit in bytes.\n","sig":null,"attributes":[{"value":"/ Memory limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235747,"byte_end":235773,"line_start":6162,"line_end":6162,"column_start":5,"column_end":31}},{"value":"serde(rename = \"Memory\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235778,"byte_end":235805,"line_start":6163,"line_end":6163,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235810,"byte_end":235857,"line_start":6164,"line_end":6164,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15438},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236222,"byte_end":236235,"line_start":6170,"line_end":6170,"column_start":9,"column_end":22},"name":"cgroup_parent","qualname":"::models::HostConfig::cgroup_parent","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist. \n","sig":null,"attributes":[{"value":"/ Path to `cgroups` under which the container's `cgroup` is created. If the path is not absolute, the path is considered to be relative to the `cgroups` path of the init process. Cgroups are created if they do not already exist. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":235892,"byte_end":236123,"line_start":6167,"line_end":6167,"column_start":5,"column_end":236}},{"value":"serde(rename = \"CgroupParent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236128,"byte_end":236161,"line_start":6168,"line_end":6168,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236166,"byte_end":236213,"line_start":6169,"line_end":6169,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15439},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236394,"byte_end":236406,"line_start":6175,"line_end":6175,"column_start":9,"column_end":21},"name":"blkio_weight","qualname":"::models::HostConfig::blkio_weight","value":"std::option::Option<u16>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Block IO weight (relative weight).\n","sig":null,"attributes":[{"value":"/ Block IO weight (relative weight).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236258,"byte_end":236296,"line_start":6172,"line_end":6172,"column_start":5,"column_end":43}},{"value":"serde(rename = \"BlkioWeight\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236301,"byte_end":236333,"line_start":6173,"line_end":6173,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236338,"byte_end":236385,"line_start":6174,"line_end":6174,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15440},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236647,"byte_end":236666,"line_start":6180,"line_end":6180,"column_start":9,"column_end":28},"name":"blkio_weight_device","qualname":"::models::HostConfig::blkio_weight_device","value":"std::option::Option<std::vec::Vec<models::ResourcesBlkioWeightDevice>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Block IO weight (relative device weight) in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Weight\\\": weight}] ``` \n","sig":null,"attributes":[{"value":"/ Block IO weight (relative device weight) in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Weight\\\": weight}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236426,"byte_end":236543,"line_start":6177,"line_end":6177,"column_start":5,"column_end":122}},{"value":"serde(rename = \"BlkioWeightDevice\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236548,"byte_end":236586,"line_start":6178,"line_end":6178,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236591,"byte_end":236638,"line_start":6179,"line_end":6179,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15441},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236941,"byte_end":236962,"line_start":6185,"line_end":6185,"column_start":9,"column_end":30},"name":"blkio_device_read_bps","qualname":"::models::HostConfig::blkio_device_read_bps","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Limit read rate (bytes per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit read rate (bytes per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236714,"byte_end":236836,"line_start":6182,"line_end":6182,"column_start":5,"column_end":127}},{"value":"serde(rename = \"BlkioDeviceReadBps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236841,"byte_end":236880,"line_start":6183,"line_end":6183,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236885,"byte_end":236932,"line_start":6184,"line_end":6184,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15442},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237225,"byte_end":237247,"line_start":6190,"line_end":6190,"column_start":9,"column_end":31},"name":"blkio_device_write_bps","qualname":"::models::HostConfig::blkio_device_write_bps","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Limit write rate (bytes per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit write rate (bytes per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":236998,"byte_end":237119,"line_start":6187,"line_end":6187,"column_start":5,"column_end":126}},{"value":"serde(rename = \"BlkioDeviceWriteBps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237124,"byte_end":237164,"line_start":6188,"line_end":6188,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237169,"byte_end":237216,"line_start":6189,"line_end":6189,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15443},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237508,"byte_end":237531,"line_start":6195,"line_end":6195,"column_start":9,"column_end":32},"name":"blkio_device_read_i_ops","qualname":"::models::HostConfig::blkio_device_read_i_ops","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Limit read rate (IO per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit read rate (IO per second) from a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237283,"byte_end":237402,"line_start":6192,"line_end":6192,"column_start":5,"column_end":124}},{"value":"serde(rename = \"BlkioDeviceReadIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237407,"byte_end":237447,"line_start":6193,"line_end":6193,"column_start":5,"column_end":45}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237452,"byte_end":237499,"line_start":6194,"line_end":6194,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15444},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237792,"byte_end":237816,"line_start":6200,"line_end":6200,"column_start":9,"column_end":33},"name":"blkio_device_write_i_ops","qualname":"::models::HostConfig::blkio_device_write_i_ops","value":"std::option::Option<std::vec::Vec<models::ThrottleDevice>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Limit write rate (IO per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` \n","sig":null,"attributes":[{"value":"/ Limit write rate (IO per second) to a device, in the form:  ``` [{\\\"Path\\\": \\\"device_path\\\", \\\"Rate\\\": rate}] ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237567,"byte_end":237685,"line_start":6197,"line_end":6197,"column_start":5,"column_end":123}},{"value":"serde(rename = \"BlkioDeviceWriteIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237690,"byte_end":237731,"line_start":6198,"line_end":6198,"column_start":5,"column_end":46}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237736,"byte_end":237783,"line_start":6199,"line_end":6199,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15445},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237995,"byte_end":238005,"line_start":6205,"line_end":6205,"column_start":9,"column_end":19},"name":"cpu_period","qualname":"::models::HostConfig::cpu_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The length of a CPU period in microseconds.\n","sig":null,"attributes":[{"value":"/ The length of a CPU period in microseconds.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237852,"byte_end":237899,"line_start":6202,"line_end":6202,"column_start":5,"column_end":52}},{"value":"serde(rename = \"CpuPeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237904,"byte_end":237934,"line_start":6203,"line_end":6203,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":237939,"byte_end":237986,"line_start":6204,"line_end":6204,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15446},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238193,"byte_end":238202,"line_start":6210,"line_end":6210,"column_start":9,"column_end":18},"name":"cpu_quota","qualname":"::models::HostConfig::cpu_quota","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Microseconds of CPU time that the container can get in a CPU period. \n","sig":null,"attributes":[{"value":"/ Microseconds of CPU time that the container can get in a CPU period. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238025,"byte_end":238098,"line_start":6207,"line_end":6207,"column_start":5,"column_end":78}},{"value":"serde(rename = \"CpuQuota\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238103,"byte_end":238132,"line_start":6208,"line_end":6208,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238137,"byte_end":238184,"line_start":6209,"line_end":6209,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15447},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238443,"byte_end":238462,"line_start":6215,"line_end":6215,"column_start":9,"column_end":28},"name":"cpu_realtime_period","qualname":"::models::HostConfig::cpu_realtime_period","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. \n","sig":null,"attributes":[{"value":"/ The length of a CPU real-time period in microseconds. Set to 0 to allocate no time allocated to real-time tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238222,"byte_end":238339,"line_start":6212,"line_end":6212,"column_start":5,"column_end":122}},{"value":"serde(rename = \"CpuRealtimePeriod\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238344,"byte_end":238382,"line_start":6213,"line_end":6213,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238387,"byte_end":238434,"line_start":6214,"line_end":6214,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15448},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238705,"byte_end":238725,"line_start":6220,"line_end":6220,"column_start":9,"column_end":29},"name":"cpu_realtime_runtime","qualname":"::models::HostConfig::cpu_realtime_runtime","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. \n","sig":null,"attributes":[{"value":"/ The length of a CPU real-time runtime in microseconds. Set to 0 to allocate no time allocated to real-time tasks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238482,"byte_end":238600,"line_start":6217,"line_end":6217,"column_start":5,"column_end":123}},{"value":"serde(rename = \"CpuRealtimeRuntime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238605,"byte_end":238644,"line_start":6218,"line_end":6218,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238649,"byte_end":238696,"line_start":6219,"line_end":6219,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15449},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238901,"byte_end":238912,"line_start":6225,"line_end":6225,"column_start":9,"column_end":20},"name":"cpuset_cpus","qualname":"::models::HostConfig::cpuset_cpus","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" CPUs in which to allow execution (e.g., `0-3`, `0,1`). \n","sig":null,"attributes":[{"value":"/ CPUs in which to allow execution (e.g., `0-3`, `0,1`). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238745,"byte_end":238804,"line_start":6222,"line_end":6222,"column_start":5,"column_end":64}},{"value":"serde(rename = \"CpusetCpus\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238809,"byte_end":238840,"line_start":6223,"line_end":6223,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238845,"byte_end":238892,"line_start":6224,"line_end":6224,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15450},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239128,"byte_end":239139,"line_start":6230,"line_end":6230,"column_start":9,"column_end":20},"name":"cpuset_mems","qualname":"::models::HostConfig::cpuset_mems","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. \n","sig":null,"attributes":[{"value":"/ Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":238935,"byte_end":239031,"line_start":6227,"line_end":6227,"column_start":5,"column_end":101}},{"value":"serde(rename = \"CpusetMems\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239036,"byte_end":239067,"line_start":6228,"line_end":6228,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239072,"byte_end":239119,"line_start":6229,"line_end":6229,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15451},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239302,"byte_end":239309,"line_start":6235,"line_end":6235,"column_start":9,"column_end":16},"name":"devices","qualname":"::models::HostConfig::devices","value":"std::option::Option<std::vec::Vec<models::DeviceMapping>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of devices to add to the container.\n","sig":null,"attributes":[{"value":"/ A list of devices to add to the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239162,"byte_end":239208,"line_start":6232,"line_end":6232,"column_start":5,"column_end":51}},{"value":"serde(rename = \"Devices\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239213,"byte_end":239241,"line_start":6233,"line_end":6233,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239246,"byte_end":239293,"line_start":6234,"line_end":6234,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15452},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239500,"byte_end":239519,"line_start":6240,"line_end":6240,"column_start":9,"column_end":28},"name":"device_cgroup_rules","qualname":"::models::HostConfig::device_cgroup_rules","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" a list of cgroup rules to apply to the container\n","sig":null,"attributes":[{"value":"/ a list of cgroup rules to apply to the container","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239344,"byte_end":239396,"line_start":6237,"line_end":6237,"column_start":5,"column_end":57}},{"value":"serde(rename = \"DeviceCgroupRules\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239401,"byte_end":239439,"line_start":6238,"line_end":6238,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239444,"byte_end":239491,"line_start":6239,"line_end":6239,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15453},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239713,"byte_end":239728,"line_start":6245,"line_end":6245,"column_start":9,"column_end":24},"name":"device_requests","qualname":"::models::HostConfig::device_requests","value":"std::option::Option<std::vec::Vec<models::DeviceRequest>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of requests for devices to be sent to device drivers. \n","sig":null,"attributes":[{"value":"/ A list of requests for devices to be sent to device drivers. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239547,"byte_end":239612,"line_start":6242,"line_end":6242,"column_start":5,"column_end":70}},{"value":"serde(rename = \"DeviceRequests\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239617,"byte_end":239652,"line_start":6243,"line_end":6243,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239657,"byte_end":239704,"line_start":6244,"line_end":6244,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15454},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239895,"byte_end":239908,"line_start":6250,"line_end":6250,"column_start":9,"column_end":22},"name":"kernel_memory","qualname":"::models::HostConfig::kernel_memory","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Kernel memory limit in bytes.\n","sig":null,"attributes":[{"value":"/ Kernel memory limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239763,"byte_end":239796,"line_start":6247,"line_end":6247,"column_start":5,"column_end":38}},{"value":"serde(rename = \"KernelMemory\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239801,"byte_end":239834,"line_start":6248,"line_end":6248,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239839,"byte_end":239886,"line_start":6249,"line_end":6249,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15455},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240085,"byte_end":240102,"line_start":6255,"line_end":6255,"column_start":9,"column_end":26},"name":"kernel_memory_tcp","qualname":"::models::HostConfig::kernel_memory_tcp","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Hard limit for kernel TCP buffer memory (in bytes).\n","sig":null,"attributes":[{"value":"/ Hard limit for kernel TCP buffer memory (in bytes).","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239928,"byte_end":239983,"line_start":6252,"line_end":6252,"column_start":5,"column_end":60}},{"value":"serde(rename = \"KernelMemoryTCP\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":239988,"byte_end":240024,"line_start":6253,"line_end":6253,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240029,"byte_end":240076,"line_start":6254,"line_end":6254,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15456},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240257,"byte_end":240275,"line_start":6260,"line_end":6260,"column_start":9,"column_end":27},"name":"memory_reservation","qualname":"::models::HostConfig::memory_reservation","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Memory soft limit in bytes.\n","sig":null,"attributes":[{"value":"/ Memory soft limit in bytes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240122,"byte_end":240153,"line_start":6257,"line_end":6257,"column_start":5,"column_end":36}},{"value":"serde(rename = \"MemoryReservation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240158,"byte_end":240196,"line_start":6258,"line_end":6258,"column_start":5,"column_end":43}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240201,"byte_end":240248,"line_start":6259,"line_end":6259,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15457},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240470,"byte_end":240481,"line_start":6265,"line_end":6265,"column_start":9,"column_end":20},"name":"memory_swap","qualname":"::models::HostConfig::memory_swap","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Total memory limit (memory + swap). Set as `-1` to enable unlimited swap. \n","sig":null,"attributes":[{"value":"/ Total memory limit (memory + swap). Set as `-1` to enable unlimited swap. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240295,"byte_end":240373,"line_start":6262,"line_end":6262,"column_start":5,"column_end":83}},{"value":"serde(rename = \"MemorySwap\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240378,"byte_end":240409,"line_start":6263,"line_end":6263,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240414,"byte_end":240461,"line_start":6264,"line_end":6264,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15458},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240693,"byte_end":240710,"line_start":6270,"line_end":6270,"column_start":9,"column_end":26},"name":"memory_swappiness","qualname":"::models::HostConfig::memory_swappiness","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100. \n","sig":null,"attributes":[{"value":"/ Tune a container's memory swappiness behavior. Accepts an integer between 0 and 100. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240501,"byte_end":240590,"line_start":6267,"line_end":6267,"column_start":5,"column_end":94}},{"value":"serde(rename = \"MemorySwappiness\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240595,"byte_end":240632,"line_start":6268,"line_end":6268,"column_start":5,"column_end":42}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240637,"byte_end":240684,"line_start":6269,"line_end":6269,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15459},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240872,"byte_end":240882,"line_start":6275,"line_end":6275,"column_start":9,"column_end":19},"name":"nano_cp_us","qualname":"::models::HostConfig::nano_cp_us","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" CPU quota in units of 10<sup>-9</sup> CPUs.\n","sig":null,"attributes":[{"value":"/ CPU quota in units of 10<sup>-9</sup> CPUs.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240730,"byte_end":240777,"line_start":6272,"line_end":6272,"column_start":5,"column_end":52}},{"value":"serde(rename = \"NanoCPUs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240782,"byte_end":240811,"line_start":6273,"line_end":6273,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240816,"byte_end":240863,"line_start":6274,"line_end":6274,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15460},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241044,"byte_end":241060,"line_start":6280,"line_end":6280,"column_start":9,"column_end":25},"name":"oom_kill_disable","qualname":"::models::HostConfig::oom_kill_disable","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Disable OOM Killer for the container.\n","sig":null,"attributes":[{"value":"/ Disable OOM Killer for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240902,"byte_end":240943,"line_start":6277,"line_end":6277,"column_start":5,"column_end":46}},{"value":"serde(rename = \"OomKillDisable\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240948,"byte_end":240983,"line_start":6278,"line_end":6278,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":240988,"byte_end":241035,"line_start":6279,"line_end":6279,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15461},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241339,"byte_end":241343,"line_start":6285,"line_end":6285,"column_start":9,"column_end":13},"name":"init","qualname":"::models::HostConfig::init","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. \n","sig":null,"attributes":[{"value":"/ Run an init inside the container that forwards signals and reaps processes. This field is omitted if empty, and the default (as configured on the daemon) is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241081,"byte_end":241248,"line_start":6282,"line_end":6282,"column_start":5,"column_end":172}},{"value":"serde(rename = \"Init\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241253,"byte_end":241278,"line_start":6283,"line_end":6283,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241283,"byte_end":241330,"line_start":6284,"line_end":6284,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15462},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241551,"byte_end":241561,"line_start":6290,"line_end":6290,"column_start":9,"column_end":19},"name":"pids_limit","qualname":"::models::HostConfig::pids_limit","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change. \n","sig":null,"attributes":[{"value":"/ Tune a container's PIDs limit. Set `0` or `-1` for unlimited, or `null` to not change. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241364,"byte_end":241455,"line_start":6287,"line_end":6287,"column_start":5,"column_end":96}},{"value":"serde(rename = \"PidsLimit\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241460,"byte_end":241490,"line_start":6288,"line_end":6288,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241495,"byte_end":241542,"line_start":6289,"line_end":6289,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15463},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241807,"byte_end":241814,"line_start":6295,"line_end":6295,"column_start":9,"column_end":16},"name":"ulimits","qualname":"::models::HostConfig::ulimits","value":"std::option::Option<std::vec::Vec<models::ResourcesUlimits>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of resource limits to set in the container. For example:  ``` {\\\"Name\\\": \\\"nofile\\\", \\\"Soft\\\": 1024, \\\"Hard\\\": 2048} ``` \n","sig":null,"attributes":[{"value":"/ A list of resource limits to set in the container. For example:  ``` {\\\"Name\\\": \\\"nofile\\\", \\\"Soft\\\": 1024, \\\"Hard\\\": 2048} ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241581,"byte_end":241713,"line_start":6292,"line_end":6292,"column_start":5,"column_end":137}},{"value":"serde(rename = \"Ulimits\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241718,"byte_end":241746,"line_start":6293,"line_end":6293,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241751,"byte_end":241798,"line_start":6294,"line_end":6294,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15464},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242166,"byte_end":242175,"line_start":6300,"line_end":6300,"column_start":9,"column_end":18},"name":"cpu_count","qualname":"::models::HostConfig::cpu_count","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. \n","sig":null,"attributes":[{"value":"/ The number of usable CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":241852,"byte_end":242071,"line_start":6297,"line_end":6297,"column_start":5,"column_end":224}},{"value":"serde(rename = \"CpuCount\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242076,"byte_end":242105,"line_start":6298,"line_end":6298,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242110,"byte_end":242157,"line_start":6299,"line_end":6299,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15465},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242529,"byte_end":242540,"line_start":6305,"line_end":6305,"column_start":9,"column_end":20},"name":"cpu_percent","qualname":"::models::HostConfig::cpu_percent","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. \n","sig":null,"attributes":[{"value":"/ The usable percentage of the available CPUs (Windows only).  On Windows Server containers, the processor resource controls are mutually exclusive. The order of precedence is `CPUCount` first, then `CPUShares`, and `CPUPercent` last. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242195,"byte_end":242432,"line_start":6302,"line_end":6302,"column_start":5,"column_end":242}},{"value":"serde(rename = \"CpuPercent\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242437,"byte_end":242468,"line_start":6303,"line_end":6303,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242473,"byte_end":242520,"line_start":6304,"line_end":6304,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15466},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242722,"byte_end":242738,"line_start":6310,"line_end":6310,"column_start":9,"column_end":25},"name":"io_maximum_i_ops","qualname":"::models::HostConfig::io_maximum_i_ops","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Maximum IOps for the container system drive (Windows only)\n","sig":null,"attributes":[{"value":"/ Maximum IOps for the container system drive (Windows only)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242560,"byte_end":242622,"line_start":6307,"line_end":6307,"column_start":5,"column_end":67}},{"value":"serde(rename = \"IOMaximumIOps\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242627,"byte_end":242661,"line_start":6308,"line_end":6308,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242666,"byte_end":242713,"line_start":6309,"line_end":6309,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15467},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242945,"byte_end":242965,"line_start":6315,"line_end":6315,"column_start":9,"column_end":29},"name":"io_maximum_bandwidth","qualname":"::models::HostConfig::io_maximum_bandwidth","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Maximum IO in bytes per second for the container system drive (Windows only). \n","sig":null,"attributes":[{"value":"/ Maximum IO in bytes per second for the container system drive (Windows only). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242758,"byte_end":242840,"line_start":6312,"line_end":6312,"column_start":5,"column_end":87}},{"value":"serde(rename = \"IOMaximumBandwidth\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242845,"byte_end":242884,"line_start":6313,"line_end":6313,"column_start":5,"column_end":44}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242889,"byte_end":242936,"line_start":6314,"line_end":6314,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15468},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245144,"byte_end":245149,"line_start":6320,"line_end":6320,"column_start":9,"column_end":14},"name":"binds","qualname":"::models::HostConfig::binds","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of volume bindings for this container. Each volume binding is a string in one of these forms:  - `host-src:container-dest[:options]` to bind-mount a host path   into the container. Both `host-src`, and `container-dest` must   be an _absolute_ path. - `volume-name:container-dest[:options]` to bind-mount a volume   managed by a volume driver into the container. `container-dest`   must be an _absolute_ path.  `options` is an optional, comma-delimited list of:  - `nocopy` disables automatic copying of data from the container   path to the volume. The `nocopy` flag only applies to named volumes. - `[ro|rw]` mounts a volume read-only or read-write, respectively.   If omitted or set to `rw`, volumes are mounted read-write. - `[z|Z]` applies SELinux labels to allow or deny multiple containers   to read and write to the same volume.     - `z`: a _shared_ content label is applied to the content. This       label indicates that multiple containers can share the volume       content, for both reading and writing.     - `Z`: a _private unshared_ label is applied to the content.       This label indicates that only the current container can use       a private volume. Labeling systems such as SELinux require       proper labels to be placed on volume content that is mounted       into a container. Without a label, the security system can       prevent a container's processes from using the content. By       default, the labels set by the host operating system are not       modified. - `[[r]shared|[r]slave|[r]private]` specifies mount   [propagation behavior](https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt).   This only applies to bind-mounted volumes, not internal volumes   or named volumes. Mount propagation requires the source mount   point (the location where the source directory is mounted in the   host operating system) to have the correct propagation properties.   For shared volumes, the source mount point must be set to `shared`.   For slave volumes, the mount must be set to either `shared` or   `slave`. \n","sig":null,"attributes":[{"value":"/ A list of volume bindings for this container. Each volume binding is a string in one of these forms:  - `host-src:container-dest[:options]` to bind-mount a host path   into the container. Both `host-src`, and `container-dest` must   be an _absolute_ path. - `volume-name:container-dest[:options]` to bind-mount a volume   managed by a volume driver into the container. `container-dest`   must be an _absolute_ path.  `options` is an optional, comma-delimited list of:  - `nocopy` disables automatic copying of data from the container   path to the volume. The `nocopy` flag only applies to named volumes. - `[ro|rw]` mounts a volume read-only or read-write, respectively.   If omitted or set to `rw`, volumes are mounted read-write. - `[z|Z]` applies SELinux labels to allow or deny multiple containers   to read and write to the same volume.     - `z`: a _shared_ content label is applied to the content. This       label indicates that multiple containers can share the volume       content, for both reading and writing.     - `Z`: a _private unshared_ label is applied to the content.       This label indicates that only the current container can use       a private volume. Labeling systems such as SELinux require       proper labels to be placed on volume content that is mounted       into a container. Without a label, the security system can       prevent a container's processes from using the content. By       default, the labels set by the host operating system are not       modified. - `[[r]shared|[r]slave|[r]private]` specifies mount   [propagation behavior](https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt).   This only applies to bind-mounted volumes, not internal volumes   or named volumes. Mount propagation requires the source mount   point (the location where the source directory is mounted in the   host operating system) to have the correct propagation properties.   For shared volumes, the source mount point must be set to `shared`.   For slave volumes, the mount must be set to either `shared` or   `slave`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":242985,"byte_end":245052,"line_start":6317,"line_end":6317,"column_start":5,"column_end":2072}},{"value":"serde(rename = \"Binds\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245057,"byte_end":245083,"line_start":6318,"line_end":6318,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245088,"byte_end":245135,"line_start":6319,"line_end":6319,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15469},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245331,"byte_end":245348,"line_start":6325,"line_end":6325,"column_start":9,"column_end":26},"name":"container_id_file","qualname":"::models::HostConfig::container_id_file","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Path to a file where the container ID is written\n","sig":null,"attributes":[{"value":"/ Path to a file where the container ID is written","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245177,"byte_end":245229,"line_start":6322,"line_end":6322,"column_start":5,"column_end":57}},{"value":"serde(rename = \"ContainerIDFile\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245234,"byte_end":245270,"line_start":6323,"line_end":6323,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245275,"byte_end":245322,"line_start":6324,"line_end":6324,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15470},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245462,"byte_end":245472,"line_start":6329,"line_end":6329,"column_start":9,"column_end":19},"name":"log_config","qualname":"::models::HostConfig::log_config","value":"std::option::Option<models::HostConfigLogConfig>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"LogConfig\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245371,"byte_end":245401,"line_start":6327,"line_end":6327,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245406,"byte_end":245453,"line_start":6328,"line_end":6328,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15471},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245829,"byte_end":245841,"line_start":6334,"line_end":6334,"column_start":9,"column_end":21},"name":"network_mode","qualname":"::models::HostConfig::network_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Network mode to use for this container. Supported standard values are: `bridge`, `host`, `none`, and `container:<name|id>`. Any other value is taken as a custom network's name to which this container should connect to. \n","sig":null,"attributes":[{"value":"/ Network mode to use for this container. Supported standard values are: `bridge`, `host`, `none`, and `container:<name|id>`. Any other value is taken as a custom network's name to which this container should connect to. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245508,"byte_end":245731,"line_start":6331,"line_end":6331,"column_start":5,"column_end":228}},{"value":"serde(rename = \"NetworkMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245736,"byte_end":245768,"line_start":6332,"line_end":6332,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245773,"byte_end":245820,"line_start":6333,"line_end":6333,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15472},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245958,"byte_end":245971,"line_start":6338,"line_end":6338,"column_start":9,"column_end":22},"name":"port_bindings","qualname":"::models::HostConfig::port_bindings","value":"std::option::Option<std::collections::HashMap<std::string::String, std::option::Option<std::vec::Vec<models::PortBinding>>>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"PortBindings\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245864,"byte_end":245897,"line_start":6336,"line_end":6336,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245902,"byte_end":245949,"line_start":6337,"line_end":6337,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15473},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246090,"byte_end":246104,"line_start":6342,"line_end":6342,"column_start":9,"column_end":23},"name":"restart_policy","qualname":"::models::HostConfig::restart_policy","value":"std::option::Option<models::RestartPolicy>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"RestartPolicy\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":245995,"byte_end":246029,"line_start":6340,"line_end":6340,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246034,"byte_end":246081,"line_start":6341,"line_end":6341,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15474},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246352,"byte_end":246363,"line_start":6347,"line_end":6347,"column_start":9,"column_end":20},"name":"auto_remove","qualname":"::models::HostConfig::auto_remove","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Automatically remove the container when the container's process exits. This has no effect if `RestartPolicy` is set. \n","sig":null,"attributes":[{"value":"/ Automatically remove the container when the container's process exits. This has no effect if `RestartPolicy` is set. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246134,"byte_end":246255,"line_start":6344,"line_end":6344,"column_start":5,"column_end":126}},{"value":"serde(rename = \"AutoRemove\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246260,"byte_end":246291,"line_start":6345,"line_end":6345,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246296,"byte_end":246343,"line_start":6346,"line_end":6346,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15475},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246536,"byte_end":246549,"line_start":6352,"line_end":6352,"column_start":9,"column_end":22},"name":"volume_driver","qualname":"::models::HostConfig::volume_driver","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Driver that this container uses to mount volumes.\n","sig":null,"attributes":[{"value":"/ Driver that this container uses to mount volumes.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246384,"byte_end":246437,"line_start":6349,"line_end":6349,"column_start":5,"column_end":58}},{"value":"serde(rename = \"VolumeDriver\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246442,"byte_end":246475,"line_start":6350,"line_end":6350,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246480,"byte_end":246527,"line_start":6351,"line_end":6351,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15476},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246779,"byte_end":246791,"line_start":6357,"line_end":6357,"column_start":9,"column_end":21},"name":"volumes_from","qualname":"::models::HostConfig::volumes_from","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of volumes to inherit from another container, specified in the form `<container name>[:<ro|rw>]`. \n","sig":null,"attributes":[{"value":"/ A list of volumes to inherit from another container, specified in the form `<container name>[:<ro|rw>]`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246572,"byte_end":246681,"line_start":6354,"line_end":6354,"column_start":5,"column_end":114}},{"value":"serde(rename = \"VolumesFrom\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246686,"byte_end":246718,"line_start":6355,"line_end":6355,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246723,"byte_end":246770,"line_start":6356,"line_end":6356,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15477},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246971,"byte_end":246977,"line_start":6362,"line_end":6362,"column_start":9,"column_end":15},"name":"mounts","qualname":"::models::HostConfig::mounts","value":"std::option::Option<std::vec::Vec<models::Mount>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Specification for mounts to be added to the container. \n","sig":null,"attributes":[{"value":"/ Specification for mounts to be added to the container. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246819,"byte_end":246878,"line_start":6359,"line_end":6359,"column_start":5,"column_end":64}},{"value":"serde(rename = \"Mounts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246883,"byte_end":246910,"line_start":6360,"line_end":6360,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":246915,"byte_end":246962,"line_start":6361,"line_end":6361,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15478},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247250,"byte_end":247262,"line_start":6367,"line_end":6367,"column_start":9,"column_end":21},"name":"capabilities","qualname":"::models::HostConfig::capabilities","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of kernel capabilities to be available for container (this overrides the default set).  Conflicts with options 'CapAdd' and 'CapDrop'\\\" \n","sig":null,"attributes":[{"value":"/ A list of kernel capabilities to be available for container (this overrides the default set).  Conflicts with options 'CapAdd' and 'CapDrop'\\\" ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247004,"byte_end":247151,"line_start":6364,"line_end":6364,"column_start":5,"column_end":152}},{"value":"serde(rename = \"Capabilities\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247156,"byte_end":247189,"line_start":6365,"line_end":6365,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247194,"byte_end":247241,"line_start":6366,"line_end":6366,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15479},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247480,"byte_end":247487,"line_start":6372,"line_end":6372,"column_start":9,"column_end":16},"name":"cap_add","qualname":"::models::HostConfig::cap_add","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of kernel capabilities to add to the container. Conflicts with option 'Capabilities'. \n","sig":null,"attributes":[{"value":"/ A list of kernel capabilities to add to the container. Conflicts with option 'Capabilities'. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247290,"byte_end":247387,"line_start":6369,"line_end":6369,"column_start":5,"column_end":102}},{"value":"serde(rename = \"CapAdd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247392,"byte_end":247419,"line_start":6370,"line_end":6370,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247424,"byte_end":247471,"line_start":6371,"line_end":6371,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15480},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247709,"byte_end":247717,"line_start":6377,"line_end":6377,"column_start":9,"column_end":17},"name":"cap_drop","qualname":"::models::HostConfig::cap_drop","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of kernel capabilities to drop from the container. Conflicts with option 'Capabilities'. \n","sig":null,"attributes":[{"value":"/ A list of kernel capabilities to drop from the container. Conflicts with option 'Capabilities'. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247515,"byte_end":247615,"line_start":6374,"line_end":6374,"column_start":5,"column_end":105}},{"value":"serde(rename = \"CapDrop\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247620,"byte_end":247648,"line_start":6375,"line_end":6375,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247653,"byte_end":247700,"line_start":6376,"line_end":6376,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15481},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247886,"byte_end":247889,"line_start":6382,"line_end":6382,"column_start":9,"column_end":12},"name":"dns","qualname":"::models::HostConfig::dns","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of DNS servers for the container to use.\n","sig":null,"attributes":[{"value":"/ A list of DNS servers for the container to use.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247745,"byte_end":247796,"line_start":6379,"line_end":6379,"column_start":5,"column_end":56}},{"value":"serde(rename = \"Dns\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247801,"byte_end":247825,"line_start":6380,"line_end":6380,"column_start":5,"column_end":29}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247830,"byte_end":247877,"line_start":6381,"line_end":6381,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15482},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248040,"byte_end":248051,"line_start":6387,"line_end":6387,"column_start":9,"column_end":20},"name":"dns_options","qualname":"::models::HostConfig::dns_options","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of DNS options.\n","sig":null,"attributes":[{"value":"/ A list of DNS options.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247917,"byte_end":247943,"line_start":6384,"line_end":6384,"column_start":5,"column_end":31}},{"value":"serde(rename = \"DnsOptions\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247948,"byte_end":247979,"line_start":6385,"line_end":6385,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":247984,"byte_end":248031,"line_start":6386,"line_end":6386,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15483},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248208,"byte_end":248218,"line_start":6392,"line_end":6392,"column_start":9,"column_end":19},"name":"dns_search","qualname":"::models::HostConfig::dns_search","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of DNS search domains.\n","sig":null,"attributes":[{"value":"/ A list of DNS search domains.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248079,"byte_end":248112,"line_start":6389,"line_end":6389,"column_start":5,"column_end":38}},{"value":"serde(rename = \"DnsSearch\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248117,"byte_end":248147,"line_start":6390,"line_end":6390,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248152,"byte_end":248199,"line_start":6391,"line_end":6391,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15484},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248467,"byte_end":248478,"line_start":6397,"line_end":6397,"column_start":9,"column_end":20},"name":"extra_hosts","qualname":"::models::HostConfig::extra_hosts","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of hostnames/IP mappings to add to the container's `/etc/hosts` file. Specified in the form `[\\\"hostname:IP\\\"]`. \n","sig":null,"attributes":[{"value":"/ A list of hostnames/IP mappings to add to the container's `/etc/hosts` file. Specified in the form `[\\\"hostname:IP\\\"]`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248246,"byte_end":248370,"line_start":6394,"line_end":6394,"column_start":5,"column_end":129}},{"value":"serde(rename = \"ExtraHosts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248375,"byte_end":248406,"line_start":6395,"line_end":6395,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248411,"byte_end":248458,"line_start":6396,"line_end":6396,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15485},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248673,"byte_end":248682,"line_start":6402,"line_end":6402,"column_start":9,"column_end":18},"name":"group_add","qualname":"::models::HostConfig::group_add","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of additional groups that the container process will run as. \n","sig":null,"attributes":[{"value":"/ A list of additional groups that the container process will run as. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248506,"byte_end":248578,"line_start":6399,"line_end":6399,"column_start":5,"column_end":77}},{"value":"serde(rename = \"GroupAdd\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248583,"byte_end":248612,"line_start":6400,"line_end":6400,"column_start":5,"column_end":34}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248617,"byte_end":248664,"line_start":6401,"line_end":6401,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15486},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249349,"byte_end":249357,"line_start":6407,"line_end":6407,"column_start":9,"column_end":17},"name":"ipc_mode","qualname":"::models::HostConfig::ipc_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" IPC sharing mode for the container. Possible values are:  - `\\\"none\\\"`: own private IPC namespace, with /dev/shm not mounted - `\\\"private\\\"`: own private IPC namespace - `\\\"shareable\\\"`: own private IPC namespace, with a possibility to share it with other containers - `\\\"container:<name|id>\\\"`: join another (shareable) container's IPC namespace - `\\\"host\\\"`: use the host system's IPC namespace  If not specified, daemon default is used, which can either be `\\\"private\\\"` or `\\\"shareable\\\"`, depending on daemon version and configuration. \n","sig":null,"attributes":[{"value":"/ IPC sharing mode for the container. Possible values are:  - `\\\"none\\\"`: own private IPC namespace, with /dev/shm not mounted - `\\\"private\\\"`: own private IPC namespace - `\\\"shareable\\\"`: own private IPC namespace, with a possibility to share it with other containers - `\\\"container:<name|id>\\\"`: join another (shareable) container's IPC namespace - `\\\"host\\\"`: use the host system's IPC namespace  If not specified, daemon default is used, which can either be `\\\"private\\\"` or `\\\"shareable\\\"`, depending on daemon version and configuration. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":248710,"byte_end":249255,"line_start":6404,"line_end":6404,"column_start":5,"column_end":550}},{"value":"serde(rename = \"IpcMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249260,"byte_end":249288,"line_start":6405,"line_end":6405,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249293,"byte_end":249340,"line_start":6406,"line_end":6406,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15487},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249509,"byte_end":249515,"line_start":6412,"line_end":6412,"column_start":9,"column_end":15},"name":"cgroup","qualname":"::models::HostConfig::cgroup","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Cgroup to use for the container.\n","sig":null,"attributes":[{"value":"/ Cgroup to use for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249380,"byte_end":249416,"line_start":6409,"line_end":6409,"column_start":5,"column_end":41}},{"value":"serde(rename = \"Cgroup\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249421,"byte_end":249448,"line_start":6410,"line_end":6410,"column_start":5,"column_end":32}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249453,"byte_end":249500,"line_start":6411,"line_end":6411,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15488},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249704,"byte_end":249709,"line_start":6417,"line_end":6417,"column_start":9,"column_end":14},"name":"links","qualname":"::models::HostConfig::links","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of links for the container in the form `container_name:alias`. \n","sig":null,"attributes":[{"value":"/ A list of links for the container in the form `container_name:alias`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249538,"byte_end":249612,"line_start":6414,"line_end":6414,"column_start":5,"column_end":79}},{"value":"serde(rename = \"Links\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249617,"byte_end":249643,"line_start":6415,"line_end":6415,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249648,"byte_end":249695,"line_start":6416,"line_end":6416,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15489},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249941,"byte_end":249954,"line_start":6422,"line_end":6422,"column_start":9,"column_end":22},"name":"oom_score_adj","qualname":"::models::HostConfig::oom_score_adj","value":"std::option::Option<i64>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" An integer value containing the score given to the container in order to tune OOM killer preferences. \n","sig":null,"attributes":[{"value":"/ An integer value containing the score given to the container in order to tune OOM killer preferences. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249737,"byte_end":249843,"line_start":6419,"line_end":6419,"column_start":5,"column_end":111}},{"value":"serde(rename = \"OomScoreAdj\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249848,"byte_end":249880,"line_start":6420,"line_end":6420,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249885,"byte_end":249932,"line_start":6421,"line_end":6421,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15490},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250280,"byte_end":250288,"line_start":6427,"line_end":6427,"column_start":9,"column_end":17},"name":"pid_mode","qualname":"::models::HostConfig::pid_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Set the PID (Process) Namespace mode for the container. It can be either:  - `\\\"container:<name|id>\\\"`: joins another container's PID namespace - `\\\"host\\\"`: use the host's PID namespace inside the container \n","sig":null,"attributes":[{"value":"/ Set the PID (Process) Namespace mode for the container. It can be either:  - `\\\"container:<name|id>\\\"`: joins another container's PID namespace - `\\\"host\\\"`: use the host's PID namespace inside the container ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":249974,"byte_end":250186,"line_start":6424,"line_end":6424,"column_start":5,"column_end":217}},{"value":"serde(rename = \"PidMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250191,"byte_end":250219,"line_start":6425,"line_end":6425,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250224,"byte_end":250271,"line_start":6426,"line_end":6426,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15491},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250456,"byte_end":250466,"line_start":6432,"line_end":6432,"column_start":9,"column_end":19},"name":"privileged","qualname":"::models::HostConfig::privileged","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Gives the container full access to the host.\n","sig":null,"attributes":[{"value":"/ Gives the container full access to the host.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250311,"byte_end":250359,"line_start":6429,"line_end":6429,"column_start":5,"column_end":53}},{"value":"serde(rename = \"Privileged\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250364,"byte_end":250395,"line_start":6430,"line_end":6430,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250400,"byte_end":250447,"line_start":6431,"line_end":6431,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15492},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250991,"byte_end":251008,"line_start":6437,"line_end":6437,"column_start":9,"column_end":26},"name":"publish_all_ports","qualname":"::models::HostConfig::publish_all_ports","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Allocates an ephemeral host port for all of a container's exposed ports.  Ports are de-allocated when the container stops and allocated when the container starts. The allocated port might be changed when restarting the container.  The port is selected from the ephemeral port range that depends on the kernel. For example, on Linux the range is defined by `/proc/sys/net/ipv4/ip_local_port_range`. \n","sig":null,"attributes":[{"value":"/ Allocates an ephemeral host port for all of a container's exposed ports.  Ports are de-allocated when the container stops and allocated when the container starts. The allocated port might be changed when restarting the container.  The port is selected from the ephemeral port range that depends on the kernel. For example, on Linux the range is defined by `/proc/sys/net/ipv4/ip_local_port_range`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250487,"byte_end":250889,"line_start":6434,"line_end":6434,"column_start":5,"column_end":407}},{"value":"serde(rename = \"PublishAllPorts\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250894,"byte_end":250930,"line_start":6435,"line_end":6435,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":250935,"byte_end":250982,"line_start":6436,"line_end":6436,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15493},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251185,"byte_end":251200,"line_start":6442,"line_end":6442,"column_start":9,"column_end":24},"name":"readonly_rootfs","qualname":"::models::HostConfig::readonly_rootfs","value":"std::option::Option<bool>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Mount the container's root filesystem as read only.\n","sig":null,"attributes":[{"value":"/ Mount the container's root filesystem as read only.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251029,"byte_end":251084,"line_start":6439,"line_end":6439,"column_start":5,"column_end":60}},{"value":"serde(rename = \"ReadonlyRootfs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251089,"byte_end":251124,"line_start":6440,"line_end":6440,"column_start":5,"column_end":40}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251129,"byte_end":251176,"line_start":6441,"line_end":6441,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15494},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251400,"byte_end":251412,"line_start":6447,"line_end":6447,"column_start":9,"column_end":21},"name":"security_opt","qualname":"::models::HostConfig::security_opt","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of string values to customize labels for MLS systems, such as SELinux.\n","sig":null,"attributes":[{"value":"/ A list of string values to customize labels for MLS systems, such as SELinux.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251221,"byte_end":251302,"line_start":6444,"line_end":6444,"column_start":5,"column_end":86}},{"value":"serde(rename = \"SecurityOpt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251307,"byte_end":251339,"line_start":6445,"line_end":6445,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251344,"byte_end":251391,"line_start":6446,"line_end":6446,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15495},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251620,"byte_end":251631,"line_start":6452,"line_end":6452,"column_start":9,"column_end":20},"name":"storage_opt","qualname":"::models::HostConfig::storage_opt","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Storage driver options for this container, in the form `{\\\"size\\\": \\\"120G\\\"}`. \n","sig":null,"attributes":[{"value":"/ Storage driver options for this container, in the form `{\\\"size\\\": \\\"120G\\\"}`. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251440,"byte_end":251523,"line_start":6449,"line_end":6449,"column_start":5,"column_end":88}},{"value":"serde(rename = \"StorageOpt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251528,"byte_end":251559,"line_start":6450,"line_end":6450,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251564,"byte_end":251611,"line_start":6451,"line_end":6451,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15496},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251948,"byte_end":251953,"line_start":6457,"line_end":6457,"column_start":9,"column_end":14},"name":"tmpfs","qualname":"::models::HostConfig::tmpfs","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A map of container directories which should be replaced by tmpfs mounts, and their corresponding mount options. For example:  ``` { \\\"/run\\\": \\\"rw,noexec,nosuid,size=65536k\\\" } ``` \n","sig":null,"attributes":[{"value":"/ A map of container directories which should be replaced by tmpfs mounts, and their corresponding mount options. For example:  ``` { \\\"/run\\\": \\\"rw,noexec,nosuid,size=65536k\\\" } ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251671,"byte_end":251856,"line_start":6454,"line_end":6454,"column_start":5,"column_end":190}},{"value":"serde(rename = \"Tmpfs\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251861,"byte_end":251887,"line_start":6455,"line_end":6455,"column_start":5,"column_end":31}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251892,"byte_end":251939,"line_start":6456,"line_end":6456,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15497},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252130,"byte_end":252138,"line_start":6462,"line_end":6462,"column_start":9,"column_end":17},"name":"uts_mode","qualname":"::models::HostConfig::uts_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" UTS namespace to use for the container.\n","sig":null,"attributes":[{"value":"/ UTS namespace to use for the container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":251993,"byte_end":252036,"line_start":6459,"line_end":6459,"column_start":5,"column_end":48}},{"value":"serde(rename = \"UTSMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252041,"byte_end":252069,"line_start":6460,"line_end":6460,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252074,"byte_end":252121,"line_start":6461,"line_end":6461,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15498},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252356,"byte_end":252367,"line_start":6467,"line_end":6467,"column_start":9,"column_end":20},"name":"userns_mode","qualname":"::models::HostConfig::userns_mode","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Sets the usernamespace mode for the container when usernamespace remapping option is enabled. \n","sig":null,"attributes":[{"value":"/ Sets the usernamespace mode for the container when usernamespace remapping option is enabled. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252161,"byte_end":252259,"line_start":6464,"line_end":6464,"column_start":5,"column_end":103}},{"value":"serde(rename = \"UsernsMode\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252264,"byte_end":252295,"line_start":6465,"line_end":6465,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252300,"byte_end":252347,"line_start":6466,"line_end":6466,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15499},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252551,"byte_end":252559,"line_start":6472,"line_end":6472,"column_start":9,"column_end":17},"name":"shm_size","qualname":"::models::HostConfig::shm_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Size of `/dev/shm` in bytes. If omitted, the system uses 64MB. \n","sig":null,"attributes":[{"value":"/ Size of `/dev/shm` in bytes. If omitted, the system uses 64MB. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252390,"byte_end":252457,"line_start":6469,"line_end":6469,"column_start":5,"column_end":72}},{"value":"serde(rename = \"ShmSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252462,"byte_end":252490,"line_start":6470,"line_end":6470,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252495,"byte_end":252542,"line_start":6471,"line_end":6471,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15500},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252797,"byte_end":252804,"line_start":6477,"line_end":6477,"column_start":9,"column_end":16},"name":"sysctls","qualname":"::models::HostConfig::sysctls","value":"std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" A list of kernel parameters (sysctls) to set in the container. For example:  ``` {\\\"net.ipv4.ip_forward\\\": \\\"1\\\"} ``` \n","sig":null,"attributes":[{"value":"/ A list of kernel parameters (sysctls) to set in the container. For example:  ``` {\\\"net.ipv4.ip_forward\\\": \\\"1\\\"} ``` ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252581,"byte_end":252703,"line_start":6474,"line_end":6474,"column_start":5,"column_end":127}},{"value":"serde(rename = \"Sysctls\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252708,"byte_end":252736,"line_start":6475,"line_end":6475,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252741,"byte_end":252788,"line_start":6476,"line_end":6476,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15501},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252977,"byte_end":252984,"line_start":6482,"line_end":6482,"column_start":9,"column_end":16},"name":"runtime","qualname":"::models::HostConfig::runtime","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Runtime to use with this container.\n","sig":null,"attributes":[{"value":"/ Runtime to use with this container.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252844,"byte_end":252883,"line_start":6479,"line_end":6479,"column_start":5,"column_end":44}},{"value":"serde(rename = \"Runtime\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252888,"byte_end":252916,"line_start":6480,"line_end":6480,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":252921,"byte_end":252968,"line_start":6481,"line_end":6481,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15502},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253177,"byte_end":253189,"line_start":6487,"line_end":6487,"column_start":9,"column_end":21},"name":"console_size","qualname":"::models::HostConfig::console_size","value":"std::option::Option<std::vec::Vec<i32>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Initial console size, as an `[height, width]` array. (Windows only) \n","sig":null,"attributes":[{"value":"/ Initial console size, as an `[height, width]` array. (Windows only) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253007,"byte_end":253079,"line_start":6484,"line_end":6484,"column_start":5,"column_end":77}},{"value":"serde(rename = \"ConsoleSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253084,"byte_end":253116,"line_start":6485,"line_end":6485,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253121,"byte_end":253168,"line_start":6486,"line_end":6486,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15503},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253368,"byte_end":253377,"line_start":6492,"line_end":6492,"column_start":9,"column_end":18},"name":"isolation","qualname":"::models::HostConfig::isolation","value":"std::option::Option<models::HostConfigIsolationEnum>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" Isolation technology of the container. (Windows only) \n","sig":null,"attributes":[{"value":"/ Isolation technology of the container. (Windows only) ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253214,"byte_end":253272,"line_start":6489,"line_end":6489,"column_start":5,"column_end":63}},{"value":"serde(rename = \"Isolation\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253277,"byte_end":253307,"line_start":6490,"line_end":6490,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253312,"byte_end":253359,"line_start":6491,"line_end":6491,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15504},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253614,"byte_end":253626,"line_start":6497,"line_end":6497,"column_start":9,"column_end":21},"name":"masked_paths","qualname":"::models::HostConfig::masked_paths","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The list of paths to be masked inside the container (this overrides the default set of paths). \n","sig":null,"attributes":[{"value":"/ The list of paths to be masked inside the container (this overrides the default set of paths). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253417,"byte_end":253516,"line_start":6494,"line_end":6494,"column_start":5,"column_end":104}},{"value":"serde(rename = \"MaskedPaths\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253521,"byte_end":253553,"line_start":6495,"line_end":6495,"column_start":5,"column_end":37}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253558,"byte_end":253605,"line_start":6496,"line_end":6496,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15505},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253863,"byte_end":253877,"line_start":6502,"line_end":6502,"column_start":9,"column_end":23},"name":"readonly_paths","qualname":"::models::HostConfig::readonly_paths","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15435},"children":[],"decl_id":null,"docs":" The list of paths to be set as read-only inside the container (this overrides the default set of paths). \n","sig":null,"attributes":[{"value":"/ The list of paths to be set as read-only inside the container (this overrides the default set of paths). ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253654,"byte_end":253763,"line_start":6499,"line_end":6499,"column_start":5,"column_end":114}},{"value":"serde(rename = \"ReadonlyPaths\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253768,"byte_end":253802,"line_start":6500,"line_end":6500,"column_start":5,"column_end":39}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253807,"byte_end":253854,"line_start":6501,"line_end":6501,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15702},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254087,"byte_end":254092,"line_start":6510,"line_end":6510,"column_start":5,"column_end":10},"name":"EMPTY","qualname":"::models::HostConfigIsolationEnum::EMPTY","value":"HostConfigIsolationEnum::EMPTY","parent":{"krate":0,"index":15701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254061,"byte_end":254082,"line_start":6509,"line_end":6509,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15704},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254131,"byte_end":254138,"line_start":6512,"line_end":6512,"column_start":5,"column_end":12},"name":"DEFAULT","qualname":"::models::HostConfigIsolationEnum::DEFAULT","value":"HostConfigIsolationEnum::DEFAULT","parent":{"krate":0,"index":15701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"default\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254098,"byte_end":254126,"line_start":6511,"line_end":6511,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15706},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254177,"byte_end":254184,"line_start":6514,"line_end":6514,"column_start":5,"column_end":12},"name":"PROCESS","qualname":"::models::HostConfigIsolationEnum::PROCESS","value":"HostConfigIsolationEnum::PROCESS","parent":{"krate":0,"index":15701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"process\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254144,"byte_end":254172,"line_start":6513,"line_end":6513,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15708},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254222,"byte_end":254228,"line_start":6516,"line_end":6516,"column_start":5,"column_end":11},"name":"HYPERV","qualname":"::models::HostConfigIsolationEnum::HYPERV","value":"HostConfigIsolationEnum::HYPERV","parent":{"krate":0,"index":15701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"hyperv\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254190,"byte_end":254217,"line_start":6515,"line_end":6515,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":15701},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254030,"byte_end":254053,"line_start":6508,"line_end":6508,"column_start":10,"column_end":33},"name":"HostConfigIsolationEnum","qualname":"::models::HostConfigIsolationEnum","value":"pub enum HostConfigIsolationEnum {\n\n    #[serde(rename = \"\")]\n    EMPTY,\n\n    #[serde(rename = \"default\")]\n    DEFAULT,\n\n    #[serde(rename = \"process\")]\n    PROCESS,\n\n    #[serde(rename = \"hyperv\")]\n    HYPERV,\n}","parent":null,"children":[{"krate":0,"index":15702},{"krate":0,"index":15704},{"krate":0,"index":15706},{"krate":0,"index":15708}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":253904,"byte_end":253934,"line_start":6506,"line_end":6506,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":15774},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255599,"byte_end":255604,"line_start":6556,"line_end":6556,"column_start":12,"column_end":17},"name":"Swarm","qualname":"::models::Swarm","value":"Swarm { id, version, created_at, updated_at, spec, tls_info, root_rotation_in_progress, data_path_port, default_addr_pool, subnet_size, join_tokens }","parent":null,"children":[{"krate":0,"index":15775},{"krate":0,"index":15776},{"krate":0,"index":15777},{"krate":0,"index":15778},{"krate":0,"index":15779},{"krate":0,"index":15780},{"krate":0,"index":15781},{"krate":0,"index":15782},{"krate":0,"index":15783},{"krate":0,"index":15784},{"krate":0,"index":15785}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":15775},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255724,"byte_end":255726,"line_start":6560,"line_end":6560,"column_start":9,"column_end":11},"name":"id","qualname":"::models::Swarm::id","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" The ID of the swarm.\n","sig":null,"attributes":[{"value":"/ The ID of the swarm.","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255611,"byte_end":255635,"line_start":6557,"line_end":6557,"column_start":5,"column_end":29}},{"value":"serde(rename = \"ID\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255640,"byte_end":255663,"line_start":6558,"line_end":6558,"column_start":5,"column_end":28}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255668,"byte_end":255715,"line_start":6559,"line_end":6559,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15776},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255838,"byte_end":255845,"line_start":6564,"line_end":6564,"column_start":9,"column_end":16},"name":"version","qualname":"::models::Swarm::version","value":"std::option::Option<models::ObjectVersion>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Version\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255749,"byte_end":255777,"line_start":6562,"line_end":6562,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255782,"byte_end":255829,"line_start":6563,"line_end":6563,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15777},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256102,"byte_end":256112,"line_start":6569,"line_end":6569,"column_start":9,"column_end":19},"name":"created_at","qualname":"::models::Swarm::created_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" Date and time at which the swarm was initialised in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the swarm was initialised in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255875,"byte_end":256006,"line_start":6566,"line_end":6566,"column_start":5,"column_end":136}},{"value":"serde(rename = \"CreatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256011,"byte_end":256041,"line_start":6567,"line_end":6567,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256046,"byte_end":256093,"line_start":6568,"line_end":6568,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15778},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256370,"byte_end":256380,"line_start":6574,"line_end":6574,"column_start":9,"column_end":19},"name":"updated_at","qualname":"::models::Swarm::updated_at","value":"std::option::Option<chrono::DateTime<chrono::Utc>>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" Date and time at which the swarm was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. \n","sig":null,"attributes":[{"value":"/ Date and time at which the swarm was last updated in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256142,"byte_end":256274,"line_start":6571,"line_end":6571,"column_start":5,"column_end":137}},{"value":"serde(rename = \"UpdatedAt\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256279,"byte_end":256309,"line_start":6572,"line_end":6572,"column_start":5,"column_end":35}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256314,"byte_end":256361,"line_start":6573,"line_end":6573,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15779},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256496,"byte_end":256500,"line_start":6578,"line_end":6578,"column_start":9,"column_end":13},"name":"spec","qualname":"::models::Swarm::spec","value":"std::option::Option<models::SwarmSpec>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"Spec\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256410,"byte_end":256435,"line_start":6576,"line_end":6576,"column_start":5,"column_end":30}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256440,"byte_end":256487,"line_start":6577,"line_end":6577,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15780},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256615,"byte_end":256623,"line_start":6582,"line_end":6582,"column_start":9,"column_end":17},"name":"tls_info","qualname":"::models::Swarm::tls_info","value":"std::option::Option<models::TlsInfo>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"TLSInfo\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256526,"byte_end":256554,"line_start":6580,"line_end":6580,"column_start":5,"column_end":33}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256559,"byte_end":256606,"line_start":6581,"line_end":6581,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15781},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256832,"byte_end":256857,"line_start":6587,"line_end":6587,"column_start":9,"column_end":34},"name":"root_rotation_in_progress","qualname":"::models::Swarm::root_rotation_in_progress","value":"std::option::Option<bool>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" Whether there is currently a root CA rotation in progress for the swarm \n","sig":null,"attributes":[{"value":"/ Whether there is currently a root CA rotation in progress for the swarm ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256647,"byte_end":256723,"line_start":6584,"line_end":6584,"column_start":5,"column_end":81}},{"value":"serde(rename = \"RootRotationInProgress\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256728,"byte_end":256771,"line_start":6585,"line_end":6585,"column_start":5,"column_end":48}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256776,"byte_end":256823,"line_start":6586,"line_end":6586,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15782},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257155,"byte_end":257169,"line_start":6592,"line_end":6592,"column_start":9,"column_end":23},"name":"data_path_port","qualname":"::models::Swarm::data_path_port","value":"std::option::Option<u32>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. If no port is set or is set to 0, the default port (4789) is used. \n","sig":null,"attributes":[{"value":"/ DataPathPort specifies the data path port number for data traffic. Acceptable port range is 1024 to 49151. If no port is set or is set to 0, the default port (4789) is used. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":256878,"byte_end":257056,"line_start":6589,"line_end":6589,"column_start":5,"column_end":183}},{"value":"serde(rename = \"DataPathPort\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257061,"byte_end":257094,"line_start":6590,"line_end":6590,"column_start":5,"column_end":38}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257099,"byte_end":257146,"line_start":6591,"line_end":6591,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15783},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257374,"byte_end":257391,"line_start":6597,"line_end":6597,"column_start":9,"column_end":26},"name":"default_addr_pool","qualname":"::models::Swarm::default_addr_pool","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" Default Address Pool specifies default subnet pools for global scope networks. \n","sig":null,"attributes":[{"value":"/ Default Address Pool specifies default subnet pools for global scope networks. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257189,"byte_end":257272,"line_start":6594,"line_end":6594,"column_start":5,"column_end":88}},{"value":"serde(rename = \"DefaultAddrPool\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257277,"byte_end":257313,"line_start":6595,"line_end":6595,"column_start":5,"column_end":41}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257318,"byte_end":257365,"line_start":6596,"line_end":6596,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15784},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257611,"byte_end":257622,"line_start":6602,"line_end":6602,"column_start":9,"column_end":20},"name":"subnet_size","qualname":"::models::Swarm::subnet_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":" SubnetSize specifies the subnet size of the networks created from the default subnet pool. \n","sig":null,"attributes":[{"value":"/ SubnetSize specifies the subnet size of the networks created from the default subnet pool. ","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257419,"byte_end":257514,"line_start":6599,"line_end":6599,"column_start":5,"column_end":100}},{"value":"serde(rename = \"SubnetSize\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257519,"byte_end":257550,"line_start":6600,"line_end":6600,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257555,"byte_end":257602,"line_start":6601,"line_end":6601,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":15785},"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257734,"byte_end":257745,"line_start":6606,"line_end":6606,"column_start":9,"column_end":20},"name":"join_tokens","qualname":"::models::Swarm::join_tokens","value":"std::option::Option<models::JoinTokens>","parent":{"krate":0,"index":15774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"JoinTokens\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257642,"byte_end":257673,"line_start":6604,"line_end":6604,"column_start":5,"column_end":36}},{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":257678,"byte_end":257725,"line_start":6605,"line_end":6605,"column_start":5,"column_end":52}}]}],"impls":[{"id":44,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29261,"byte_end":29285,"line_start":769,"line_end":769,"column_start":30,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":30032,"byte_end":30056,"line_start":785,"line_end":785,"column_start":30,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":30770,"byte_end":30794,"line_start":802,"line_end":802,"column_start":37,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42768,"byte_end":42798,"line_start":1160,"line_end":1160,"column_start":30,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":43241,"byte_end":43271,"line_start":1172,"line_end":1172,"column_start":30,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":43733,"byte_end":43763,"line_start":1185,"line_end":1185,"column_start":37,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44389,"byte_end":44422,"line_start":1207,"line_end":1207,"column_start":30,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44807,"byte_end":44840,"line_start":1218,"line_end":1218,"column_start":30,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45257,"byte_end":45290,"line_start":1230,"line_end":1230,"column_start":37,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48842,"byte_end":48862,"line_start":1333,"line_end":1333,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49202,"byte_end":49222,"line_start":1344,"line_end":1344,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49594,"byte_end":49614,"line_start":1356,"line_end":1356,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58294,"byte_end":58310,"line_start":1620,"line_end":1620,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58788,"byte_end":58804,"line_start":1633,"line_end":1633,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":59288,"byte_end":59304,"line_start":1647,"line_end":1647,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63890,"byte_end":63917,"line_start":1776,"line_end":1776,"column_start":30,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":64840,"byte_end":64867,"line_start":1794,"line_end":1794,"column_start":30,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":65731,"byte_end":65758,"line_start":1813,"line_end":1813,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75544,"byte_end":75558,"line_start":2121,"line_end":2121,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76092,"byte_end":76106,"line_start":2134,"line_end":2134,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79492,"byte_end":79505,"line_start":2223,"line_end":2223,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79952,"byte_end":79965,"line_start":2236,"line_end":2236,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80418,"byte_end":80431,"line_start":2250,"line_end":2250,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81777,"byte_end":81808,"line_start":2296,"line_end":2296,"column_start":30,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":82523,"byte_end":82554,"line_start":2311,"line_end":2311,"column_start":30,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83249,"byte_end":83280,"line_start":2327,"line_end":2327,"column_start":37,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102465,"byte_end":102481,"line_start":2804,"line_end":2804,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102819,"byte_end":102835,"line_start":2815,"line_end":2815,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103205,"byte_end":103221,"line_start":2827,"line_end":2827,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103792,"byte_end":103816,"line_start":2850,"line_end":2850,"column_start":30,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":104247,"byte_end":104271,"line_start":2862,"line_end":2862,"column_start":30,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":104721,"byte_end":104745,"line_start":2875,"line_end":2875,"column_start":37,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105602,"byte_end":105611,"line_start":2904,"line_end":2904,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106006,"byte_end":106015,"line_start":2915,"line_end":2915,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112524,"byte_end":112563,"line_start":3116,"line_end":3116,"column_start":30,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112912,"byte_end":112951,"line_start":3126,"line_end":3126,"column_start":30,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113339,"byte_end":113378,"line_start":3137,"line_end":3137,"column_start":37,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119940,"byte_end":119952,"line_start":3366,"line_end":3366,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":120323,"byte_end":120335,"line_start":3378,"line_end":3378,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":120725,"byte_end":120737,"line_start":3391,"line_end":3391,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124101,"byte_end":124113,"line_start":3493,"line_end":3493,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124467,"byte_end":124479,"line_start":3503,"line_end":3503,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139247,"byte_end":139268,"line_start":3787,"line_end":3787,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139785,"byte_end":139806,"line_start":3800,"line_end":3800,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":140323,"byte_end":140344,"line_start":3814,"line_end":3814,"column_start":37,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149722,"byte_end":149764,"line_start":4075,"line_end":4075,"column_start":30,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":150180,"byte_end":150222,"line_start":4086,"line_end":4086,"column_start":30,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":150670,"byte_end":150712,"line_start":4098,"line_end":4098,"column_start":37,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151349,"byte_end":151383,"line_start":4119,"line_end":4119,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151791,"byte_end":151825,"line_start":4130,"line_end":4130,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152265,"byte_end":152299,"line_start":4142,"line_end":4142,"column_start":37,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154601,"byte_end":154641,"line_start":4200,"line_end":4200,"column_start":30,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":155146,"byte_end":155186,"line_start":4212,"line_end":4212,"column_start":30,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":155710,"byte_end":155750,"line_start":4225,"line_end":4225,"column_start":37,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156457,"byte_end":156489,"line_start":4247,"line_end":4247,"column_start":30,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156891,"byte_end":156923,"line_start":4258,"line_end":4258,"column_start":30,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157357,"byte_end":157389,"line_start":4270,"line_end":4270,"column_start":37,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159164,"byte_end":159192,"line_start":4329,"line_end":4329,"column_start":30,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159952,"byte_end":159980,"line_start":4344,"line_end":4344,"column_start":30,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":160720,"byte_end":160748,"line_start":4360,"line_end":4360,"column_start":37,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166857,"byte_end":166897,"line_start":4522,"line_end":4522,"column_start":30,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167212,"byte_end":167252,"line_start":4532,"line_end":4532,"column_start":30,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167612,"byte_end":167652,"line_start":4543,"line_end":4543,"column_start":37,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191186,"byte_end":191212,"line_start":5025,"line_end":5025,"column_start":30,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191657,"byte_end":191683,"line_start":5037,"line_end":5037,"column_start":30,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192147,"byte_end":192173,"line_start":5050,"line_end":5050,"column_start":37,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192841,"byte_end":192864,"line_start":5074,"line_end":5074,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":193299,"byte_end":193322,"line_start":5086,"line_end":5086,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":193776,"byte_end":193799,"line_start":5099,"line_end":5099,"column_start":37,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206887,"byte_end":206921,"line_start":5442,"line_end":5442,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":207400,"byte_end":207434,"line_start":5454,"line_end":5454,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":207932,"byte_end":207966,"line_start":5467,"line_end":5467,"column_start":37,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222727,"byte_end":222761,"line_start":5793,"line_end":5793,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":223234,"byte_end":223268,"line_start":5805,"line_end":5805,"column_start":30,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":223760,"byte_end":223794,"line_start":5818,"line_end":5818,"column_start":37,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225159,"byte_end":225168,"line_start":5868,"line_end":5868,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":226251,"byte_end":226260,"line_start":5890,"line_end":5890,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231868,"byte_end":231883,"line_start":6054,"line_end":6054,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232214,"byte_end":232229,"line_start":6065,"line_end":6065,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232592,"byte_end":232607,"line_start":6077,"line_end":6077,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254262,"byte_end":254285,"line_start":6519,"line_end":6519,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254720,"byte_end":254743,"line_start":6531,"line_end":6531,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255197,"byte_end":255220,"line_start":6544,"line_end":6544,"column_start":37,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/lib.rs","byte_start":263,"byte_end":269,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":29261,"byte_end":29285,"line_start":769,"line_end":769,"column_start":30,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1834},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":30032,"byte_end":30056,"line_start":785,"line_end":785,"column_start":30,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1834},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":30770,"byte_end":30794,"line_start":802,"line_end":802,"column_start":37,"column_end":61},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1834},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":42768,"byte_end":42798,"line_start":1160,"line_end":1160,"column_start":30,"column_end":60},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":43241,"byte_end":43271,"line_start":1172,"line_end":1172,"column_start":30,"column_end":60},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":43733,"byte_end":43763,"line_start":1185,"line_end":1185,"column_start":37,"column_end":67},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44389,"byte_end":44422,"line_start":1207,"line_end":1207,"column_start":30,"column_end":63},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":44807,"byte_end":44840,"line_start":1218,"line_end":1218,"column_start":30,"column_end":63},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":45257,"byte_end":45290,"line_start":1230,"line_end":1230,"column_start":37,"column_end":70},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":48842,"byte_end":48862,"line_start":1333,"line_end":1333,"column_start":30,"column_end":50},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49202,"byte_end":49222,"line_start":1344,"line_end":1344,"column_start":30,"column_end":50},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":49594,"byte_end":49614,"line_start":1356,"line_end":1356,"column_start":37,"column_end":57},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3311},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58294,"byte_end":58310,"line_start":1620,"line_end":1620,"column_start":30,"column_end":46},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4197},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":58788,"byte_end":58804,"line_start":1633,"line_end":1633,"column_start":30,"column_end":46},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4197},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":59288,"byte_end":59304,"line_start":1647,"line_end":1647,"column_start":37,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4197},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":63890,"byte_end":63917,"line_start":1776,"line_end":1776,"column_start":30,"column_end":57},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4568},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":64840,"byte_end":64867,"line_start":1794,"line_end":1794,"column_start":30,"column_end":57},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4568},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":65731,"byte_end":65758,"line_start":1813,"line_end":1813,"column_start":37,"column_end":64},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4568},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":75544,"byte_end":75558,"line_start":2121,"line_end":2121,"column_start":30,"column_end":44},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5615},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":76092,"byte_end":76106,"line_start":2134,"line_end":2134,"column_start":30,"column_end":44},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5615},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79492,"byte_end":79505,"line_start":2223,"line_end":2223,"column_start":30,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5841},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":79952,"byte_end":79965,"line_start":2236,"line_end":2236,"column_start":30,"column_end":43},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5841},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":80418,"byte_end":80431,"line_start":2250,"line_end":2250,"column_start":37,"column_end":50},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5841},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":81777,"byte_end":81808,"line_start":2296,"line_end":2296,"column_start":30,"column_end":61},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5980},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":82523,"byte_end":82554,"line_start":2311,"line_end":2311,"column_start":30,"column_end":61},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5980},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":83249,"byte_end":83280,"line_start":2327,"line_end":2327,"column_start":37,"column_end":68},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5980},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102465,"byte_end":102481,"line_start":2804,"line_end":2804,"column_start":30,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7160},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":102819,"byte_end":102835,"line_start":2815,"line_end":2815,"column_start":30,"column_end":46},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7160},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103205,"byte_end":103221,"line_start":2827,"line_end":2827,"column_start":37,"column_end":53},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7160},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":103792,"byte_end":103816,"line_start":2850,"line_end":2850,"column_start":30,"column_end":54},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7229},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":104247,"byte_end":104271,"line_start":2862,"line_end":2862,"column_start":30,"column_end":54},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7229},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":104721,"byte_end":104745,"line_start":2875,"line_end":2875,"column_start":37,"column_end":61},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7229},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":105602,"byte_end":105611,"line_start":2904,"line_end":2904,"column_start":30,"column_end":39},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7302},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":106006,"byte_end":106015,"line_start":2915,"line_end":2915,"column_start":30,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":7302},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112524,"byte_end":112563,"line_start":3116,"line_end":3116,"column_start":30,"column_end":69},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":112912,"byte_end":112951,"line_start":3126,"line_end":3126,"column_start":30,"column_end":69},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":113339,"byte_end":113378,"line_start":3137,"line_end":3137,"column_start":37,"column_end":76},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":119940,"byte_end":119952,"line_start":3366,"line_end":3366,"column_start":30,"column_end":42},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":120323,"byte_end":120335,"line_start":3378,"line_end":3378,"column_start":30,"column_end":42},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":120725,"byte_end":120737,"line_start":3391,"line_end":3391,"column_start":37,"column_end":49},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":9125},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124101,"byte_end":124113,"line_start":3493,"line_end":3493,"column_start":30,"column_end":42},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":9461},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":124467,"byte_end":124479,"line_start":3503,"line_end":3503,"column_start":30,"column_end":42},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":9461},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139247,"byte_end":139268,"line_start":3787,"line_end":3787,"column_start":30,"column_end":51},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":139785,"byte_end":139806,"line_start":3800,"line_end":3800,"column_start":30,"column_end":51},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":140323,"byte_end":140344,"line_start":3814,"line_end":3814,"column_start":37,"column_end":58},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":10007},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":149722,"byte_end":149764,"line_start":4075,"line_end":4075,"column_start":30,"column_end":72},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":10829},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":150180,"byte_end":150222,"line_start":4086,"line_end":4086,"column_start":30,"column_end":72},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":10829},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":150670,"byte_end":150712,"line_start":4098,"line_end":4098,"column_start":37,"column_end":79},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":10829},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151349,"byte_end":151383,"line_start":4119,"line_end":4119,"column_start":30,"column_end":64},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":10898},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":151791,"byte_end":151825,"line_start":4130,"line_end":4130,"column_start":30,"column_end":64},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":10898},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":152265,"byte_end":152299,"line_start":4142,"line_end":4142,"column_start":37,"column_end":71},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":10898},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":154601,"byte_end":154641,"line_start":4200,"line_end":4200,"column_start":30,"column_end":70},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":11041},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":155146,"byte_end":155186,"line_start":4212,"line_end":4212,"column_start":30,"column_end":70},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":11041},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":155710,"byte_end":155750,"line_start":4225,"line_end":4225,"column_start":37,"column_end":77},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":11041},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156457,"byte_end":156489,"line_start":4247,"line_end":4247,"column_start":30,"column_end":62},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":11114},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":156891,"byte_end":156923,"line_start":4258,"line_end":4258,"column_start":30,"column_end":62},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":11114},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":157357,"byte_end":157389,"line_start":4270,"line_end":4270,"column_start":37,"column_end":69},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":11114},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159164,"byte_end":159192,"line_start":4329,"line_end":4329,"column_start":30,"column_end":58},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":11310},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":159952,"byte_end":159980,"line_start":4344,"line_end":4344,"column_start":30,"column_end":58},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":11310},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":160720,"byte_end":160748,"line_start":4360,"line_end":4360,"column_start":37,"column_end":65},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":11310},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":166857,"byte_end":166897,"line_start":4522,"line_end":4522,"column_start":30,"column_end":70},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167212,"byte_end":167252,"line_start":4532,"line_end":4532,"column_start":30,"column_end":70},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":167612,"byte_end":167652,"line_start":4543,"line_end":4543,"column_start":37,"column_end":77},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":11697},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191186,"byte_end":191212,"line_start":5025,"line_end":5025,"column_start":30,"column_end":56},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":12633},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":191657,"byte_end":191683,"line_start":5037,"line_end":5037,"column_start":30,"column_end":56},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":12633},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192147,"byte_end":192173,"line_start":5050,"line_end":5050,"column_start":37,"column_end":63},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":12633},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":192841,"byte_end":192864,"line_start":5074,"line_end":5074,"column_start":30,"column_end":53},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":12706},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":193299,"byte_end":193322,"line_start":5086,"line_end":5086,"column_start":30,"column_end":53},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":12706},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":193776,"byte_end":193799,"line_start":5099,"line_end":5099,"column_start":37,"column_end":60},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":12706},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":206887,"byte_end":206921,"line_start":5442,"line_end":5442,"column_start":30,"column_end":64},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":13304},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":207400,"byte_end":207434,"line_start":5454,"line_end":5454,"column_start":30,"column_end":64},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":13304},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":207932,"byte_end":207966,"line_start":5467,"line_end":5467,"column_start":37,"column_end":71},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":13304},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":222727,"byte_end":222761,"line_start":5793,"line_end":5793,"column_start":30,"column_end":64},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":14414},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":223234,"byte_end":223268,"line_start":5805,"line_end":5805,"column_start":30,"column_end":64},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":14414},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":223760,"byte_end":223794,"line_start":5818,"line_end":5818,"column_start":37,"column_end":71},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":14414},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":225159,"byte_end":225168,"line_start":5868,"line_end":5868,"column_start":30,"column_end":39},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":14487},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":226251,"byte_end":226260,"line_start":5890,"line_end":5890,"column_start":30,"column_end":39},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":14487},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":231868,"byte_end":231883,"line_start":6054,"line_end":6054,"column_start":30,"column_end":45},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15074},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232214,"byte_end":232229,"line_start":6065,"line_end":6065,"column_start":30,"column_end":45},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15074},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":232592,"byte_end":232607,"line_start":6077,"line_end":6077,"column_start":37,"column_end":52},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15074},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254262,"byte_end":254285,"line_start":6519,"line_end":6519,"column_start":30,"column_end":53},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15701},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":254720,"byte_end":254743,"line_start":6531,"line_end":6531,"column_start":30,"column_end":53},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15701},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/ms/.cargo/registry/src/github.com-1ecc6299db9ec823/bollard-stubs-1.40.5/src/models.rs","byte_start":255197,"byte_end":255220,"line_start":6544,"line_end":6544,"column_start":37,"column_end":60},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15701},"to":{"krate":2,"index":1988}}]}